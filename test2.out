Sample size:  256
State size:  16
Action size:  14
bleu_diff
You select the reward based on the Bleu score differences
EPOCH %d 1
 beam_dqn, egreed, gamma:  1 0.5 0.6
rew:  [  0.           4.97870684  36.78794412  71.65313106 100.        ]

 Sample-------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4,  6,  7, 12,  3]]) [['9', '6', '4', '7']]
Eval  :  [[ 4  6  7 12  3]] [['9', '6', '4', '7']]
Reward:  [  4.97870684  31.80923728  34.86518694  28.34686894 100.        ] 

rew:  [  0.           1.83156389  22.31301601  51.3417119   77.88007831
 100.        ]

 Sample-------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 7, 13,  5, 12, 13,  3]]) [['4', '1', '5', '7', '1']]
Eval  :  [[ 7 13  5 12 13  3]] [['4', '1', '5', '7', '1']]
Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 100.        ] 

rew:  [  0.           4.97870684  36.78794412  71.65313106 100.        ]

 Sample-------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 9,  7,  9, 10,  3]]) [['2', '4', '2', '8']]
Eval  :  [[ 9  7  9 10  3]] [['2', '4', '2', '8']]
Reward:  [  4.97870684  31.80923728  34.86518694  28.34686894 100.        ] 

As referece this first test on dev data. Is maded with the Q networks, initialized randomly : 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  9  9  9  9  9  9  9  9  9]] [['8', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 1  4 12 12  4  9  9  9  9  9]] [['<pad>', '9', '7', '7', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.01412722  0.18373987 -0.02796267 -0.04080498 -0.00488055 -0.00862019
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12 11 12  9  9  9  9  9]] [['7', '7', '7', '0', '7', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1  r_total and score:  957.6457342409245 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
2  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
3  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
4  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
5  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
6  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
7  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
8  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
9  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
10  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
11  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
12  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
13  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
14  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
15  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
16  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
17  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
18  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
19  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
20  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
21  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
22  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
23  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
24  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
25  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
26  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
27  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
28  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
29  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
30  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0
EPOCH %d 2
 beam_dqn, egreed, gamma:  1 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
31  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
32  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
33  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
34  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
35  r_total and score:  487.5522506776671 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
36  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
37  r_total and score:  414.5039128862783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
38  r_total and score:  416.1034448227782 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
39  r_total and score:  568.7680522824389 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
40  r_total and score:  461.2363071511056 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
41  r_total and score:  791.4863745612803 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
42  r_total and score:  946.1877498972029 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
43  r_total and score:  791.6835208871961 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
44  r_total and score:  948.2511288202261 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
45  r_total and score:  951.6362803153501 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
46  r_total and score:  951.6362803153501 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
47  r_total and score:  948.2511288202261 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
48  r_total and score:  952.1939166475589 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
49  r_total and score:  956.504302312354 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
50  r_total and score:  951.6362803153501 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
51  r_total and score:  952.7515529797678 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
52  r_total and score:  952.7515529797678 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
53  r_total and score:  949.9002692700541 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
54  r_total and score:  953.5503456811593 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
55  r_total and score:  948.2654768416676 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
56  r_total and score:  953.1072244049445 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
57  r_total and score:  951.2566983036545 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
58  r_total and score:  953.1072244049445 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
59  r_total and score:  956.4913812794491 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
60  r_total and score:  959.8207691577204 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
61  r_total and score:  959.8207691577204 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
62  r_total and score:  959.2631328255117 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
63  r_total and score:  1005.2452930082834 0.0
Current Bleu score is:  0.0
EPOCH %d 3
 beam_dqn, egreed, gamma:  1 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
64  r_total and score:  963.7225994417835 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
65  r_total and score:  963.7225994417835 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 8 4 4 4 4 4 4 4]] [['9', '9', '3', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
66  r_total and score:  1088.1240003255457 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 8 4 4 4 4 4 4 4]] [['9', '9', '3', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
67  r_total and score:  1088.1582787824289 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 8 4 4 4 4 4 4 4]] [['9', '9', '3', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 8 4 4 4 4 4 4]] [['9', '9', '9', '3', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
68  r_total and score:  999.6063596384804 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 8 4 4 4 4 4 4 4]] [['9', '9', '3', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
69  r_total and score:  1088.0499727184704 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 8 4 4 4 4 4 4 4]] [['9', '9', '3', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 8 4 4 4 4 4 4]] [['9', '9', '9', '3', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
70  r_total and score:  1014.7697168126557 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
71  r_total and score:  976.9860896698005 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 8 8 4 4 4 4 4 4]] [['9', '9', '3', '3', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 4 4 4 4 4 4]] [['3', '9', '3', '3', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
72  r_total and score:  959.7965332414716 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 8 4 4 4 4 4 4 4]] [['9', '9', '3', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 4 4 8 4 4 4 4 4 4]] [['9', '9', '9', '3', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
73  r_total and score:  1031.316047770118 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 8 4 4 4 4 4 4 4]] [['9', '9', '3', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 4 4 4 4 4 4]] [['3', '9', '3', '3', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
74  r_total and score:  971.9248293038818 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 8 4 4 4 4 4 4 4]] [['9', '9', '3', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 4 4 4 4 4 4]] [['3', '9', '3', '3', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
75  r_total and score:  971.9248293038818 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 4 4 4 4 4 4 4 4 4]] [['3', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 8 8 4 4 4 4 4 4]] [['9', '9', '3', '3', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 4 4 4 4 4 4]] [['3', '9', '3', '3', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
76  r_total and score:  917.756556321812 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 8 4 4 4 4 4 4 4]] [['9', '9', '3', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 4 4 4 4 4 4]] [['3', '9', '3', '3', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
77  r_total and score:  972.4846277003926 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 4 4 4 4 4 4 4 4 4]] [['3', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 8 8 4 4 4 4 4 4]] [['9', '9', '3', '3', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 4 4 4 4 4 4]] [['3', '9', '3', '3', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
78  r_total and score:  863.2871893003291 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 4 4 4 4 4 4 4 4 4]] [['3', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 8 8 4 4 4 4 4 4]] [['9', '9', '3', '3', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 4 4 4 4 4 4]] [['3', '9', '3', '3', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
79  r_total and score:  881.662323526923 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 4 4 4 4 4 4 4 4 4]] [['3', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 4 4 4 4 4 4]] [['3', '3', '3', '3', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.01637845
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 4 4 4 4 4 4]] [['3', '3', '3', '3', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
80  r_total and score:  676.4780887167036 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 4 4 4 4 4 4 4 4 4]] [['3', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 4 4 4 4 4 4]] [['3', '3', '3', '3', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.01637845
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 4 4 4 4 4 4]] [['3', '9', '3', '3', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
81  r_total and score:  820.0504610609726 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
82  r_total and score:  555.3419196405309 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
83  r_total and score:  572.092364353031 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
84  r_total and score:  555.3419196405309 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
85  r_total and score:  556.4399022791176 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
86  r_total and score:  552.5950562568397 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 4 4 4 4 4 4 4 4]] [['3', '3', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
87  r_total and score:  572.2051493475957 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 4 4 4 4 4 4 4 4 4]] [['3', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 4 8 8 4 4 4 4 4 4]] [['3', '9', '3', '3', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 4 4 4 4 4 4]] [['3', '9', '3', '3', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
88  r_total and score:  850.8407968500848 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 4 4 4 4 4 4 4 4 4]] [['3', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 4 8 8 8 8 4 4 4 4]] [['3', '9', '3', '3', '3', '3', '9', '9', '9', '9']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.00488055 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 8 4 4 4 4 4]] [['3', '9', '3', '3', '3', '9', '9', '9', '9', '9']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
89  r_total and score:  620.7611421838375 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 4 4 4 4 4 4 4 4 4]] [['3', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 4 8 8 8 8 4 4 4 4]] [['3', '9', '3', '3', '3', '3', '9', '9', '9', '9']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.00488055 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 4 4 4 4 4 4]] [['3', '9', '3', '3', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
90  r_total and score:  654.1252766643474 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
91  r_total and score:  571.4496014718356 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 4 4 4 4 4 4 4 4]] [['3', '3', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 4 8 8 8 8 8 8 8 8]] [['3', '9', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 8 8 8 8 8 8]] [['3', '9', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
92  r_total and score:  626.4112846248765 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
93  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 4 4 4 4 4 4 4]] [['3', '3', '3', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 4 8 8 8 8 8 8 8 8]] [['3', '9', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 4 8 8 8 8 8]] [['3', '9', '3', '3', '9', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
94  r_total and score:  621.2407247279033 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 4 8 8 8 8 8 8 8 8]] [['3', '9', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 4 8 8 8 8 8]] [['3', '9', '3', '3', '9', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
95  r_total and score:  621.2407247279033 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
96  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0
EPOCH %d 4
 beam_dqn, egreed, gamma:  1 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
97  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
98  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
99  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
100  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
101  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
102  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
103  r_total and score:  611.6496263683059 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
104  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
105  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
106  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
107  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
108  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
109  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 4 8 8 8 8 8 8 8 8]] [['3', '9', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 4 8 8 8 8 8]] [['3', '9', '3', '3', '9', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
110  r_total and score:  611.6206303473814 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 4 8 8 8 8 8 8 8 8]] [['3', '9', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 4 8 8 8 8 8]] [['3', '9', '3', '3', '9', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
111  r_total and score:  611.6206303473814 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
112  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 4 8 8 8 8 8 8 8 8]] [['3', '9', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 4 8 8 8 8 8]] [['3', '9', '3', '3', '9', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
113  r_total and score:  611.6206303473814 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
114  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
115  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
116  r_total and score:  611.7323250908613 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 4 8 8 8 8 8 8 8 8]] [['3', '9', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 4 8 8 8 8 8]] [['3', '9', '3', '3', '9', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
117  r_total and score:  611.7153957371604 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
118  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
119  r_total and score:  571.5092261163193 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 4 8 8 8 8 8 8 8 8]] [['3', '9', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 4 8 8 8 8 8]] [['3', '9', '3', '3', '9', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
120  r_total and score:  611.1177654172465 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 4 8 8 8 8 8 8 8 8]] [['3', '9', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 4 8 8 8 8 8]] [['3', '9', '3', '3', '9', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
121  r_total and score:  611.9581933693589 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 4 8 8 8 8 8 8 8 8]] [['3', '9', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 4 8 8 8 8 8]] [['3', '9', '3', '3', '9', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
122  r_total and score:  611.6206303473814 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 4 8 8 8 8 8 8 8 8]] [['3', '9', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 4 8 8 8 8 8]] [['3', '9', '3', '3', '9', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
123  r_total and score:  611.6206303473814 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 4 8 8 8 8 8 8 8 8]] [['3', '9', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 4 8 8 8 8 8]] [['3', '9', '3', '3', '9', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
124  r_total and score:  616.0728450230291 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 4 8 8 8 8 8 8 8 8]] [['3', '9', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 4 8 8 8 8 8]] [['3', '9', '3', '3', '9', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
125  r_total and score:  631.0702783652364 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
126  r_total and score:  610.2794894044662 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
127  r_total and score:  571.5092261163193 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
128  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
129  r_total and score:  569.9716171003884 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 4 8 8 8 8 8 8 8 8]] [['3', '9', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 4 8 8 8 8 8]] [['3', '3', '3', '3', '9', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
130  r_total and score:  611.1177654172465 0.0
Current Bleu score is:  0.0
EPOCH %d 5
 beam_dqn, egreed, gamma:  1 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 4 8 8 8 8 8 8 8 8]] [['3', '9', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 8 8 4 8 8 8 8 8]] [['3', '9', '3', '3', '9', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
131  r_total and score:  611.2918155235624 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
132  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
133  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
134  r_total and score:  610.2794894044662 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
135  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
136  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
137  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
138  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
139  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
140  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
141  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
142  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
143  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
144  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
145  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
146  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
147  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
148  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
149  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
150  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
151  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
152  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
153  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
154  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
155  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
156  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
157  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
158  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
159  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
160  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
161  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
162  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
163  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0
EPOCH %d 6
 beam_dqn, egreed, gamma:  1 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
164  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
165  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
166  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
167  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
168  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
169  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
170  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
171  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
172  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
173  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
174  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
175  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
176  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
177  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
178  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
179  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
180  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
181  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
182  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
183  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
184  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
185  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
186  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
187  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
188  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
189  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
190  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
191  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
192  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
193  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
194  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
195  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
196  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0
EPOCH %d 7
 beam_dqn, egreed, gamma:  1 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
197  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
198  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
199  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
200  r_total and score:  551.5860084750603 0.0
Current Bleu score is:  0.0
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....
Starting using Q target net....

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 6 4 4 4 4 4 4 4 4]] [['5', '6', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[6 6 5 5 6 6 6 6 6 6]] [['6', '6', '5', '5', '6', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 6 5 6 6 6 6 6 6 6]] [['5', '6', '5', '6', '6', '6', '6', '6', '6', '6']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
201  r_total and score:  1176.1788933846356 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 10  4  4  4  4  4  4  4  4]] [['8', '8', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 10 10  4  4  4  4  4  4]] [['9', '8', '8', '8', '9', '9', '9', '9', '9', '9']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.06578356
  -0.30199064  -0.18238762  -0.12299585  -0.08883709   0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  4  4 10 10 10 10 10]] [['8', '8', '8', '9', '9', '8', '8', '8', '8', '8']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
202  r_total and score:  776.6562645786122 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 11 11 11 11 11 11 11 11 11]] [['5', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  5  5 11 11 11 11 11 11]] [['0', '8', '5', '5', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11 11 11 11 11 11 11]] [['5', '8', '5', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
203  r_total and score:  1939.8482990875964 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5  5 11 11 11 11 11 11 11 11]] [['5', '5', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 10  5 11 11 11 11 11 11]] [['0', '8', '8', '5', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11 11 10 11 11 11 11]] [['5', '8', '5', '0', '0', '8', '0', '0', '0', '0']] 

Reward:  [ 3.36897350e-01  1.31966310e+01  2.32544158e+01 -2.91612248e+01
 -7.42041723e-01 -1.87870735e-02 -1.31065241e+00 -8.83858291e-01
 -6.38390661e-01  4.03298912e+00]
204  r_total and score:  1125.059358846677 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 10 10 11 11 11 11 11 11 11]] [['8', '8', '8', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 10 10 11 11 11 11 11 11]] [['0', '8', '8', '8', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10 11 11 10 10 10 10 10]] [['8', '8', '8', '0', '0', '8', '8', '8', '8', '8']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
205  r_total and score:  372.3515291622023 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 11 11 11 11 11 11 11 11 11]] [['5', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 10  5 11 11 11 11 11 11]] [['0', '8', '8', '5', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 10 11 11 11 11 11 11 11]] [['5', '8', '8', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
206  r_total and score:  1187.6969273879354 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 11 11 11 11 11 11 11 11 11]] [['5', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 10  5 11 11 11 11 11 11]] [['0', '8', '8', '5', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 10 11 11 10 11 11 11 11]] [['5', '8', '8', '0', '0', '8', '0', '0', '0', '0']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
207  r_total and score:  1190.1702732256783 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 11 11 11 11 11 11 11 11 11]] [['5', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 10  5 11 11 11 11 11 11]] [['0', '8', '8', '5', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 10 11 11 11 11 11 11 11]] [['5', '8', '8', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
208  r_total and score:  1711.5603448295697 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 11 11 11 11 11 11 11 11 11]] [['5', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 10 10 11 11 11 11 11 11]] [['0', '8', '8', '8', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 10 11 11 11 11 11 11 11]] [['5', '8', '8', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
209  r_total and score:  1235.5703879529879 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 11 11 11 11 11 11 11 11 11]] [['5', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 10 10 11 11 11 11 11 11]] [['0', '8', '8', '8', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 10 11 11 11 11 11 11 11]] [['5', '8', '8', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
210  r_total and score:  1339.7574676687798 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 11 11 11 11 11 11 11 11 11]] [['5', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 10  5 11 11 11 11 11 11]] [['0', '8', '8', '5', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 10 11 11 11 11 11 11 11]] [['5', '8', '8', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
211  r_total and score:  1383.153216935928 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 11 11 11 11 11 11 11 11 11]] [['5', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 10  5 11 11 11 11 11 11]] [['0', '8', '8', '5', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 10 11 11 11 11 11 11 11]] [['5', '8', '8', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
212  r_total and score:  1898.9252267487898 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 11 11 11 11 11 11 11 11 11]] [['5', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 10  5 11 11 11 11 11 11]] [['0', '8', '8', '5', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 10 11 11 10 11 11 11 11]] [['5', '8', '8', '0', '0', '8', '0', '0', '0', '0']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
213  r_total and score:  1848.764452222717 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 5 5 5 5 5 5 5 5 5]] [['5', '5', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 10  5 11 11 11 11 11 11]] [['0', '8', '8', '5', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 10 11 11 10 11 11 11 11]] [['5', '8', '8', '0', '0', '8', '0', '0', '0', '0']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
214  r_total and score:  1139.8153984510477 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 5 5 5 5 5 5 5 5 5]] [['5', '5', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 10  5 11 11 11 11 11 11]] [['0', '8', '8', '5', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11 11 10  5  5  5  5]] [['5', '8', '5', '0', '0', '8', '5', '5', '5', '5']] 

Reward:  [ 3.36897350e-01  1.31966310e+01  2.32544158e+01 -2.91612248e+01
 -7.42041723e-01 -1.87870735e-02 -1.31065241e+00 -8.83858291e-01
 -6.38390661e-01  4.03298912e+00]
215  r_total and score:  1448.0709840204836 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 10  5  4  4  4  4  4  4  4]] [['8', '8', '5', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068  0.47961053 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 10 10 11  4  4  4  4  4]] [['9', '8', '8', '8', '0', '9', '9', '9', '9', '9']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.18699762
  -0.18077657  -0.18238762  -0.12299585  -0.08883709   0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  4 10 10 10 10 10 10]] [['8', '8', '8', '9', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
216  r_total and score:  485.28794440399025 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 5 4 4 4 4 4 4 4 4]] [['5', '5', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 10  5 11  4  4  4  4  4]] [['0', '8', '8', '5', '0', '9', '9', '9', '9', '9']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.03214713
 -0.02218243 -0.0235031  -0.01697575  0.10724315]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 10  4 11 10 10  4  4  4]] [['5', '8', '8', '9', '0', '8', '8', '9', '9', '9']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
217  r_total and score:  1171.0956550292658 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 5 5 5 5 5 5 5 5 5]] [['5', '5', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 10  5 11 11  4  4  4  4]] [['0', '8', '8', '5', '0', '0', '9', '9', '9', '9']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.01605517 -0.01325191 -0.01697575  0.10724315]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 10 11 11 10 10 10 10 10]] [['5', '8', '8', '0', '0', '8', '8', '8', '8', '8']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
218  r_total and score:  1160.496068852607 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 5 4 4 4 4 4 4 4 4]] [['5', '5', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 10  5 11  4  4  4  4  4]] [['0', '8', '8', '5', '0', '9', '9', '9', '9', '9']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.03214713
 -0.02218243 -0.0235031  -0.01697575  0.10724315]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 10  4 11 10 10  4  4  4]] [['5', '8', '8', '9', '0', '8', '8', '9', '9', '9']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
219  r_total and score:  1182.4813676567753 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 5 5 5 5 5 5 5 5 5]] [['5', '5', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  9  5 11  5  5  5  5  5]] [['0', '8', '2', '5', '0', '5', '5', '5', '5', '5']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5  5 11 10  5  5  5  5]] [['5', '8', '5', '5', '0', '8', '5', '5', '5', '5']] 

Reward:  [ 3.36897350e-01  1.31966310e+01  2.32544158e+01 -2.91612248e+01
 -7.42041723e-01 -1.87870735e-02 -1.31065241e+00 -8.83858291e-01
 -6.38390661e-01  4.03298912e+00]
220  r_total and score:  1901.929204202645 1.236865868317997
Current Bleu score is:  1.236865868317997

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 5 5 5 5 5 5 5 5 5]] [['5', '5', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  9 10 11 11  5  5  5  5]] [['0', '8', '2', '8', '0', '0', '5', '5', '5', '5']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -9.02848457e-02 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 10 11 11 10 10 10 10 10]] [['5', '8', '8', '0', '0', '8', '8', '8', '8', '8']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
221  r_total and score:  1326.0476742320327 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 5 5 5 5 5 5 5 5 5]] [['5', '5', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 10 10 11 11  5  5  5  5]] [['0', '8', '8', '8', '0', '0', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.00488055 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 10 11 11 10 10 10 10 10]] [['5', '8', '8', '0', '0', '8', '8', '8', '8', '8']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
222  r_total and score:  1300.4455421477014 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 10 10 10 10 10 10 10 10 10]] [['8', '8', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 10 10 11 10  5  5  5  5]] [['0', '8', '8', '8', '0', '8', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.00488055 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10 11 11 10 10 10 10 10]] [['8', '8', '8', '0', '0', '8', '8', '8', '8', '8']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
223  r_total and score:  428.70553381158265 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 5 5 5 5 5 5 5 5 5]] [['5', '5', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  9 10 11  5  5  5  5  5]] [['0', '8', '2', '8', '0', '5', '5', '5', '5', '5']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -1.80776574e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 10 11 11 10 10  5  5  5]] [['5', '8', '8', '0', '0', '8', '8', '5', '5', '5']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.18238762   0.05764667  -0.1135237    0.71717815]
224  r_total and score:  1650.461926123328 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  5  5  4  4  4  4  4  4  4]] [['8', '5', '5', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        2.18606798 -1.68574677 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  9 10 11 11 11 11 11 11]] [['0', '8', '2', '8', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10 11 11 10 10 10 10 10]] [['8', '8', '8', '0', '0', '8', '8', '8', '8', '8']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
225  r_total and score:  1560.3721569722106 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 5 5 5 5 5 5 5 5 5]] [['5', '5', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  9  5 11  5  5  5  5  5]] [['5', '8', '2', '5', '0', '5', '5', '5', '5', '5']] 

Reward:  [ 0.91578194 -0.21018242  3.36939485  5.71790702 -1.38393724 -2.01953311
 -1.2196995  -0.82252282 -0.59408945  3.75311927]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5  4 11 10  5  5  5  5]] [['5', '8', '5', '9', '0', '8', '5', '5', '5', '5']] 

Reward:  [ 3.36897350e-01  1.31966310e+01  2.32544158e+01 -2.91612248e+01
 -7.42041723e-01 -1.87870735e-02 -1.31065241e+00 -8.83858291e-01
 -6.38390661e-01  4.03298912e+00]
226  r_total and score:  1761.7833744369063 1.128584876267526
Current Bleu score is:  1.128584876267526

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 10  4  4  4  4  4  4  4  4]] [['8', '8', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9 10 11  4  4  4  4  4]] [['9', '8', '2', '8', '0', '9', '9', '9', '9', '9']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -1.38393724
  -1.54307367  -1.31065241  -0.88385829  -0.63839066   4.03298912]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  4 11 10  4  4  4  4]] [['8', '8', '8', '9', '0', '8', '9', '9', '9', '9']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
227  r_total and score:  1455.5162610004772 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 5 5 4 4 5 4 5 4 5]] [['5', '5', '5', '9', '9', '5', '9', '5', '9', '5']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  9  5 11  5  4  4  4  4]] [['0', '8', '2', '5', '0', '5', '9', '9', '9', '9']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -2.41549513e-01 -6.81555960e-01
 -7.47027936e-01  4.71929763e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  9  6 11 10  5  5  5  5]] [['5', '8', '2', '6', '0', '8', '5', '5', '5', '5']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
   0.02518505   0.03243376  -0.1571747   -0.1135237    0.71717815]
228  r_total and score:  2450.362774874677 2.142513144687774
Current Bleu score is:  2.142513144687774

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 5 5 5 5 5 5 5 5 5]] [['5', '5', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  9  5 11  5  5  5  5  5]] [['0', '8', '2', '5', '0', '5', '5', '5', '5', '5']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  9  6 11 10  5  5  5  5]] [['5', '8', '2', '6', '0', '8', '5', '5', '5', '5']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
   0.02518505   0.03243376  -0.1571747   -0.1135237    0.71717815]
229  r_total and score:  2817.127483768341 2.399775333245013
Current Bleu score is:  2.399775333245013

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 5 5 5 5 5 5 5 5 5]] [['5', '5', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  9  5 11  5  5  5  5  5]] [['0', '8', '2', '5', '0', '5', '5', '5', '5', '5']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 10  6  6 10  5  5  5  5]] [['5', '8', '8', '6', '6', '8', '5', '5', '5', '5']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663   0.03243376  -0.1571747   -0.1135237    0.71717815]
230  r_total and score:  2401.0304947965665 2.084694779159198
Current Bleu score is:  2.084694779159198
EPOCH %d 8
 beam_dqn, egreed, gamma:  1 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 13 13 13 13 13 13 13 13 13]] [['2', '1', '1', '1', '1', '1', '1', '1', '1', '1']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  9  9 11 13 13 13 13 13]] [['0', '8', '2', '2', '0', '1', '1', '1', '1', '1']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample 