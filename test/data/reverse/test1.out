Sample size:  256
State size:  16
Action size:  14
You select the reward based on the Bleu score differences
EPOCH %d 1
 beam_dqn, egreed, gamma:  1 0.5 0.6
As referece this first test on dev data. Is maded with the Q networks, initialized randomly : 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  2  2  7  7 10 12 12 12  7]] [['4', '<s>', '<s>', '4', '4', '8', '7', '7', '7', '4']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  2  7  7  2  2 12 12 12 12]] [['4', '<s>', '4', '4', '<s>', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.6737947 -0.6737947  0.         0.         0.         0.
  0.         0.         0.       ]
1  r_total and score:  530.5895953661441 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 10 10 10 10 10 10 10 10 10]] [['0', '8', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 10 11  4 11 11 11 11 11]] [['9', '8', '8', '0', '9', '0', '0', '0', '0', '0']] 

Reward:  [  1.83156389  20.48145213 -22.31301601   0.           0.
   0.           0.           0.           0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 11  8 10 10 10 10 10 10]] [['0', '8', '0', '3', '8', '8', '8', '8', '8', '8']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
2  r_total and score:  3572.3095512016566 2.158177364697823
Current Bleu score is:  2.158177364697823

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 10  9  9  9  9  9  9  9  9]] [['8', '8', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 10 10  4  4  4  4  4]] [['8', '8', '8', '8', '8', '9', '9', '9', '9', '9']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10 10 10 10 10 10 10 10]] [['8', '8', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.6737947 -0.6737947  0.         0.         0.         0.
  0.         0.         0.       ]
3  r_total and score:  961.4782168844724 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 10  9  9  9  9  9  9  9  9]] [['4', '8', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 10 10  4  4  4  4  4  7]] [['4', '8', '8', '8', '9', '9', '9', '9', '9', '4']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10 10 10 10  9 10 10 10]] [['8', '8', '8', '8', '8', '8', '2', '8', '8', '8']] 

Reward:  [ 0.6737947 -0.6737947  0.         0.         0.         0.
  0.         0.         0.       ]
4  r_total and score:  1615.472484784592 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 9 9 9 9 9 9 9 9 9]] [['4', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  9  9 10  7  4  4  4  4  4]] [['4', '2', '2', '8', '4', '9', '9', '9', '9', '9']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  9 10  7  9  9  9  9  9  9]] [['2', '2', '8', '4', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
5  r_total and score:  2376.167249320168 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 9 9 9 9 9 9 9 9 9]] [['9', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  9  9 10  7  4  4  4  4  4]] [['4', '2', '2', '8', '4', '9', '9', '9', '9', '9']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  9 10  7  9  9  9  9  9  9]] [['2', '2', '8', '4', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
6  r_total and score:  2859.9450075630302 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 9 9 9 9 9 9 9 9 9]] [['9', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  9  9 10  7  9  9  9  9  9]] [['4', '2', '2', '8', '4', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  9 10  7  7  9  9  9  9  9]] [['2', '2', '8', '4', '4', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
7  r_total and score:  2663.4055807078585 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 9 9 9 9 9 9 9 9 9]] [['9', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  9  9 10  7  9  9  9  9  9]] [['4', '2', '2', '8', '4', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  9 10  7  7  9  9  9  9  9]] [['2', '2', '8', '4', '4', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
8  r_total and score:  2762.5791576314145 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 9 9 9 9 9 9 9 9 9]] [['9', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  9  9 10  7  9  9  9  9  9]] [['9', '2', '2', '8', '4', '2', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  9 10  7  7  9  9  9  9  9]] [['9', '2', '8', '4', '4', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
9  r_total and score:  2801.0005486325986 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 9 9 9 9 9 9 9 9 9]] [['9', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 9 9 6 7 9 9 9 9 9]] [['9', '2', '2', '6', '4', '2', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  9 10  9  9  9  9  9  9  9]] [['2', '2', '8', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
10  r_total and score:  2727.290009811955 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 9 9 9 9 9 9 9 9 9]] [['9', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 9 9 6 7 9 9 9 9 9]] [['9', '2', '2', '6', '4', '2', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  9 10  9  9  9  9  9  9  9]] [['9', '2', '8', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
11  r_total and score:  2812.9141838934397 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  7 10  6  7  9  9  9  9  9]] [['9', '4', '8', '6', '4', '2', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  7 10  7  7  9  9  9  9  9]] [['9', '4', '8', '4', '4', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
12  r_total and score:  2903.8537663589905 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 9 9 6 4 9 9 9 9 9]] [['9', '2', '2', '6', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  7 10 12  9  9  9  9  9  9]] [['9', '4', '8', '7', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
13  r_total and score:  2745.1687574072535 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  7 10  6  7  4  9  9  9  9]] [['9', '4', '8', '6', '4', '9', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  7 10 12  8  9  9  9  9  9]] [['9', '4', '8', '7', '3', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
14  r_total and score:  2912.4390529889642 1.2128787576588755
Current Bleu score is:  1.2128787576588755

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  7 10  6  7  4  9  9  9  9]] [['9', '4', '8', '6', '4', '9', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  7 10 12  8  9  9  9  9  9]] [['9', '4', '8', '7', '3', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
15  r_total and score:  3282.077660786111 1.351972673925518
Current Bleu score is:  1.351972673925518

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  7 10  6 12  9  9  9  9  9]] [['9', '4', '8', '6', '7', '2', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 7 3]] [['9', '4']] 

Reward:  [0. 0.]
16  r_total and score:  3438.849479280838 1.396734144920733
Current Bleu score is:  1.396734144920733

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  7 10  6 12  9  9  9  9  9]] [['9', '4', '8', '6', '7', '2', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  7  6 12 12  9  9  9  9  9]] [['9', '4', '6', '7', '7', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
17  r_total and score:  3377.140142535285 1.3293104834129965
Current Bleu score is:  1.3293104834129965

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  7 10  6 12  4  9  9  9  9]] [['9', '4', '8', '6', '7', '9', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  7  6 12 12  9  9  9  9  9]] [['9', '4', '6', '7', '7', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
18  r_total and score:  3194.0977296908177 1.462965145489324
Current Bleu score is:  1.462965145489324

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  7 10  6 12  4  9  9  9  9]] [['9', '4', '8', '6', '7', '9', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  6 12 12  9  9  9  9  9]] [['9', '7', '6', '7', '7', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
19  r_total and score:  4404.987787538266 1.7985722076959578
Current Bleu score is:  1.7985722076959578

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 12 10  6 12  4  9  9  9  9]] [['9', '7', '8', '6', '7', '9', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  3]] [['9', '7']] 

Reward:  [0. 0.]
20  r_total and score:  4539.410788460415 1.9885664151891804
Current Bleu score is:  1.9885664151891804

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  7 10  6 12  4  9  9  9  9]] [['9', '4', '8', '6', '7', '9', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5 12 12  9  9  9  9  9]] [['9', '7', '5', '7', '7', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
21  r_total and score:  3977.1736063090957 1.7742501640695716
Current Bleu score is:  1.7742501640695716

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  7 10  6 12  4  9  9  9  4]] [['9', '4', '8', '6', '7', '9', '2', '2', '2', '9']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 7 3]] [['9', '4']] 

Reward:  [0. 0.]
22  r_total and score:  3909.8931644931135 1.9144513305407294
Current Bleu score is:  1.9144513305407294

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 12  9  6  4  4  9  9  9  9]] [['9', '7', '2', '6', '9', '9', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5 12 12  9  9  9  9  9]] [['9', '7', '5', '7', '7', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
23  r_total and score:  4072.9967972078684 1.7943235272443274
Current Bleu score is:  1.7943235272443274

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 7 9 6 7 4 9 9 9 9]] [['9', '4', '2', '6', '4', '9', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  3]] [['9', '7']] 

Reward:  [0. 0.]
24  r_total and score:  4128.97077118537 1.8740323659778364
Current Bleu score is:  1.8740323659778364

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  7  9  6 12  4  9  9  9  9]] [['9', '4', '2', '6', '7', '9', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  3]] [['9', '7']] 

Reward:  [0. 0.]
25  r_total and score:  4204.627291503587 1.7820111715615343
Current Bleu score is:  1.7820111715615343

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 12  9  6  7  4  9  9  9  9]] [['5', '7', '2', '6', '4', '9', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  3]] [['9', '7']] 

Reward:  [0. 0.]
26  r_total and score:  5069.82689029405 2.213497818079594
Current Bleu score is:  2.213497818079594

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 12 10  5 12 13  9  9  9  9]] [['5', '7', '8', '5', '7', '1', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5 12  8  9  9  9  9  9]] [['9', '7', '5', '7', '3', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
27  r_total and score:  4771.565640985138 1.7564799171071184
Current Bleu score is:  1.7564799171071184

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 12  9  5  4 13  9  9  9  9]] [['5', '7', '2', '5', '9', '1', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5 12  8  9  9  9  9  9]] [['9', '7', '5', '7', '3', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
28  r_total and score:  4569.984428587453 2.0452206569822193
Current Bleu score is:  2.0452206569822193
EPOCH %d 2
 beam_dqn, egreed, gamma:  1 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  7  9  5  7 13  9  9  9  9]] [['5', '4', '2', '5', '4', '1', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  3]] [['9', '7']] 

Reward:  [0. 0.]
29  r_total and score:  5752.923294404572 2.5358464715080618
Current Bleu score is:  2.5358464715080618

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  7 10  5  7 13 13 13  9 13]] [['5', '4', '8', '5', '4', '1', '1', '1', '2', '1']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  3]] [['9', '7']] 

Reward:  [0. 0.]
30  r_total and score:  5375.286356976525 2.084109876727583
Current Bleu score is:  2.084109876727583

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  7 10  5  7 13 13 13 13 13]] [['9', '4', '8', '5', '4', '1', '1', '1', '1', '1']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 12  3]] [['6', '7']] 

Reward:  [0. 0.]
31  r_total and score:  5458.071866702511 2.7789681330578624
Current Bleu score is:  2.7789681330578624

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  7 10  5  7 13 13 13 13 13]] [['5', '4', '8', '5', '4', '1', '1', '1', '1', '1']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 12  5  9 12  9  9  9  9  9]] [['6', '7', '5', '2', '7', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
32  r_total and score:  5108.638938462189 2.248680109373781
Current Bleu score is:  2.248680109373781

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 12  9  5  7  9  9  9  9  9]] [['5', '7', '2', '5', '4', '2', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 12  3]] [['6', '7']] 

Reward:  [0. 0.]
33  r_total and score:  4983.280146834743 1.9552032884875394
Current Bleu score is:  1.9552032884875394

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 12  9  5  4 13  9  9  9  9]] [['9', '7', '2', '5', '9', '1', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 12  3]] [['6', '7']] 

Reward:  [0. 0.]
34  r_total and score:  5468.694558522772 2.4458237322552177
Current Bleu score is:  2.4458237322552177

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 12 10  5 12  9  9  9  9  9]] [['5', '7', '8', '5', '7', '2', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 12  3]] [['6', '7']] 

Reward:  [0. 0.]
35  r_total and score:  5277.495215096114 2.122776812053622
Current Bleu score is:  2.122776812053622

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 12  9  5  4  9  9  9  9  9]] [['9', '7', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 12  5  9 12  9  9  9  9  9]] [['6', '7', '5', '2', '7', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
36  r_total and score:  5520.087780998525 2.5858741534868326
Current Bleu score is:  2.5858741534868326

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 12 10  5  4  9  9  9  9  9]] [['9', '7', '8', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 12  3]] [['6', '7']] 

Reward:  [0. 0.]
37  r_total and score:  5629.097275576872 2.2822482610793644
Current Bleu score is:  2.2822482610793644

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 12 10  5  7  9  9  9  9  9]] [['9', '7', '8', '5', '4', '2', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 12  3]] [['6', '7']] 

Reward:  [0. 0.]
38  r_total and score:  5757.058620573096 2.346966389701623
Current Bleu score is:  2.346966389701623

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 12 10  5  7  9  9  9  9  9]] [['9', '7', '8', '5', '4', '2', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 12  3]] [['6', '7']] 

Reward:  [0. 0.]
39  r_total and score:  5826.007666493274 2.2122150725198346
Current Bleu score is:  2.2122150725198346

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  9  5 12  9  9  9  9  9]] [['7', '8', '2', '5', '7', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9 12  9  9  9  9  9]] [['9', '7', '5', '2', '7', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
40  r_total and score:  6179.529446458014 2.422179120021585
Current Bleu score is:  2.422179120021585

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 12 10  5 12  9  9  9  9  9]] [['7', '7', '8', '5', '7', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  3]] [['9', '7']] 

Reward:  [0. 0.]
41  r_total and score:  5590.441404256147 1.46180371557675
Current Bleu score is:  1.46180371557675

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 12 10  5  4  9  9  9  9  9]] [['5', '7', '8', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  3]] [['9', '7']] 

Reward:  [0. 0.]
42  r_total and score:  5966.9849559481745 2.3262442484271237
Current Bleu score is:  2.3262442484271237

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  9  5  4  9  9  9  9  9]] [['5', '8', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  1.83156389  -1.83156389   0.           0.          66.8740305
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9 12  9  9  9  9  9]] [['9', '7', '5', '2', '7', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
43  r_total and score:  7017.0135565656565 3.8421911340673
Current Bleu score is:  3.8421911340673

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 12 10  5  4 13  9  9  9  9]] [['5', '7', '8', '5', '9', '1', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9 12  9  9  9  9  9]] [['9', '7', '5', '2', '7', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
44  r_total and score:  5513.612900001117 2.62780216110328
Current Bleu score is:  2.62780216110328

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 12 10  5  7 13  9  9  9  9]] [['7', '7', '8', '5', '4', '1', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
45  r_total and score:  5765.72717761675 2.547039702999272
Current Bleu score is:  2.547039702999272

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 12  9  5  7  9  9  9  9  9]] [['5', '7', '2', '5', '4', '2', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
46  r_total and score:  6685.639751630739 3.8484517459964946
Current Bleu score is:  3.8484517459964946

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 12  9  5  7  9  9  9  9  9]] [['7', '7', '2', '5', '4', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
47  r_total and score:  5713.50891489507 3.0504207798147025
Current Bleu score is:  3.0504207798147025

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  9  5  4  9  9  9  9  9]] [['7', '8', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  0.           0.           0.           0.          66.8740305
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
48  r_total and score:  6335.059028825118 3.539519494862917
Current Bleu score is:  3.539519494862917

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 12 10  5  7 13  9  9  9  9]] [['7', '7', '8', '5', '4', '1', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
49  r_total and score:  5757.502313342344 2.681005330216317
Current Bleu score is:  2.681005330216317

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 12  9  5  7 13  9  9  9  9]] [['5', '7', '2', '5', '4', '1', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
50  r_total and score:  5923.204996093962 2.9757511220896697
Current Bleu score is:  2.9757511220896697

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7 13  9  9  9  9]] [['9', '8', '2', '5', '4', '1', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9 12  9  9  9  9  9]] [['9', '7', '5', '2', '7', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
51  r_total and score:  6666.667748630446 3.1081242930477004
Current Bleu score is:  3.1081242930477004

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7 13  9  9  9  9]] [['9', '8', '2', '5', '4', '1', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
52  r_total and score:  7162.169669231784 4.517513605310607
Current Bleu score is:  4.517513605310607

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 12  9  5  4 13  9  9  9  9]] [['7', '7', '2', '5', '9', '1', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
53  r_total and score:  6629.797589983321 3.59137759656872
Current Bleu score is:  3.59137759656872

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7 13  9  9  9  9]] [['9', '8', '2', '5', '4', '1', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
54  r_total and score:  6906.197808468143 4.333675891671316
Current Bleu score is:  4.333675891671316

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7 13  9  9  9  9]] [['9', '8', '2', '5', '4', '1', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
55  r_total and score:  7395.509062864798 4.844861806824206
Current Bleu score is:  4.844861806824206

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7 13  9  9  9  9]] [['9', '8', '2', '5', '4', '1', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
56  r_total and score:  6605.3783206123235 4.044006346855762
Current Bleu score is:  4.044006346855762

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4 13  9  9  9  9]] [['9', '8', '2', '5', '9', '1', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
57  r_total and score:  6826.562296938627 4.543043968562825
Current Bleu score is:  4.543043968562825

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 12  9  5  4 13  9  9  9  9]] [['9', '7', '2', '5', '9', '1', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
58  r_total and score:  7140.047254907561 4.505948635752619
Current Bleu score is:  4.505948635752619

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7  9  9  9  9  9]] [['9', '8', '2', '5', '4', '2', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
59  r_total and score:  7167.4447762162035 4.829623057567563
Current Bleu score is:  4.829623057567563

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7 13  9  9  9  9]] [['9', '8', '2', '5', '4', '1', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
60  r_total and score:  6819.839749577862 4.422668260806143
Current Bleu score is:  4.422668260806143

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7 13  9  9  9  9]] [['9', '8', '2', '5', '4', '1', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
61  r_total and score:  6798.544076602626 3.8609357055716482
Current Bleu score is:  3.8609357055716482

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7 13 13 13 13 13]] [['9', '8', '2', '5', '4', '1', '1', '1', '1', '1']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
62  r_total and score:  7164.8485712686015 4.044917927796766
Current Bleu score is:  4.044917927796766
EPOCH %d 3
 beam_dqn, egreed, gamma:  1 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7 13 13 13 13 13]] [['9', '8', '2', '5', '4', '1', '1', '1', '1', '1']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
63  r_total and score:  7104.966969592494 4.00347318563286
Current Bleu score is:  4.00347318563286

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7 13 13  9  9  9]] [['9', '8', '2', '5', '4', '1', '1', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12  5  9  9  9  9  9  9  9]] [['7', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
64  r_total and score:  7516.979734596272 4.895549479824275
Current Bleu score is:  4.895549479824275

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7 13  9  9  9  9]] [['9', '8', '2', '5', '4', '1', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
65  r_total and score:  7485.65183052098 4.812615835931496
Current Bleu score is:  4.812615835931496

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 12  9  5  7 13 13 13 13 13]] [['9', '7', '2', '5', '4', '1', '1', '1', '1', '1']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12  5  9  9  9  9  9  9  9]] [['7', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
66  r_total and score:  6828.049726522462 4.231081017660901
Current Bleu score is:  4.231081017660901

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7 13 13 13 13 13]] [['9', '8', '2', '5', '4', '1', '1', '1', '1', '1']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 9 9 9 9 9 9]] [['9', '5', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
67  r_total and score:  6762.6042620701655 4.515025174815114
Current Bleu score is:  4.515025174815114

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7 13 13 13 13 13]] [['9', '8', '2', '5', '4', '1', '1', '1', '1', '1']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 9 9 9 9 9 9]] [['9', '5', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
68  r_total and score:  7069.436796457361 4.669518763901423
Current Bleu score is:  4.669518763901423

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7 13 13  9  9  9]] [['9', '8', '2', '5', '4', '1', '1', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10  5  9  9  9  9  9  9  9]] [['9', '8', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
69  r_total and score:  7169.9820178421605 4.730628524148208
Current Bleu score is:  4.730628524148208

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7 13 13 13  9 13]] [['9', '8', '2', '5', '4', '1', '1', '1', '2', '1']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10  5  9  9  9  9  9  9  9]] [['9', '8', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
70  r_total and score:  7510.5003588162335 5.033247409002665
Current Bleu score is:  5.033247409002665

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7 13 13  9  9  9]] [['9', '8', '2', '5', '4', '1', '1', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10  5  9  9  9  9  9  9  9]] [['9', '8', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
71  r_total and score:  7675.174276330331 5.444634438308141
Current Bleu score is:  5.444634438308141

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  4  7 13 13 13 13 13]] [['9', '8', '2', '9', '4', '1', '1', '1', '1', '1']] 

Reward:  [  1.83156389  20.48145213  29.02869589 -51.3417119    0.
   0.           0.           0.           0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10  5  9  9  9  9  9  9  9]] [['9', '8', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
72  r_total and score:  5602.440147354768 3.6399623908056338
Current Bleu score is:  3.6399623908056338

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7 13 13 13 13 13]] [['9', '8', '2', '5', '4', '1', '1', '1', '1', '1']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10  5  9  9  9  9  9  9  9]] [['9', '8', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
73  r_total and score:  6826.68829190639 4.4532580790923095
Current Bleu score is:  4.4532580790923095

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7 13 13 13 13 13]] [['9', '8', '2', '5', '4', '1', '1', '1', '1', '1']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
74  r_total and score:  6075.764216404944 3.2646215067553697
Current Bleu score is:  3.2646215067553697

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7 13 13 13 13 13]] [['9', '8', '2', '5', '4', '1', '1', '1', '1', '1']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
75  r_total and score:  5999.747449074213 3.3932764739328403
Current Bleu score is:  3.3932764739328403

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7 13 13 13 13 13]] [['9', '8', '2', '5', '4', '1', '1', '1', '1', '1']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  8  9  9  9  9  9]] [['9', '7', '5', '2', '3', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
76  r_total and score:  6233.116362558754 3.3320360225329217
Current Bleu score is:  3.3320360225329217

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 12  9  5  7  6  6  9  6  9]] [['9', '7', '2', '5', '4', '6', '6', '2', '6', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
77  r_total and score:  5938.563649693756 2.7994472083445
Current Bleu score is:  2.7994472083445

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7  6  6  9  9 13]] [['9', '8', '2', '5', '4', '6', '6', '2', '2', '1']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
78  r_total and score:  6174.471279626579 3.4796585446813095
Current Bleu score is:  3.4796585446813095

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7  6  9  9  9  9]] [['9', '8', '2', '5', '4', '6', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
79  r_total and score:  6108.370259183682 2.9608129251233097
Current Bleu score is:  2.9608129251233097

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7  6  9  9  9  9]] [['9', '8', '2', '5', '4', '6', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
80  r_total and score:  6009.511046938261 2.867245780428466
Current Bleu score is:  2.867245780428466

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7  6  9  9 13  9]] [['9', '8', '2', '5', '4', '6', '2', '2', '1', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
81  r_total and score:  6342.077684870956 3.1959288217669592
Current Bleu score is:  3.1959288217669592

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7  6  6  6  6  9]] [['9', '8', '2', '5', '4', '6', '6', '6', '6', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  8  9  9  9  9  9]] [['9', '7', '5', '2', '3', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
82  r_total and score:  6049.840549159995 2.6478400065439702
Current Bleu score is:  2.6478400065439702

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 12  9  5  7  6  6  6  6  6]] [['9', '7', '2', '5', '4', '6', '6', '6', '6', '6']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12 12  9 12  9  6  6  6  6]] [['9', '7', '7', '2', '7', '2', '6', '6', '6', '6']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
83  r_total and score:  6136.183231533005 2.330886970909745
Current Bleu score is:  2.330886970909745

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7  6  6  6  6  6]] [['9', '8', '2', '5', '4', '6', '6', '6', '6', '6']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  6  6  6  6]] [['9', '7', '5', '2', '2', '2', '6', '6', '6', '6']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
84  r_total and score:  5994.731671429465 2.9174753604815837
Current Bleu score is:  2.9174753604815837

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7  6  6  6  6  6]] [['9', '8', '2', '5', '4', '6', '6', '6', '6', '6']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 8 9 6 6 6 6]] [['9', '5', '5', '2', '3', '2', '6', '6', '6', '6']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
85  r_total and score:  6087.585757688811 3.3057521276813655
Current Bleu score is:  3.3057521276813655

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7  6  6  6  6  6]] [['9', '8', '2', '5', '4', '6', '6', '6', '6', '6']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 8 9 6 6 6 6]] [['9', '5', '5', '2', '3', '2', '6', '6', '6', '6']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
86  r_total and score:  5639.3437403592025 2.3232768586700483
Current Bleu score is:  2.3232768586700483

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  6  6  6  6  6]] [['9', '8', '2', '5', '9', '6', '6', '6', '6', '6']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 13  5  9  8  9  6  6  6  6]] [['9', '1', '5', '2', '3', '2', '6', '6', '6', '6']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
87  r_total and score:  5443.308120760463 2.656547311671229
Current Bleu score is:  2.656547311671229

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  6  6  6  6  6]] [['9', '8', '2', '5', '9', '6', '6', '6', '6', '6']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 13  5  9  8  9  6  6  6  6]] [['9', '1', '5', '2', '3', '2', '6', '6', '6', '6']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
88  r_total and score:  5513.239072796597 2.4194152886713796
Current Bleu score is:  2.4194152886713796

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  6  6  6  6  6]] [['9', '8', '2', '5', '9', '6', '6', '6', '6', '6']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 13  5  9  8  9  6  6  6  6]] [['9', '1', '5', '2', '3', '2', '6', '6', '6', '6']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
89  r_total and score:  5633.647202976634 3.018197944312852
Current Bleu score is:  3.018197944312852

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  6  6  9  9  9]] [['9', '8', '2', '5', '9', '6', '6', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 13  5  9  9  9  9  9  9  9]] [['9', '1', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
90  r_total and score:  5500.796464584561 2.6196416585340536
Current Bleu score is:  2.6196416585340536

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7  6  6  9  9  9]] [['9', '8', '2', '5', '4', '6', '6', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12  5  9  9  9  9  9  9  9]] [['9', '7', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
91  r_total and score:  5444.424401559315 2.2113599252545715
Current Bleu score is:  2.2113599252545715

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 10  5  4  6  9  9  9  9]] [['9', '8', '8', '5', '9', '6', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213 -22.31301601   0.           0.
   0.           0.           0.           0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10  5  9  9  9  9  9  9  9]] [['9', '8', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
92  r_total and score:  5255.53423580099 1.638480376292558
Current Bleu score is:  1.638480376292558

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  6  9  9  9  9]] [['9', '8', '2', '5', '9', '6', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10  5  9  9  9  9  9  9  9]] [['9', '8', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
93  r_total and score:  5501.078893133382 2.6031147306055384
Current Bleu score is:  2.6031147306055384

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  6  9  9  9  9]] [['9', '8', '2', '5', '9', '6', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10  5  9  9  9  9  9  9  9]] [['9', '8', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
94  r_total and score:  5943.623881250268 2.9581497890246005
Current Bleu score is:  2.9581497890246005

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  6  9  9  9  9]] [['9', '8', '2', '5', '9', '6', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10  5  9  9  9  9  9  9  9]] [['9', '8', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
95  r_total and score:  5834.817346453303 3.013290972855195
Current Bleu score is:  3.013290972855195
EPOCH %d 4
 beam_dqn, egreed, gamma:  1 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  6  9  9  9  9]] [['9', '8', '2', '5', '9', '6', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10  5  9  8  9  9  9  9  9]] [['9', '8', '5', '2', '3', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
96  r_total and score:  5632.709457251256 2.5662383373345743
Current Bleu score is:  2.5662383373345743

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  6  9  9  9  9]] [['9', '8', '2', '5', '9', '6', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 8 9 9 9 9 9]] [['9', '5', '5', '2', '3', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
97  r_total and score:  5948.338020124765 2.7087705355146157
Current Bleu score is:  2.7087705355146157

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  6  9  9  9  9]] [['9', '8', '2', '5', '9', '6', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 8 9 9 9 9 9]] [['9', '5', '5', '2', '3', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
98  r_total and score:  5779.082294054425 2.5492588792249236
Current Bleu score is:  2.5492588792249236

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  6  9  9  9  9]] [['9', '8', '2', '5', '9', '6', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 8 9 9 9 9 9]] [['9', '5', '5', '2', '3', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
99  r_total and score:  5701.149244003605 2.353280345531003
Current Bleu score is:  2.353280345531003

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  9  9  9  9  9]] [['9', '8', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 8 9 9 9 9 9]] [['9', '5', '5', '2', '3', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
100  r_total and score:  6044.041556035182 2.817965176784759
Current Bleu score is:  2.817965176784759

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  6  9  9  9  9]] [['9', '8', '2', '5', '9', '6', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 8 9 9 9 9 9]] [['9', '5', '5', '2', '3', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
101  r_total and score:  5985.7936089838 3.240091491254646
Current Bleu score is:  3.240091491254646

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  6  9  9  9  9]] [['9', '8', '2', '5', '9', '6', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 8 9 9 9 9 9]] [['9', '5', '5', '2', '3', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
102  r_total and score:  7084.659623785478 4.215895029654792
Current Bleu score is:  4.215895029654792

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  9  9  9  9  9]] [['9', '8', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10  5  9  9  9  9  9  9  9]] [['9', '8', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
103  r_total and score:  6371.392339060417 3.5921635909002116
Current Bleu score is:  3.5921635909002116

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  9  9  9  9  9]] [['9', '8', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10  5  9  9  9  9  9  9  9]] [['9', '8', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
104  r_total and score:  5804.466297149717 2.930420811993993
Current Bleu score is:  2.930420811993993

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  9  9  9  9  9]] [['9', '8', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 9 9 9 9 9 9]] [['9', '5', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
105  r_total and score:  6131.275973628117 3.4895540150786113
Current Bleu score is:  3.4895540150786113

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  6  9  9  9  9]] [['9', '8', '2', '5', '9', '6', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 9 9 9 9 9 9]] [['9', '5', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
106  r_total and score:  5790.279130919574 2.8146142373801437
Current Bleu score is:  2.8146142373801437

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  9  9  9  9  9]] [['9', '8', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 9 9 9 9 9 9]] [['9', '5', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
107  r_total and score:  5886.343215993071 2.9857620560336637
Current Bleu score is:  2.9857620560336637

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  9  9  9  9  9]] [['9', '8', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 9 9 9 9 9 9]] [['9', '5', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
108  r_total and score:  5909.201103726775 3.12784769244724
Current Bleu score is:  3.12784769244724

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  9  9  9  9  9]] [['9', '8', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 9 9 9 9 9 9]] [['9', '5', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
109  r_total and score:  5701.908233372183 2.948752367532565
Current Bleu score is:  2.948752367532565

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  9  9  9  9  9]] [['9', '8', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10  5  9  9  9  9  9  9  9]] [['9', '8', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
110  r_total and score:  6008.207426365307 3.2290394101907767
Current Bleu score is:  3.2290394101907767

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  6  9  9  9  9]] [['9', '8', '2', '5', '9', '6', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 9 9 9 9 9 9]] [['9', '5', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
111  r_total and score:  6452.057675648169 3.2777238247000895
Current Bleu score is:  3.2777238247000895

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 12  5  4  9  9  9  9  9]] [['9', '8', '7', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213 -22.31301601   0.           0.
   0.           0.           0.           0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 9 9 9 9 9 9]] [['9', '5', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
112  r_total and score:  5598.700779895336 2.1101012705978444
Current Bleu score is:  2.1101012705978444

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 12  5  4  9  9  9  9  9]] [['9', '8', '7', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213 -22.31301601   0.           0.
   0.           0.           0.           0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 9 9 9 9 9 9]] [['9', '5', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
113  r_total and score:  5550.828141117225 1.8256705361300396
Current Bleu score is:  1.8256705361300396

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  9  9  9  9  9]] [['9', '8', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 9 9 9 9 9 9]] [['9', '5', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
114  r_total and score:  5813.17524125085 2.36096911186467
Current Bleu score is:  2.36096911186467

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 12  5  4  9  9  9  9  9]] [['9', '8', '7', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213 -22.31301601   0.           0.
   0.           0.           0.           0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  5 12  9  8  9  9  9  9  9]] [['9', '5', '7', '2', '3', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
115  r_total and score:  5466.140696064645 1.455768718868118
Current Bleu score is:  1.455768718868118

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10 12 12 12  9  9  9  9  9]] [['7', '8', '7', '7', '7', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 12 12  9  9  9  9  9  9  9]] [['9', '7', '7', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
116  r_total and score:  5262.209557594422 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 12  5  4  9  9  9  9  9]] [['9', '8', '7', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213 -22.31301601   0.           0.
   0.           0.           0.           0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 9 9 9 9 9 9]] [['9', '5', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
117  r_total and score:  5531.786994016173 2.4375236371522373
Current Bleu score is:  2.4375236371522373

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 12  5  4  9  9  9  9  9]] [['9', '8', '7', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213 -22.31301601   0.           0.
   0.           0.           0.           0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 9 9 9 9 9 9]] [['9', '5', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
118  r_total and score:  5306.310969071471 1.6953413814805292
Current Bleu score is:  1.6953413814805292

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  9  9  9  9  9]] [['9', '8', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 9 9 9 9 9 9]] [['9', '5', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
119  r_total and score:  6142.310368023625 2.8154772650238273
Current Bleu score is:  2.8154772650238273

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 12  5  4  9  9  9  9  9]] [['9', '8', '7', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213 -22.31301601   0.           0.
   0.           0.           0.           0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 9 9 9 9 9 9]] [['9', '5', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
120  r_total and score:  5926.646813554542 2.2220613199509986
Current Bleu score is:  2.2220613199509986

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  9  9  9  9  9]] [['9', '8', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 9 9 9 9 9 9]] [['9', '5', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
121  r_total and score:  6379.929493549825 3.0284554254572678
Current Bleu score is:  3.0284554254572678

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  9  9  9  9  9]] [['9', '8', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 9 9 9 9 9 9]] [['9', '5', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
122  r_total and score:  6343.206423331318 2.905755248734574
Current Bleu score is:  2.905755248734574

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  9  9  9  9  9]] [['9', '8', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 8 9 9 9 9 9]] [['9', '5', '5', '2', '3', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
123  r_total and score:  6290.128616073659 3.0435212702298555
Current Bleu score is:  3.0435212702298555

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  9  9  9  9  9]] [['9', '8', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 9 5 9 8 9 9 9 9 9]] [['9', '2', '5', '2', '3', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
124  r_total and score:  6080.713375909662 2.410221874961488
Current Bleu score is:  2.410221874961488

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  9  9  9  9  9]] [['9', '8', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  1.83156389  20.48145213  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9  5  9  9  9  9  9  9  9]] [['7', '2', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
125  r_total and score:  6152.5296093557645 2.998919324066442
Current Bleu score is:  2.998919324066442

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 5 9 5 4 9 9 9 9 9]] [['9', '5', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 8 9 9 9 9 9]] [['9', '5', '5', '2', '3', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
126  r_total and score:  6034.124235982446 2.4434492665563683
Current Bleu score is:  2.4434492665563683

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 5 9 5 4 9 9 9 9 9]] [['9', '5', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 9 9 8 9 9 9 9 9]] [['9', '5', '2', '2', '3', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
127  r_total and score:  6039.385435804253 2.426851766114872
Current Bleu score is:  2.426851766114872

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 5 9 5 4 9 9 9 9 9]] [['9', '5', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 9 9 9 9 9 9]] [['9', '5', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
128  r_total and score:  6308.52829811044 3.151190336918845
Current Bleu score is:  3.151190336918845
EPOCH %d 5
 beam_dqn, egreed, gamma:  1 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 5 9 5 4 9 9 9 9 9]] [['9', '5', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 9 9 9 9 9 9]] [['9', '5', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
129  r_total and score:  5804.027653618532 2.229634865795246
Current Bleu score is:  2.229634865795246

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 5 9 5 4 9 9 9 9 9]] [['9', '5', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 9 5 9 8 9 9 9 9 9]] [['9', '2', '5', '2', '3', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
130  r_total and score:  6164.833972457671 2.9966959344710515
Current Bleu score is:  2.9966959344710515

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 5 9 5 4 9 9 9 9 9]] [['9', '5', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 9 9 9 9 9 9]] [['9', '5', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
131  r_total and score:  5990.4078314116705 2.9866296319078773
Current Bleu score is:  2.9866296319078773

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 5 9 5 4 9 9 9 9 9]] [['9', '5', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 9 9 8 9 9 9 9 9]] [['9', '5', '2', '2', '3', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
132  r_total and score:  5830.461805613017 2.6016771572239894
Current Bleu score is:  2.6016771572239894

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 100. -100.    0.    0.    0.    0.    0.    0.    0.]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 5 9 5 4 9 9 9 9 9]] [['9', '5', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 1.83156389 -1.83156389  0.          0.          0.          0.
  0.          0.          0.        ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 5 5 9 9 9 9 9 9 9]] [['9', '5', '5', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [0. 0. 0. 0. 0. 0. 0. 0. 0.]
133  r_total and score:  5995.58569589581 3.0197555011098163
Current Bleu score is:  3.0197555011098163
