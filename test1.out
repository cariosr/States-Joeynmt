Sample size:  256
State size:  16
Action size:  14
bleu_diff
You select the reward based on the Bleu score differences
EPOCH %d 1
 beam_dqn, egreed, gamma:  2 0.5 0.6
rew:  [  0. 100.]

 Sample-------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 3]] [['5']]
Reward:  [100. 100.] 

rew:  [0.         4.97870684 1.16333694 5.68711278 1.88030155]

 Sample-------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5,  9, 12, 12,  3]]) [['5', '2', '7', '7']]
Eval  :  [[ 5 12 12 12  3]] [['5', '7', '7', '7']]
Reward:  [ 4.97870684 -3.8153699   4.52377584 -3.80681123  1.88030155] 

rew:  [0.00000000e+00 9.15781944e-04 4.98934206e-01 3.55983548e+00
 9.79290140e+00 6.68740305e+01]

 Sample-------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 6,  9,  4, 11, 10,  3]]) [['6', '2', '9', '0', '8']]
Eval  :  [[13  9  4 11 10  3]] [['1', '2', '9', '0', '8']]
Reward:  [9.15781944e-04 4.98018424e-01 3.06090127e+00 6.23306592e+00
 5.70811291e+01 6.68740305e+01] 

As referece this first test on dev data. Is maded with the Q networks, initialized randomly : 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[2 1 2 2 2 1 2 2 2 2]] [['<s>', '<pad>', '<s>', '<s>', '<s>', '<pad>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01412722  0.00883027 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[2 2 2 2 2 1 1 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<pad>', '<pad>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.0128349  -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]
1  r_total and score:  5.870890631881943 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01412722  0.00883027 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.0128349  -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]
2  r_total and score:  42.70584569366212 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01412722  0.00883027 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.0128349  -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]
3  r_total and score:  41.81410778910261 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01412722  0.00883027 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.0128349  -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]
4  r_total and score:  41.50615497285681 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01412722  0.00883027 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.0128349  -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]
5  r_total and score:  31.974684433416407 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01412722  0.00883027 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.0128349  -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]
6  r_total and score:  43.34774739036296 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01412722  0.00883027 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[2 2 2 2 4 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.0128349  -0.00947238 -0.00390665 -0.0008413  -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]
7  r_total and score:  62.08011738382057 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01412722  0.00883027 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[2 2 2 2 6 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '6', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.0128349  -0.00947238 -0.00390665 -0.0008413  -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]
8  r_total and score:  158.7354911908737 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01412722  0.00883027 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[2 2 2 2 8 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '3', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.0128349  -0.00947238 -0.00390665  0.03955424 -0.01023452
 -0.00669853 -0.00472745 -0.00351564  0.02395657]
9  r_total and score:  458.2447516873884 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[2 6 2 2 2 2 2 2 2 2]] [['<s>', '6', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01412722  0.02105908 -0.01661124 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2  4  2  2  6 10  2  2  2  2]] [['<s>', '9', '<s>', '<s>', '6', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.01728052 -0.00882806 -0.00670665 -0.00126809  0.04326335
 -0.01206484 -0.0076389  -0.00527434  0.02888558]
10  r_total and score:  567.0155306971853 0.5130239061576266
Current Bleu score is:  0.5130239061576266

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 2 10  2  2  2  2  2  2  2  2]] [['<s>', '8', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01412722  0.18373987 -0.09341186 -0.03771428 -0.01760824 -0.01023452
 -0.00669853 -0.00472745 -0.00351564  0.02395657]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2  4  2  4  8 10  2  2  2  2]] [['<s>', '9', '<s>', '9', '3', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.01728052 -0.00882806 -0.00295536  0.06021266  0.37049126
 -0.11775341 -0.06844236 -0.04479576  0.21533209]
11  r_total and score:  2280.31026262754 1.7255998545096252
Current Bleu score is:  1.7255998545096252

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 2 10  2  2  2  2  2  2  2  2]] [['<s>', '8', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01412722  0.18373987 -0.09341186 -0.03771428 -0.01760824 -0.01023452
 -0.00669853 -0.00472745 -0.00351564  0.02395657]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2  2  2  2  8 10  2  2  2  2]] [['<s>', '<s>', '<s>', '<s>', '3', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.0128349  -0.00947238 -0.00390665  0.03955424  0.25292935
 -0.0588078  -0.03960574 -0.02849956  0.17514895]
12  r_total and score:  3228.2924185089 2.732837328482116
Current Bleu score is:  2.732837328482116

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 2 10  2  2  2  2  2  2  2  2]] [['<s>', '8', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01412722  0.18373987 -0.09341186 -0.03771428 -0.01760824 -0.01023452
 -0.00669853 -0.00472745 -0.00351564  0.02395657]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2  2  2  4  8 10  2  2  2  2]] [['<s>', '<s>', '<s>', '9', '3', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.0128349  -0.00947238 -0.00161671  0.04774154  0.30059809
 -0.08068247 -0.05108441 -0.03527161  0.19316954]
13  r_total and score:  3636.9681906822666 2.9409109830681204
Current Bleu score is:  2.9409109830681204

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 2 10  2  2  2  2  2  2  2  2]] [['<s>', '8', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01412722  0.18373987 -0.09341186 -0.03771428 -0.01760824 -0.01023452
 -0.00669853 -0.00472745 -0.00351564  0.02395657]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2  2  2  4  8 10  2  2  2  2]] [['<s>', '<s>', '<s>', '9', '3', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.0128349  -0.00947238 -0.00161671  0.04774154  0.30059809
 -0.08068247 -0.05108441 -0.03527161  0.19316954]
14  r_total and score:  2427.3313562359226 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01412722  0.00883027 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2  2  2  4  8 10  2  2  2  2]] [['<s>', '<s>', '<s>', '9', '3', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.0128349  -0.00947238 -0.00161671  0.04774154  0.30059809
 -0.08068247 -0.05108441 -0.03527161  0.19316954]
15  r_total and score:  3374.0461290415924 2.365748882423934
Current Bleu score is:  2.365748882423934

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01412722  0.00883027 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2  2  2  2  8 10  2  2  2  2]] [['<s>', '<s>', '<s>', '<s>', '3', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.0128349  -0.00947238 -0.00390665  0.03955424  0.25292935
 -0.0588078  -0.03960574 -0.02849956  0.17514895]
16  r_total and score:  2614.440305650694 1.4726168298711395
Current Bleu score is:  1.4726168298711395

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  2  2  2  2  2  2  2  2]] [['0', '8', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.49801842 -0.32902978 -0.0820684  -0.02822608 -0.01444113
 -0.00879382 -0.00592244 -0.00426168  0.02619088]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 11  4  4  9  2  2  2  2]] [['0', '8', '0', '9', '9', '2', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.05326709 -0.02196869 -0.01206484  0.04179882]
17  r_total and score:  4296.420116083571 2.9947053284148772
Current Bleu score is:  2.9947053284148772

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11  2  9  9  9  9  9  9  9  9]] [['0', '<s>', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05       -0.0048199  -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  6  2 11  2  2  9  9  9  9]] [['0', '6', '<s>', '0', '<s>', '<s>', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.01443607 -0.00725627 -0.00947238 -0.00390665
  0.03955424 -0.00396389 -0.00336999  0.04179882]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  6 11  4  9  9  9  9  9  9]] [['0', '6', '0', '9', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
18  r_total and score:  6218.738520714469 4.720060087819334
Current Bleu score is:  4.720060087819334

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11  9  9  9  9  9  9  9  9  9]] [['0', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  9  2 11  2  9  9  9  9  9]] [['0', '2', '<s>', '0', '<s>', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.32902978 -0.04080498 -0.05326709 -0.00909141
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11 11  4  9  9  9  9  9  9]] [['0', '0', '0', '9', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
19  r_total and score:  6872.799873239385 5.570798411638758
Current Bleu score is:  5.570798411638758

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01412722  0.00883027 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2 11  6  4  8  9  2  2  2  2]] [['<s>', '0', '6', '9', '3', '2', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.01728052 -0.00266619 -0.00177944  0.08149774 -0.0166192
 -0.02822608 -0.01444113 -0.00879382  0.036375  ]
20  r_total and score:  5785.612008704203 4.467867342779414
Current Bleu score is:  4.467867342779414

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 2 11  2  2  2  2  2  2  2  2]] [['<s>', '0', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01412722  0.02105908 -0.01661124 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2 11  2 13  8  9  2  2  2  2]] [['<s>', '0', '<s>', '1', '3', '2', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.01728052 -0.00882806 -0.00295536  0.06021266 -0.00909141
 -0.01760824 -0.01023452 -0.00669853  0.03219966]
21  r_total and score:  5024.6806636763695 4.221781569805328
Current Bleu score is:  4.221781569805328

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  9  2  2  2  2  2  2  2  2]] [['1', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.49801842 -0.32902978 -0.0820684  -0.02822608 -0.01444113
 -0.00879382 -0.00592244 -0.00426168  0.02619088]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2  2  2 13  8 10  2  2  2  2]] [['<s>', '<s>', '<s>', '1', '3', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.0128349  -0.00947238 -0.00161671  0.04774154  0.30059809
 -0.08068247 -0.05108441 -0.03527161  0.19316954]
22  r_total and score:  5554.201911551037 4.656989803995153
Current Bleu score is:  4.656989803995153

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 11  2  2  2  2  2  2  2  2]] [['1', '0', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.01443607 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2 11 11  4  4 10  2  2  2  2]] [['<s>', '0', '0', '9', '9', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.01728052 -0.00266619 -0.00177944 -0.00438243  0.06926097
 -0.02822608 -0.01444113 -0.00879382  0.036375  ]
23  r_total and score:  6166.113407404842 5.145981476232762
Current Bleu score is:  5.145981476232762

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  2  2  2  2  2  2  2  2  2]] [['7', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 11  2  2  2  2  2  2  2  2]] [['9', '0', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.91578194 -0.41684774 -0.32902978 -0.0820684  -0.02822608 -0.01444113
 -0.00879382 -0.00592244 -0.00426168  0.02619088]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 11 11 13  4  2  2  2  2  2]] [['7', '0', '0', '1', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00911723
 -0.00501939 -0.00256804 -0.00156379  0.00646849]
24  r_total and score:  6266.128117325651 5.327521319632108
Current Bleu score is:  5.327521319632108

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  2  2  2  2  2  2  2  2  2]] [['8', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 10  2  2  2  2  2  2]] [['1', '8', '9', '8', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -1.42950658e-01  9.67233440e-01
 -6.24682783e-01 -2.52210592e-01 -1.17753409e-01 -6.84423604e-02
 -4.47957586e-02  2.15332085e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 11  4  4  2  2  2  2  2]] [['0', '8', '0', '9', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.05126995
 -0.02822608 -0.01444113 -0.00879382  0.036375  ]
25  r_total and score:  6978.877117054527 5.65401084681994
Current Bleu score is:  5.65401084681994

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  2  2  2  2  2  2  2  2  2]] [['8', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  4 10  2  2  2  2  2  2]] [['9', '8', '9', '8', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407 -18.23802164  -2.61061406  -0.69132514
  -0.2791169   -0.13031557  -0.07574392  -0.04957466   0.23830413]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11 11  4  4  2  2  2  2  2]] [['0', '0', '0', '9', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00911723
 -0.00501939 -0.00256804 -0.00156379  0.00646849]
26  r_total and score:  7080.057924234653 6.511807638158191
Current Bleu score is:  6.511807638158191

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  2  2  2  2  2  2  2  2  2]] [['8', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11  4 10  2  2  2  2  2  2]] [['0', '0', '9', '8', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01  1.04067266e+00
 -6.24682783e-01 -2.52210592e-01 -1.17753409e-01 -6.84423604e-02
 -4.47957586e-02  2.15332085e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 11 11  4  4  2  2  2  2  2]] [['9', '0', '0', '9', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00911723
 -0.00501939 -0.00256804 -0.00156379  0.00646849]
27  r_total and score:  4837.775967913028 4.07364226292989
Current Bleu score is:  4.07364226292989

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  2  2  2  2  2  2  2  2  2]] [['7', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11  4 10  2  2  2  2  2  2]] [['0', '0', '9', '8', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01  1.04067266e+00
 -6.24682783e-01 -2.52210592e-01 -1.17753409e-01 -6.84423604e-02
 -4.47957586e-02  2.15332085e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 11  4  4  4  2  2  2  2  2]] [['9', '0', '9', '9', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00911723
 -0.00501939 -0.00256804 -0.00156379  0.00646849]
28  r_total and score:  2831.692414177446 1.888640117132571
Current Bleu score is:  1.888640117132571

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  2  2  2  2  2  2  2  2  2]] [['7', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 11  4 11  2  2  2  2  2  2]] [['9', '0', '9', '0', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.11108605 -0.04485009
 -0.02093985 -0.01217096 -0.00796594  0.03829206]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 11  4  4  4  2  2  2  2  2]] [['9', '0', '9', '9', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00911723
 -0.00501939 -0.00256804 -0.00156379  0.00646849]
29  r_total and score:  4014.458704928944 3.4496338558558395
Current Bleu score is:  3.4496338558558395

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11  2  2  2  2  2  2  2  2  2]] [['0', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11  4 11  2  2  2  2  2  2]] [['0', '0', '9', '0', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.09341186 -0.03771428
 -0.01760824 -0.01023452 -0.00669853  0.03219966]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 11  4  4  4  2  2  2  2  2]] [['9', '0', '9', '9', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00911723
 -0.00501939 -0.00256804 -0.00156379  0.00646849]
30  r_total and score:  3645.0540886048525 3.0509934242093886
Current Bleu score is:  3.0509934242093886
EPOCH %d 2
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  2  2  2  2  2  2  2  2  2]] [['7', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11  4 11  2  2  2  2  2  2]] [['0', '0', '9', '0', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.09341186 -0.03771428
 -0.01760824 -0.01023452 -0.00669853  0.03219966]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 11 11  4  4  2  2  2  2  2]] [['9', '0', '0', '9', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00911723
 -0.00501939 -0.00256804 -0.00156379  0.00646849]
31  r_total and score:  3998.3304273437716 3.402204175316054
Current Bleu score is:  3.402204175316054

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11  4 10  2  2  2  2  2  2]] [['0', '0', '9', '8', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01  1.04067266e+00
 -6.24682783e-01 -2.52210592e-01 -1.17753409e-01 -6.84423604e-02
 -4.47957586e-02  2.15332085e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 11  4  4  4  2  2  2  2  2]] [['9', '0', '9', '9', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00911723
 -0.00501939 -0.00256804 -0.00156379  0.00646849]
32  r_total and score:  4046.0281310212135 3.2982647443146442
Current Bleu score is:  3.2982647443146442

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  2  2  2  2  2  2  2  2  2]] [['7', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 11  4 10  2  2  2  2  2  2]] [['9', '0', '9', '8', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  1.10839677 -0.69132514 -0.2791169
 -0.13031557 -0.07574392 -0.04957466  0.23830413]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2 11  2  2  4  2  2  2  2  2]] [['<s>', '0', '<s>', '<s>', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.01728052 -0.00882806 -0.00670665 -0.00126809 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]
33  r_total and score:  4778.072255399721 4.167365081521242
Current Bleu score is:  4.167365081521242

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  2  2  2  2  2  2  2  2  2]] [['7', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  4  2  2  2  2  2  2  2]] [['9', '8', '9', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407 -18.23802164  -3.11955158  -0.39422056
  -0.16258652  -0.08928983  -0.0565342   -0.03903445   0.21377724]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2  2  2 12  4 10  2  2  2  2]] [['<s>', '<s>', '<s>', '7', '9', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.0128349  -0.00947238 -0.00161671 -0.00126809  0.04326335
 -0.01206484 -0.0076389  -0.00527434  0.02888558]
34  r_total and score:  5153.185598459891 4.693231096050076
Current Bleu score is:  4.693231096050076

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  2  5 12  2  2  2  2  2]] [['9', '8', '<s>', '5', '7', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407 -21.17679665  -0.18077657  -0.18238762
  -0.2791169   -0.13031557  -0.07574392  -0.04957466   0.23830413]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 12  4  4  2  2  2  2  2]] [['5', '8', '7', '9', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.34286283  -0.1887592   -0.09657366  -0.0588078    0.24325426]
35  r_total and score:  7629.786310507824 6.65801520506271
Current Bleu score is:  6.65801520506271

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  2  2  2  2  2  2  2  2  2]] [['7', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 5 2 2 2 2 2 2]] [['9', '9', '9', '5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.09557581 -0.12293693 -0.04963478
 -0.02317375 -0.01346939 -0.00881576  0.04237713]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  4  2  2  2  2  2]] [['7', '9', '7', '4', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.05126995
 -0.02822608 -0.01444113 -0.00879382  0.036375  ]
36  r_total and score:  6129.8097651365915 4.949352830274528
Current Bleu score is:  4.949352830274528

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 2 2 2 2 2 2 2 2 2]] [['2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  4  5  9  2  2  2  2  2]] [['9', '8', '9', '5', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407 -18.23802164  -2.50141532  -0.14485884
  -0.69011022  -0.23735212  -0.12143495  -0.07394689   0.30587603]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 4 4 4 4 2 2 2 2 2]] [['5', '9', '9', '9', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.05126995
 -0.02822608 -0.01444113 -0.00879382  0.036375  ]
37  r_total and score:  3419.4040337701545 3.2194965083136964
Current Bleu score is:  3.2194965083136964

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  4  5  9  2  2  2  2  2]] [['9', '8', '9', '5', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407 -18.23802164  -2.50141532  -0.14485884
  -0.69011022  -0.23735212  -0.12143495  -0.07394689   0.30587603]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 12  4  4  2 11 11 11 11]] [['5', '8', '7', '9', '9', '<s>', '0', '0', '0', '0']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.34286283  -0.08027338  -0.06079792  -0.0476879    0.39863571]
38  r_total and score:  4447.496290084381 5.036828594614502
Current Bleu score is:  5.036828594614502

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  9  2  2  2  2  2]] [['9', '8', '2', '5', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407  29.02869589  26.5383664  -11.00604781
 -32.30195203 -11.10972814  -5.68399914  -3.46122802  14.31712315]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 12  4  4  2  2  2  2  2]] [['5', '8', '7', '9', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.34286283  -0.1887592   -0.09657366  -0.0588078    0.24325426]
39  r_total and score:  5401.205916895969 5.562759241630082
Current Bleu score is:  5.562759241630082

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 11  4  5 11  2  2  2  2  2]] [['9', '0', '9', '5', '0', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.09557581 -0.03680094 -0.10800809
 -0.03714761 -0.0190056  -0.01157331  0.04787219]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 11  4  4  7  2  2  2  2  2]] [['9', '0', '9', '9', '4', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.05126995
 -0.02822608 -0.01444113 -0.00879382  0.036375  ]
40  r_total and score:  3546.8427602445568 2.977634313331501
Current Bleu score is:  2.977634313331501

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 11  4  5 11  2  2  2  2  2]] [['9', '0', '9', '5', '0', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.09557581 -0.03680094 -0.10800809
 -0.03714761 -0.0190056  -0.01157331  0.04787219]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[6 4 4 4 9 2 2 2 2 2]] [['6', '9', '9', '9', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00911723
 -0.00501939 -0.00256804 -0.00156379  0.00646849]
41  r_total and score:  4725.558456648466 3.7359257258931353
Current Bleu score is:  3.7359257258931353

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 11  4  5 11  2  2  2  2  2]] [['1', '0', '9', '5', '0', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.04723938 -0.0332534  -0.09759632
 -0.03356666 -0.0171735  -0.01045767  0.0432574 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 11  6  4  9  2  2  2  2  2]] [['6', '0', '6', '9', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00911723
 -0.00501939 -0.00256804 -0.00156379  0.00646849]
42  r_total and score:  3960.748876327742 2.759846014833736
Current Bleu score is:  2.759846014833736

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 11  8  5 11  2  2  2  2  2]] [['1', '0', '3', '5', '0', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.16961266 -0.02796267 -0.0820684
 -0.02822608 -0.01444113 -0.00879382  0.036375  ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 11  6  4  9  2  2  2  2  2]] [['6', '0', '6', '9', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00911723
 -0.00501939 -0.00256804 -0.00156379  0.00646849]
43  r_total and score:  3190.5023535277046 2.5288106312004115
Current Bleu score is:  2.5288106312004115

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 11  8  5 11  2  2  2  2  2]] [['9', '0', '3', '5', '0', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.04723938 -0.0332534  -0.09759632
 -0.03356666 -0.0171735  -0.01045767  0.0432574 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11 12  4  9  2  2  2  2  2]] [['5', '0', '7', '9', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.05126995
 -0.02822608 -0.01444113 -0.00879382  0.036375  ]
44  r_total and score:  2965.99284715246 1.9853304626917472
Current Bleu score is:  1.9853304626917472

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 11  9  5  4  2  2  2  2  2]] [['1', '0', '2', '5', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01  1.04067266e+00
  7.08574716e+00 -4.06175543e+00 -1.39697436e+00 -7.14725054e-01
 -4.35226382e-01  1.80028293e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  6  4  9  2  2  2  2  2]] [['5', '0', '6', '9', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.05126995
 -0.02822608 -0.01444113 -0.00879382  0.036375  ]
45  r_total and score:  4870.19879878011 4.063006397746266
Current Bleu score is:  4.063006397746266

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5 10  2  2  2  2  2]] [['9', '8', '2', '5', '8', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407  29.02869589  26.5383664  -11.00604781
 -32.30195203 -11.10972814  -5.68399914  -3.46122802  14.31712315]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 10  4  9  2  2  2  2  2]] [['5', '8', '8', '9', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.37944009  -0.20889639  -0.10687632  -0.06508152   0.26920509]
46  r_total and score:  5321.778270672026 3.76165192963881
Current Bleu score is:  3.76165192963881

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  2  2  2  2  2  2  2  2  2]] [['8', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9 10 10  2  2  2  2  2]] [['9', '8', '2', '8', '8', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -1.38393724
  -4.06175543  -1.39697436  -0.71472505  -0.43522638   1.80028293]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 10  4  9  2  2  2  2  2]] [['5', '8', '8', '9', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.37944009  -0.20889639  -0.10687632  -0.06508152   0.26920509]
47  r_total and score:  4663.693910134344 4.080476635488982
Current Bleu score is:  4.080476635488982

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  7  9 10 10  2  2  2  2  2]] [['9', '4', '2', '8', '8', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.09557581 -0.03680094 -0.10800809
 -0.03714761 -0.0190056  -0.01157331  0.04787219]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  7 10  4  9  2  2  2  2  2]] [['8', '4', '8', '9', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.08918036 -0.01973199 -0.06747505
 -0.03714761 -0.0190056  -0.01157331  0.04787219]
48  r_total and score:  3763.6353411036207 2.5771455843773428
Current Bleu score is:  2.5771455843773428

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  7  5 10 10  2  2  2  2  2]] [['9', '4', '5', '8', '8', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.09557581 -0.03680094 -0.10800809
 -0.03714761 -0.0190056  -0.01157331  0.04787219]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5 10  4  9  2  2  2  2  2]] [['5', '5', '8', '9', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735  0.09107039  2.49189332 -1.77940052 -0.11096112 -0.37944009
 -0.20889639 -0.10687632 -0.06508152  0.26920509]
49  r_total and score:  5089.732031964201 3.617869703182736
Current Bleu score is:  3.617869703182736

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  5 10 10  2  2  2  2  2]] [['9', '8', '5', '8', '8', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407 -18.23802164  -2.61061406  -0.20694689
  -0.6073741   -0.20889639  -0.10687632  -0.06508152   0.26920509]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 5 5 4 7 2 2 2 2 2]] [['5', '5', '5', '9', '4', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -6.74750504e-02 -3.71476149e-02 -1.90055966e-02
 -1.15733134e-02  4.78721865e-02]
50  r_total and score:  3085.494671579087 2.5471230516333265
Current Bleu score is:  2.5471230516333265

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 5 5 5 2 2 2 2 2 2]] [['9', '5', '5', '5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.11108605 -0.04485009
 -0.02093985 -0.01217096 -0.00796594  0.03829206]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[6 5 5 4 7 2 2 2 2 2]] [['6', '5', '5', '9', '4', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -6.74750504e-02 -3.71476149e-02 -1.90055966e-02
 -1.15733134e-02  4.78721865e-02]
51  r_total and score:  3391.2184500945905 2.124894768433141
Current Bleu score is:  2.124894768433141

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 5 5 5 2 2 2 2 2 2]] [['9', '5', '5', '5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.11108605 -0.04485009
 -0.02093985 -0.01217096 -0.00796594  0.03829206]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 5 5 4 7 2 2 2 2 2]] [['5', '5', '5', '9', '4', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -6.74750504e-02 -3.71476149e-02 -1.90055966e-02
 -1.15733134e-02  4.78721865e-02]
52  r_total and score:  3335.673320440565 3.4804819793094306
Current Bleu score is:  3.4804819793094306

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 2 2 2 2 2 2 2 2 2]] [['2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 5 5 5 2 2 2 2 2 2]] [['9', '5', '5', '5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.11108605 -0.04485009
 -0.02093985 -0.01217096 -0.00796594  0.03829206]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 5 5 5 8 2 2 2 2 2]] [['5', '5', '5', '5', '3', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -6.74750504e-02 -3.71476149e-02 -1.90055966e-02
 -1.15733134e-02  4.78721865e-02]
53  r_total and score:  3977.783286786796 3.934550894020129
Current Bleu score is:  3.934550894020129

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  5  5  5  2  2  2  2  2  2]] [['1', '5', '5', '5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.09341186 -0.03771428
 -0.01760824 -0.01023452 -0.00669853  0.03219966]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  5 13  5  9  2  2  2  2  2]] [['1', '5', '1', '5', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.06097059
 -0.03356666 -0.0171735  -0.01045767  0.0432574 ]
54  r_total and score:  2384.5725387885022 2.72554648150968
Current Bleu score is:  2.72554648150968

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 2 2 2 2 2 2 2 2 2]] [['2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 11 10 10  9  2  2  2  2  2]] [['1', '0', '8', '8', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01 -8.46772381e-02
  9.38352275e-01 -5.48824457e-01 -1.88759197e-01 -9.65736603e-02
 -5.88077955e-02  2.43254257e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 11 13  4  7 10  2  2  2  2]] [['1', '0', '1', '9', '4', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286  0.01442
 -0.0633456  -0.02612533 -0.0143476   0.04970745]
55  r_total and score:  2081.5533003077953 1.4031947434844203
Current Bleu score is:  1.4031947434844203

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  7 10 10  9 13  2  2  2  2]] [['1', '4', '8', '8', '2', '1', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01 -8.46772381e-02
  9.38352275e-01 -2.72879345e-01 -3.56218488e-01 -1.46913505e-01
 -8.06824692e-02  2.79525560e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  7 13  7  7 10  2  2  2  2]] [['1', '4', '1', '4', '4', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307  0.01442
 -0.0633456  -0.02612533 -0.0143476   0.04970745]
56  r_total and score:  3021.721851441302 2.9871866611893156
Current Bleu score is:  2.9871866611893156

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  7 10 10  9  6  2  2  2  2]] [['1', '4', '8', '8', '2', '6', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01 -8.46772381e-02
  9.38352275e-01 -2.72879345e-01 -3.56218488e-01 -1.46913505e-01
 -8.06824692e-02  2.79525560e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 11  7  7 10 10 10 10 10]] [['0', '8', '0', '4', '4', '8', '8', '8', '8', '8']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
57  r_total and score:  2930.3648933702893 2.275629735809256
Current Bleu score is:  2.275629735809256

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 2 2 2 2 2 2 2 2 2]] [['2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  7 10 10  9  6  2  2  2  2]] [['1', '4', '8', '8', '2', '6', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01 -8.46772381e-02
  9.38352275e-01 -2.72879345e-01 -3.56218488e-01 -1.46913505e-01
 -8.06824692e-02  2.79525560e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  7  5  7  7 10  2  2  2  2]] [['0', '4', '5', '4', '4', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -4.75455349e-02  7.75449069e-01
 -1.00264689e-01  2.51850546e-02 -3.94220560e-01 -1.62586520e-01
 -8.92898299e-02  3.09345883e-01]
58  r_total and score:  3135.9715174179373 1.977673709370429
Current Bleu score is:  1.977673709370429

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 2 2 2 2 2 2 2 2 2]] [['2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  9 10 10  7  6  6  2  2  2]] [['1', '2', '8', '8', '4', '6', '6', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.04485009 -0.02093985  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 10  7  9 10  2  2  2  2]] [['0', '8', '8', '4', '2', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.07010343 -0.02891243 -0.01587823  0.05501034]
59  r_total and score:  3850.735631339718 1.9931068058306334
Current Bleu score is:  1.9931068058306334

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9 10  7  6  6  6  6  6]] [['1', '8', '2', '8', '4', '6', '6', '6', '6', '6']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 10  7  9 10  2  2  2  2]] [['0', '8', '8', '4', '2', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.07010343 -0.02891243 -0.01587823  0.05501034]
60  r_total and score:  5058.066201433222 2.9806183928891343
Current Bleu score is:  2.9806183928891343

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 6 2 2 2 2 2 2 2 2]] [['5', '6', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -2.06616355e+00 -8.20683983e-02
 -2.82260835e-02 -1.44411305e-02 -8.79381654e-03 -5.92244011e-03
 -4.26167813e-03  2.61908774e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9 10  7  6  6  6  6  6]] [['1', '8', '2', '8', '4', '6', '6', '6', '6', '6']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 11 10  9 10  2  2  2  2]] [['0', '8', '0', '8', '2', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.0633456  -0.02612533 -0.0143476   0.04970745]
61  r_total and score:  4665.911033261002 3.189694840641403
Current Bleu score is:  3.189694840641403

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9 10  7  6  6  6  6  6]] [['1', '8', '2', '8', '4', '6', '6', '6', '6', '6']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 11  7  9 10  2  2  2  2]] [['0', '8', '0', '4', '2', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986  0.00447861
 -0.07010343 -0.02891243 -0.01587823  0.05501034]
62  r_total and score:  4163.362246799836 2.9743264667101235
Current Bleu score is:  2.9743264667101235

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 10 10  7  6  6  6  6  6]] [['1', '8', '8', '8', '4', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 10  9 10  2  2  2  2]] [['5', '8', '5', '8', '2', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -28.5925009   -0.79737572
  -0.53217701  -2.83290136  -1.1683601   -0.64164406   2.22298496]
63  r_total and score:  5881.425025674981 3.720246527111905
Current Bleu score is:  3.720246527111905
EPOCH %d 3
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 6 2 2 2 2 2 2 2 2]] [['5', '6', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -2.06616355e+00 -8.20683983e-02
 -2.82260835e-02 -1.44411305e-02 -8.79381654e-03 -5.92244011e-03
 -4.26167813e-03  2.61908774e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 10 10  7  6  6  6  6  6]] [['1', '8', '8', '8', '4', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 10 10  9 10  2  2  2  2]] [['5', '8', '8', '8', '2', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.39422056  -0.16258652  -0.08928983   0.30934588]
64  r_total and score:  3829.0179745310406 2.1380165260263566
Current Bleu score is:  2.1380165260263566

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 6 2 2 2 2 2 2 2 2]] [['5', '6', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -2.06616355e+00 -8.20683983e-02
 -2.82260835e-02 -1.44411305e-02 -8.79381654e-03 -5.92244011e-03
 -4.26167813e-03  2.61908774e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 10 10  7  6  6  6  6  6]] [['9', '8', '8', '8', '4', '6', '6', '6', '6', '6']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.18699762
  -0.27287935  -0.16480582  -0.1111393   -0.08027338   0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 10 10  9 10  6  6  6  6]] [['5', '8', '8', '8', '2', '8', '6', '6', '6', '6']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
65  r_total and score:  5777.412110904527 3.0629049468464484
Current Bleu score is:  3.0629049468464484

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9 10  7  6  7  7  7  7]] [['9', '8', '2', '8', '4', '6', '4', '4', '4', '4']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -1.38393724
  -2.01953311  -1.2196995   -0.82252282  -0.59408945   3.75311927]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10 10  9 10 10 10 10 10]] [['8', '8', '8', '8', '2', '8', '8', '8', '8', '8']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
66  r_total and score:  5221.512473428623 3.182707742107392
Current Bleu score is:  3.182707742107392

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 7 2 2 2 2 2 2 2 2]] [['5', '4', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -2.06616355e+00 -8.20683983e-02
 -2.82260835e-02 -1.44411305e-02 -8.79381654e-03 -5.92244011e-03
 -4.26167813e-03  2.61908774e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9 10  7  6  7  7  7  7]] [['9', '8', '2', '8', '4', '6', '4', '4', '4', '4']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -1.38393724
  -2.01953311  -1.2196995   -0.82252282  -0.59408945   3.75311927]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10 10 10  9 10  6  6  6  6]] [['9', '8', '8', '8', '2', '8', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
67  r_total and score:  6647.839758560487 4.00563586415437
Current Bleu score is:  4.00563586415437

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 7 2 2 2 2 2 2 2 2]] [['<s>', '4', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606  0.01766404 -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9 10  7  7  7  7  7  7]] [['9', '8', '2', '8', '4', '4', '4', '4', '4', '4']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -1.38393724
  -2.01953311  -1.2196995   -0.82252282  -0.59408945   3.75311927]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10  4 10  8 10  2  2  2  2]] [['9', '8', '9', '8', '3', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -1.91961772e-02
 -1.81919385e-04  7.72369030e-01 -3.94220560e-01 -1.62586520e-01
 -8.92898299e-02  3.09345883e-01]
68  r_total and score:  6200.121897729744 5.025430330812433
Current Bleu score is:  5.025430330812433

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 7 2 2 2 2 2 2 2 2]] [['5', '4', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -2.06616355e+00 -8.20683983e-02
 -2.82260835e-02 -1.44411305e-02 -8.79381654e-03 -5.92244011e-03
 -4.26167813e-03  2.61908774e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9 10  7  2  2  2  2  2]] [['9', '8', '2', '8', '4', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -1.38393724
  -4.06175543  -1.39697436  -0.71472505  -0.43522638   1.80028293]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10 10  9  9 10  2  2  2  2]] [['9', '8', '8', '2', '2', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.0633456  -0.02612533 -0.0143476   0.04970745]
69  r_total and score:  7638.912106197226 5.835124539240659
Current Bleu score is:  5.835124539240659

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 7 2 2 2 2 2 2 2 2]] [['5', '4', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -2.06616355e+00 -8.20683983e-02
 -2.82260835e-02 -1.44411305e-02 -8.79381654e-03 -5.92244011e-03
 -4.26167813e-03  2.61908774e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9 10  7  2  2  2  2  2]] [['9', '8', '2', '8', '4', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -1.38393724
  -4.06175543  -1.39697436  -0.71472505  -0.43522638   1.80028293]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 13 10  9  9 10  2  2  2  2]] [['9', '1', '8', '2', '2', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281 -0.01499307  0.01442
 -0.0633456  -0.02612533 -0.0143476   0.04970745]
70  r_total and score:  8230.236847173806 6.239019541408877
Current Bleu score is:  6.239019541408877

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 7 2 2 2 2 2 2 2 2]] [['9', '4', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7  2  2  2  2  2]] [['9', '8', '2', '5', '4', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407  29.02869589  26.5383664  -11.00604781
 -32.30195203 -11.10972814  -5.68399914  -3.46122802  14.31712315]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5 10  9  9 10  2  2  2  2]] [['5', '5', '8', '2', '2', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735  0.09107039  2.49189332 -1.77940052 -0.11096112 -0.00280932
 -0.42361756 -0.17471059 -0.09594817  0.33241378]
71  r_total and score:  9461.944523375456 8.007435915230124
Current Bleu score is:  8.007435915230124

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 7 2 2 2 2 2 2 2 2]] [['4', '4', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  7  6  2  2  2  2]] [['9', '8', '2', '5', '4', '6', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407  29.02869589  26.5383664  -11.00604781
 -16.06075568 -20.96581586  -8.6468322   -4.74869736  16.4519294 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  5 10 10  9 10  2  2  2  2]] [['9', '5', '8', '8', '2', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.41027304e+00
 -1.10961119e-01 -7.40566266e-02 -3.94220560e-01 -1.62586520e-01
 -8.92898299e-02  3.09345883e-01]
72  r_total and score:  7562.563505176291 6.130551091659592
Current Bleu score is:  6.130551091659592

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 7 7 7 7 7 7 7 7 7]] [['5', '4', '4', '4', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9 10  7 10  2  2  2  2]] [['9', '8', '2', '8', '4', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -1.38393724
  -2.01953311  -2.63631177  -1.08728159  -0.59711708   2.0687206 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  5 10  9 10  2  2  2  2]] [['3', '8', '5', '8', '2', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735 13.19663097 -9.85473391 -2.06593965 -0.15692272 -0.10473189
 -0.55751206 -0.22993206 -0.12627489  0.43748114]
73  r_total and score:  7266.882663611477 6.051467937528689
Current Bleu score is:  6.051467937528689

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 4 7 7 7 7 7 7 7 7]] [['5', '9', '4', '4', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 10 10  7 10  2  2  7  2]] [['9', '8', '8', '8', '4', '8', '<s>', '<s>', '4', '<s>']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.18699762
  -0.27287935  -0.35621849  -0.1469135   -0.03163782   0.3285702 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  5 10 10  8 10  7  7  7  7]] [['9', '5', '8', '8', '3', '8', '4', '4', '4', '4']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.41027304e+00
 -3.41914172e-02  1.14678047e-01 -1.76394894e-01 -1.66192011e-01
 -1.20036695e-01  7.58323567e-01]
74  r_total and score:  6876.346246534061 4.278699936294437
Current Bleu score is:  4.278699936294437

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 7 7 7 7 7 7 7 7 7]] [['2', '4', '4', '4', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 10 10  7 10  4  4  4  4]] [['9', '8', '8', '8', '4', '8', '9', '9', '9', '9']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.18699762
  -0.27287935  -0.09028485  -0.12299585  -0.08883709   0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  5 10 10  8 10  7  7  7  7]] [['9', '5', '8', '8', '3', '8', '4', '4', '4', '4']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.41027304e+00
 -3.41914172e-02  1.14678047e-01 -1.76394894e-01 -1.66192011e-01
 -1.20036695e-01  7.58323567e-01]
75  r_total and score:  4765.730812375628 2.778117135425631
Current Bleu score is:  2.778117135425631

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 7 7 7 7 7 7 7 7 7]] [['5', '4', '4', '4', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 10 10 10 10  7  7  7  7]] [['9', '8', '8', '8', '8', '8', '4', '4', '4', '4']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.18699762
  -0.27287935  -0.16480582  -0.1111393   -0.08027338   0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  5 10 10  8 10  7  7  7  7]] [['9', '5', '8', '8', '3', '8', '4', '4', '4', '4']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.41027304e+00
 -3.41914172e-02  1.14678047e-01 -1.76394894e-01 -1.66192011e-01
 -1.20036695e-01  7.58323567e-01]
76  r_total and score:  5432.770567979883 3.757943858182727
Current Bleu score is:  3.757943858182727

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 7 2 2 2 2 2 2 2 2]] [['5', '4', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -2.06616355e+00 -8.20683983e-02
 -2.82260835e-02 -1.44411305e-02 -8.79381654e-03 -5.92244011e-03
 -4.26167813e-03  2.61908774e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 10 10 10  8  8  8  8]] [['8', '8', '8', '8', '8', '8', '3', '3', '3', '3']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 10 10  8 10  6  6  6  6]] [['5', '8', '8', '8', '3', '8', '6', '6', '6', '6']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.03419142
   0.11467805  -0.23307062  -0.1571747   -0.1135237    0.71717815]
77  r_total and score:  6295.466092752001 4.473253569969986
Current Bleu score is:  4.473253569969986

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 2 2 2 2 2 2 2]] [['5', '2', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -4.21221763e-01
 -5.32670881e-02 -2.19686930e-02 -1.20648432e-02 -7.63890143e-03
 -5.27433516e-03  2.88855839e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 10 10  7 10  8  8  8  8]] [['9', '8', '8', '8', '4', '8', '3', '3', '3', '3']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.18699762
  -0.27287935  -0.16480582  -0.1111393   -0.08027338   0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  5  4 10  9 10 10 10 10 10]] [['9', '5', '9', '8', '2', '8', '8', '8', '8', '8']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
78  r_total and score:  6903.545815666315 4.576187319180601
Current Bleu score is:  4.576187319180601

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 4 9 2 2 2 2 2 2 2]] [['5', '9', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -4.21221763e-01
 -5.32670881e-02 -2.19686930e-02 -1.20648432e-02 -7.63890143e-03
 -5.27433516e-03  2.88855839e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 10 10  7 10  8  8  8  8]] [['9', '8', '8', '8', '4', '8', '3', '3', '3', '3']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.18699762
  -0.27287935  -0.16480582  -0.1111393   -0.08027338   0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  5 10 10  8 10  2  2  2  2]] [['9', '5', '8', '8', '3', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.41027304e+00
 -3.41914172e-02  1.14678047e-01 -5.03769016e-01 -2.07767071e-01
 -1.14102242e-01  3.95308837e-01]
79  r_total and score:  6103.422814873499 4.150765203019893
Current Bleu score is:  4.150765203019893

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 4 8 8 8 8 8 8 8 8]] [['5', '9', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  5 10 10  7  6  8  8  8  8]] [['9', '5', '8', '8', '4', '6', '3', '3', '3', '3']] 

Reward:  [ 0.91578194 -0.21018242 -0.29810008 -0.1470917  -0.03680094 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  5  4 10  9 10  6  2  2  2]] [['9', '5', '9', '8', '2', '8', '6', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986  0.00447861
 -0.03243361 -0.04963478 -0.02317375  0.06466228]
80  r_total and score:  5446.141454548439 4.061591733835101
Current Bleu score is:  4.061591733835101

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 8 8 8 8 8 8 8 8 8]] [['5', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  5  5 10 10  8  8  8  8  8]] [['9', '5', '5', '8', '8', '3', '3', '3', '3', '3']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.09557581 -0.03680094 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5 10 10  8 10 10 10 10 10]] [['5', '5', '8', '8', '3', '8', '8', '8', '8', '8']] 

Reward:  [ 0.33689735  0.09107039  2.49189332 -1.69435646 -0.05576742  0.12125727
 -0.24644218 -0.16619201 -0.12003669  0.75832357]
81  r_total and score:  6608.37761020747 4.654220326244866
Current Bleu score is:  4.654220326244866

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 8 8 8 8 8 8 8 8 8]] [['5', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  5 10 10  7 13  8  8  8  8]] [['9', '5', '8', '8', '4', '1', '3', '3', '3', '3']] 

Reward:  [ 0.91578194 -0.21018242 -0.29810008 -0.1470917  -0.03680094 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5 10 10  8 10  6 10 10 10]] [['5', '5', '8', '8', '3', '8', '6', '8', '8', '8']] 

Reward:  [ 0.33689735  0.09107039  2.49189332 -1.69435646 -0.05576742  0.12125727
 -0.24644218 -0.16619201 -0.12003669  0.75832357]
82  r_total and score:  6253.379855904262 3.9404418629705154
Current Bleu score is:  3.9404418629705154

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 4 8 8 8 8 8 8 8 8]] [['5', '9', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  5 10 10  2  8  8  8  8  8]] [['9', '5', '8', '8', '<s>', '3', '3', '3', '3', '3']] 

Reward:  [ 0.91578194 -0.21018242 -0.29810008 -0.1470917  -0.12293693 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5 10  2 10  6  6  6  6]] [['5', '5', '5', '8', '<s>', '8', '6', '6', '6', '6']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438  0.88538718 -0.36740536 -0.07452097
 -0.09546167 -0.07230132 -0.05671079  0.47406043]
83  r_total and score:  5779.794817527925 3.705109888353318
Current Bleu score is:  3.705109888353318

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 4 4 4 4 4 4 4 4 4]] [['5', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  5  5 10  2  6  8  8  8  8]] [['9', '5', '5', '8', '<s>', '6', '3', '3', '3', '3']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.09557581 -0.12293693 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5 10  2  6  6  6  6  6]] [['5', '5', '5', '8', '<s>', '6', '6', '6', '6', '6']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438  0.88538718 -0.36740536 -0.12299585
 -0.08883709 -0.06728396 -0.05277534  0.44116294]
84  r_total and score:  5305.529388987789 3.535815873118308
Current Bleu score is:  3.535815873118308

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 4 4 4 4 4 4 4 4 4]] [['5', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  5 10 10  2  8  8  8  8  8]] [['9', '5', '8', '8', '<s>', '3', '3', '3', '3', '3']] 

Reward:  [ 0.91578194 -0.21018242 -0.29810008 -0.1470917  -0.12293693 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5 10 10  2  6  4  4  4  4]] [['5', '5', '8', '8', '<s>', '6', '9', '9', '9', '9']] 

Reward:  [ 0.33689735  0.09107039  2.49189332 -1.69435646 -0.39480275 -0.13216764
 -0.09546167 -0.07230132 -0.05671079  0.47406043]
85  r_total and score:  5134.3659822822265 3.966742468418947
Current Bleu score is:  3.966742468418947

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  4  4  4  4  4  4  4  4  4]] [['8', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  5 10 10  2  6  4  4  4  4]] [['9', '5', '8', '8', '<s>', '6', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.29810008 -0.1470917  -0.12293693 -0.0218721
 -0.00835556 -0.01285719 -0.01008476  0.08430119]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5 10 10  2  6  4  4  4  4]] [['5', '5', '8', '8', '<s>', '6', '9', '9', '9', '9']] 

Reward:  [ 0.33689735  0.09107039  2.49189332 -1.69435646 -0.39480275 -0.13216764
 -0.09546167 -0.07230132 -0.05671079  0.47406043]
86  r_total and score:  4686.718740749393 3.80939492579773
Current Bleu score is:  3.80939492579773

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  4  4  4  4  4  4  4  4  4]] [['8', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 10 10  2 10  4  4  4  4]] [['9', '8', '8', '8', '<s>', '8', '9', '9', '9', '9']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.62468278
  -0.1111393   -0.02617268  -0.06728396  -0.05277534   0.44116294]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5 10 10  2 10  4  4  4  4]] [['5', '5', '8', '8', '<s>', '8', '9', '9', '9', '9']] 

Reward:  [ 0.33689735  0.09107039  2.49189332 -1.69435646 -0.39480275 -0.13216764
 -0.09546167 -0.07230132 -0.05671079  0.47406043]
87  r_total and score:  5119.4720462766245 4.123651668129447
Current Bleu score is:  4.123651668129447

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  7  7  7  7  7  7  7  7  7]] [['8', '4', '4', '4', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 10 10  2  6 11 11 11 11]] [['9', '8', '8', '8', '<s>', '6', '0', '0', '0', '0']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.62468278
  -0.1111393   -0.08027338  -0.06079792  -0.0476879    0.39863571]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11 10 10  2  6  8  8  8  8]] [['5', '0', '8', '8', '<s>', '6', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.06533494 -0.0218721
 -0.00835556 -0.01285719 -0.01008476  0.08430119]
88  r_total and score:  3553.5998143215998 2.9353475805246996
Current Bleu score is:  2.9353475805246996

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  4  4  4  4  4  4  4  4  4]] [['8', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  4 10  2 10  8  8  8  8]] [['9', '8', '9', '8', '<s>', '8', '3', '3', '3', '3']] 

Reward:  [  0.91578194  21.39723407 -18.23802164  -2.61061406  -0.69132514
  -0.12299585  -0.08883709  -0.06728396  -0.05277534   0.44116294]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10 10  2 10  8  8  8  8]] [['8', '8', '8', '8', '<s>', '8', '3', '3', '3', '3']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.05903678 -0.01976367
 -0.00465423 -0.01196497 -0.00938493  0.0784511 ]
89  r_total and score:  4034.8250797972505 2.941223929173435
Current Bleu score is:  2.941223929173435

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  4  2  2  2  2  2  2  2  2]] [['8', '9', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 10 10  2 10  8  2  2  2]] [['9', '8', '8', '8', '<s>', '8', '3', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.62468278
  -0.1111393   -0.08027338  -0.1469135   -0.08068247   0.27952556]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 11 10 10  2 10 10  2  2  2]] [['8', '0', '8', '8', '<s>', '8', '8', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.05903678 -0.01976367
 -0.01427485 -0.02612533 -0.0143476   0.04970745]
90  r_total and score:  5988.617433358704 4.266678762384477
Current Bleu score is:  4.266678762384477

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 2 2 2 2 2 2 2 2]] [['9', '9', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  4 10  2 13  8  8  2  2]] [['9', '8', '9', '8', '<s>', '1', '3', '3', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407 -18.23802164  -2.61061406  -0.69132514
  -0.12299585  -0.08883709  -0.06728396  -0.13031557   0.3636227 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  5 10  2  6  2  2  2  2]] [['5', '0', '5', '8', '<s>', '6', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553  0.88538718 -0.36740536 -0.12299585
 -0.20889639 -0.10687632 -0.06508152  0.26920509]
91  r_total and score:  5120.68078778316 3.371534692079073
Current Bleu score is:  3.371534692079073

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 4 10 11 11 11 11 11 11 11 11]] [['9', '8', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 10 10 10 13 11 11 11 11]] [['9', '8', '8', '8', '8', '1', '0', '0', '0', '0']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.18699762
  -0.27287935  -0.16480582  -0.1111393   -0.08027338   0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  5 10 10  2  8  2  2  2  2]] [['8', '5', '8', '8', '<s>', '3', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735 13.19663097 -9.85473391 -2.32255063 -0.43692107 -0.08862087
 -0.26694582 -0.13657578 -0.08316678  0.34401347]
92  r_total and score:  5088.883729928851 3.156052982301135
Current Bleu score is:  3.156052982301135

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6 13 11 11 11 11 11 11 11 11]] [['6', '1', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  5 10 10 10 13 11 11 11 11]] [['9', '5', '8', '8', '8', '1', '0', '0', '0', '0']] 

Reward:  [ 0.91578194 -0.21018242 -0.29810008 -0.1470917  -0.03680094 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  5 10 10  2  8  2  2  2  2]] [['8', '5', '8', '8', '<s>', '3', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735 13.19663097 -9.85473391 -2.32255063 -0.43692107 -0.08862087
 -0.26694582 -0.13657578 -0.08316678  0.34401347]
93  r_total and score:  4630.336756164025 2.8302120540444378
Current Bleu score is:  2.8302120540444378

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6  6 10 10 10 10 10 10 10 10]] [['6', '6', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 10 11 10 11 11 11 11 11]] [['3', '8', '8', '0', '8', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  5 11 10  2 10 10 10 10 10]] [['9', '5', '0', '8', '<s>', '8', '8', '8', '8', '8']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.05903678 -0.00862019
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]
94  r_total and score:  2943.835119939987 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6 13  2  2  2  2  2  2  2  2]] [['6', '1', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 10  5 10 11 11 11 11 11]] [['3', '8', '8', '5', '8', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  5  4  4 10 10 10 10 10 10]] [['9', '5', '9', '9', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
95  r_total and score:  4287.898426698647 3.217213985426899
Current Bleu score is:  3.217213985426899

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 2 2 2 2 2 2 2 2 2]] [['9', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 10 10 10 13 11 11 11 11]] [['3', '8', '8', '8', '8', '1', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  5 10 10  2 10 10 10 10 10]] [['9', '5', '8', '8', '<s>', '8', '8', '8', '8', '8']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.41027304e+00
 -3.67405362e-01 -1.22995850e-01 -8.88370936e-02 -6.72839587e-02
 -5.27753378e-02  4.41162936e-01]
96  r_total and score:  5987.665060564039 4.008572257773259
Current Bleu score is:  4.008572257773259

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 2 2 2 2 2 2 2 2]] [['9', '9', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 10 10 10 13 11 11 11 11]] [['3', '8', '8', '8', '8', '1', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10  4  4  2 10 10 10 10 10]] [['9', '8', '9', '9', '<s>', '8', '8', '8', '8', '8']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.04964382  0.
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
97  r_total and score:  4175.181782316762 3.4135789409974713
Current Bleu score is:  3.4135789409974713
EPOCH %d 4
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 4 13 13 13 13 13 13 13 13 13]] [['9', '1', '1', '1', '1', '1', '1', '1', '1', '1']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 10  5 10 13 11 11 11 11]] [['3', '8', '8', '5', '8', '1', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10 10  4  2 10 10 10 10 10]] [['9', '8', '8', '9', '<s>', '8', '8', '8', '8', '8']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.07181768 -0.05903678 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
98  r_total and score:  4893.148340686245 4.429897457223743
Current Bleu score is:  4.429897457223743

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 13 13 13 13 13 13 13 13 13]] [['8', '1', '1', '1', '1', '1', '1', '1', '1', '1']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 10  5 10 13 11 11 11 11]] [['3', '8', '8', '5', '8', '1', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10 10  4  2 10 10 10 10 10]] [['9', '8', '8', '9', '<s>', '8', '8', '8', '8', '8']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.07181768 -0.05903678 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
99  r_total and score:  3754.982753199341 2.5210818315177494
Current Bleu score is:  2.5210818315177494

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 4 4 4 4 4 4 4 4 4]] [['9', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  9  4  5  5 13 11 11 11 11]] [['0', '2', '9', '5', '5', '1', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.09557581 -0.03680094 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  9 10  9 10 10 10 10 10 10]] [['9', '2', '8', '2', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
100  r_total and score:  4400.49077352782 2.5620972161641045
Current Bleu score is:  2.5620972161641045

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 13 13 13 13 13 13 13 13 13]] [['1', '1', '1', '1', '1', '1', '1', '1', '1', '1']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 10  5 10 13 11  7  7  7]] [['0', '8', '8', '5', '8', '1', '0', '4', '4', '4']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 10  9  2 10 10 10 10 10]] [['5', '8', '8', '2', '<s>', '8', '8', '8', '8', '8']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.36740536
  -0.12299585  -0.08883709  -0.06728396  -0.05277534   0.44116294]
101  r_total and score:  4545.558798899867 2.794580122625778
Current Bleu score is:  2.794580122625778

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 13  9  9  9  9  9  9  9  9]] [['4', '1', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  9 10  5  5 13  2  2  2  2]] [['0', '2', '8', '5', '5', '1', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.09557581 -0.03680094 -0.05370237
 -0.07010343 -0.02891243 -0.01587823  0.05501034]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  9  4  4 10 10 10 10 10 10]] [['5', '2', '9', '9', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.01132677  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
102  r_total and score:  4008.2223334109513 3.8238513367899345
Current Bleu score is:  3.8238513367899345

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  2  2 13 13 13 13 13 13 13]] [['1', '<s>', '<s>', '1', '1', '1', '1', '1', '1', '1']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00295536 -0.00213459 -0.00161671
 -0.00126809 -0.00102185 -0.0008413   0.00873717]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  9 10 11  4 11  2  2  2  2]] [['0', '2', '8', '0', '9', '0', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.07010343 -0.02891243 -0.01587823  0.05501034]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  5 11  4 10 10 10 10 10 10]] [['9', '5', '0', '9', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
103  r_total and score:  5714.634806833222 3.5120068300923606
Current Bleu score is:  3.5120068300923606

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 2 2 2 2 2 2 2 2 2]] [['6', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  4  4 13  2  2  2  2]] [['9', '8', '2', '9', '9', '1', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -40.81855452  -1.48713735
  -2.17012956  -2.83290136  -1.1683601   -0.64164406   2.22298496]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5 11  9  2 11 10 10 10 10]] [['5', '5', '0', '2', '<s>', '0', '8', '8', '8', '8']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.05903678 -0.01976367
 -0.00465423 -0.00541504 -0.01008476  0.08430119]
104  r_total and score:  7072.667548092525 5.283045662674679
Current Bleu score is:  5.283045662674679

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2  9  9 13 13 13 13 13 13 13]] [['<s>', '2', '2', '1', '1', '1', '1', '1', '1', '1']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  4  4 11  7  2  2  2]] [['9', '8', '2', '9', '9', '0', '4', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -40.81855452  -1.48713735
  -2.17012956  -1.31065241  -2.00575701  -0.9364584    2.61302266]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5 11  9  2 11 10 10 10 10]] [['5', '5', '0', '2', '<s>', '0', '8', '8', '8', '8']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.05903678 -0.01976367
 -0.00465423 -0.00541504 -0.01008476  0.08430119]
105  r_total and score:  6493.612859052723 4.28682036189494
Current Bleu score is:  4.28682036189494

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 5 9 9 9 9 9 9 9 9]] [['4', '5', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        2.18606798 -1.68574677 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5 10 11  7  7  7  7]] [['9', '8', '2', '5', '8', '0', '4', '4', '4', '4']] 

Reward:  [  0.91578194  21.39723407  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195   29.84745896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  5 11  9  2 11 10 13 13 13]] [['8', '5', '0', '2', '<s>', '0', '8', '1', '1', '1']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.33198822
  -0.1111393   -0.02617268  -0.06728396  -0.05277534   0.44116294]
106  r_total and score:  6618.194789930014 4.622954712428245
Current Bleu score is:  4.622954712428245

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 5 4 4 4 4 4 4 4 4]] [['9', '5', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        2.18606798 -1.68574677 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9 10 10 11  7  7  7  7]] [['9', '8', '2', '8', '8', '0', '4', '4', '4', '4']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -1.38393724
  -2.01953311  -1.2196995   -0.82252282  -0.59408945   3.75311927]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  5 10  8  2 11 13 13 13 13]] [['7', '5', '8', '3', '<s>', '0', '1', '1', '1', '1']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.41027304e+00
 -3.67405362e-01 -1.22995850e-01 -8.88370936e-02 -6.72839587e-02
 -5.27753378e-02  4.41162936e-01]
107  r_total and score:  6113.435580031886 4.551830769664551
Current Bleu score is:  4.551830769664551

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 2 2 2 2 2 2 2 2 2]] [['9', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 11  9 10  4 11  7  7  7  7]] [['9', '0', '2', '8', '9', '0', '4', '4', '4', '4']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.09557581 -0.0201266  -0.05770696
 -0.03485219 -0.0235031  -0.01697575  0.10724315]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5 10  9  2 11 13 13 13 13]] [['5', '5', '8', '2', '<s>', '0', '1', '1', '1', '1']] 

Reward:  [ 0.33689735  0.09107039  2.49189332 -1.77940052 -0.36740536 -0.12299585
 -0.08883709 -0.06728396 -0.05277534  0.44116294]
108  r_total and score:  6140.018181330065 3.8401368445861896
Current Bleu score is:  3.8401368445861896

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 4  2 13 13 13 13 13 13 13 13]] [['9', '<s>', '1', '1', '1', '1', '1', '1', '1', '1']] 

Reward:  [ 0.05       -0.0048199  -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  8 10 12 11  7  7  7  7]] [['9', '8', '3', '8', '7', '0', '4', '4', '4', '4']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.18699762
  -0.27287935  -0.16480582  -0.1111393   -0.08027338   0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10 10  8  2 11 13 13 13 13]] [['9', '8', '8', '3', '<s>', '0', '1', '1', '1', '1']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.05226761 -0.06533494 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]
109  r_total and score:  5110.440598680342 3.879689835990806
Current Bleu score is:  3.879689835990806

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  8 10  5  7  7  7  7  7]] [['9', '8', '3', '8', '5', '4', '4', '4', '4', '4']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.06578356
  -0.30199064  -0.18238762  -0.12299585  -0.08883709   0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 10  8  2 11 13 13 13 13]] [['5', '8', '8', '3', '<s>', '0', '1', '1', '1', '1']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.69435646  -0.39480275
  -0.13216764  -0.09546167  -0.07230132  -0.05671079   0.47406043]
110  r_total and score:  6201.73715355926 3.816428263026617
Current Bleu score is:  3.816428263026617

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 7 9 9 9 9 9 9 9 9]] [['<s>', '4', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  7  7  7  7  7]] [['9', '8', '2', '5', '9', '4', '4', '4', '4', '4']] 

Reward:  [  0.91578194  21.39723407  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402  44.63236138]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  5 10  5  9 11 11 10 10 11]] [['7', '5', '8', '5', '2', '0', '0', '8', '8', '0']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00  5.07598570e+00
 -7.42041723e-01 -4.95246511e-01 -1.21969950e+00 -4.98351762e-01
 -6.38390661e-01  4.03298912e+00]
111  r_total and score:  6548.206227406567 4.690536891901571
Current Bleu score is:  4.690536891901571

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 9 9 9 9 9 9 9 9 9]] [['<s>', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 5 9 5 5 8 7 7 7 7]] [['9', '5', '2', '5', '5', '3', '4', '4', '4', '4']] 

Reward:  [ 0.91578194 -0.21018242 -0.29810008  1.05688088 -0.20694689 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  5 10  8  2 11 13 13 13 13]] [['8', '5', '8', '3', '<s>', '0', '1', '1', '1', '1']] 

Reward:  [ 0.33689735 13.19663097 -9.85473391 -2.22141562 -0.46950224 -0.1571747
 -0.1135237  -0.08598124 -0.06744088  0.56375603]
112  r_total and score:  6439.56071896747 4.052766598428118
Current Bleu score is:  4.052766598428118

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 9 9 9 9 9 9 9 9]] [['<s>', '<s>', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606 -0.00455857 -0.00438243 -0.00295536 -0.00213459 -0.00161671
 -0.00126809 -0.00102185 -0.0008413   0.00873717]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  5  8  7  7  7  7]] [['9', '8', '2', '5', '5', '3', '4', '4', '4', '4']] 

Reward:  [  0.91578194  21.39723407  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195   29.84745896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5  9  2 11 13 13 13 13]] [['5', '5', '5', '2', '<s>', '0', '1', '1', '1', '1']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.05903678 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
113  r_total and score:  7040.724688600961 5.071055744605469
Current Bleu score is:  5.071055744605469

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 9 9 9 9 9 9 9 9 9]] [['<s>', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 5 4 5 5 8 7 7 7 7]] [['9', '5', '9', '5', '5', '3', '4', '4', '4', '4']] 

Reward:  [ 0.91578194 -0.21018242  3.36939485 -2.61061406 -0.20694689 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5  9  2 11  4  4  4  4]] [['5', '5', '5', '2', '<s>', '0', '9', '9', '9', '9']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.05903678 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
114  r_total and score:  5345.026129805879 4.203627154460861
Current Bleu score is:  4.203627154460861

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 8 7 7 7 7 7 7 7 7]] [['<s>', '3', '4', '4', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  4  5  5  8  8  8  2  2]] [['9', '8', '9', '5', '5', '3', '3', '3', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407 -18.23802164  -2.50141532  -0.2223789
  -0.32451006  -0.19598825  -0.13216764  -0.22447378   0.47406043]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  5  5  8  9 11  4  4  4  4]] [['9', '5', '5', '3', '2', '0', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
115  r_total and score:  4286.625402365747 2.4091825759728485
Current Bleu score is:  2.4091825759728485

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 8 7 7 7 7 7 7 7 7]] [['<s>', '3', '4', '4', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  4  5  5  8  5  5  5  5]] [['9', '8', '9', '5', '5', '3', '5', '5', '5', '5']] 

Reward:  [  0.91578194  21.39723407 -18.23802164  -2.50141532  -0.2223789
  -0.32451006  -0.19598825  -0.13216764  -0.09546167   0.60307254]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  5 10  8 10 11  4  4  4  4]] [['9', '5', '8', '3', '8', '0', '9', '9', '9', '9']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.41027304e+00
  1.75122571e-01 -9.46359418e-02 -2.33070620e-01 -1.57174700e-01
 -1.13523697e-01  7.17178151e-01]
116  r_total and score:  4713.501134234981 3.1076508574688044
Current Bleu score is:  3.1076508574688044

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 4 2 2 2 2 2 2 2 2]] [['<s>', '9', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606  0.01766404 -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  8  5  4  8 11 11 11 11]] [['4', '8', '3', '5', '9', '3', '0', '0', '0', '0']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -2.16389877e-01 -4.72393767e-02
  1.02212848e+00 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  5  4  4 10 11  4  4  4  4]] [['9', '5', '9', '9', '8', '0', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
117  r_total and score:  4125.230274578882 1.6061614569064082
Current Bleu score is:  1.6061614569064082

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2  4 10  2  2  2  2  2  2  2]] [['<s>', '9', '8', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 11  8  4  4  5 11 11 11 11]] [['6', '0', '3', '9', '9', '5', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.16961266  0.00418446 -0.03214713
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 11  5  8  9 11  4  4  4  4]] [['3', '0', '5', '3', '2', '0', '9', '9', '9', '9']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
118  r_total and score:  3203.920918972809 1.1917923211760462
Current Bleu score is:  1.1917923211760462

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 4 2 2 2 2 2 2 2 2]] [['<s>', '9', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606  0.01766404 -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  8  5  7  5 11 11 11 11]] [['6', '8', '3', '5', '4', '5', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10  4  8  9 11  4  4  4  4]] [['9', '8', '9', '3', '2', '0', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
119  r_total and score:  3930.1334288660137 1.7671762789416987
Current Bleu score is:  1.7671762789416987

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 4 2 2 2 2 2 2 2 2]] [['<s>', '9', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606  0.01766404 -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  8  8  5  4 11 11 11 11 11]] [['6', '3', '3', '5', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  1.24767480e-02  1.69612658e-01
  9.38352275e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  8  4  8 10 11  4  4  4  4]] [['9', '3', '9', '3', '8', '0', '9', '9', '9', '9']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -4.83528130e-02
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
120  r_total and score:  4540.973895133215 2.517085947572639
Current Bleu score is:  2.517085947572639

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  8  8  5  7 11 11 11 11 11]] [['6', '3', '3', '5', '4', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.16961266 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8  8  8  8 10  4  4  4  4  4]] [['3', '3', '3', '3', '8', '9', '9', '9', '9', '9']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.77615869 -0.06691772
 -0.16480582 -0.1111393  -0.08027338  0.50712153]
121  r_total and score:  4110.200798313352 2.6685944487275925
Current Bleu score is:  2.6685944487275925

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 11 11  8  7 11 11 11 11 11]] [['6', '0', '0', '3', '4', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 11  8  8 10  4  4  8  8  8]] [['3', '0', '3', '3', '8', '9', '9', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.77615869 -0.06691772
 -0.16480582 -0.1111393  -0.08027338  0.50712153]
122  r_total and score:  4668.562017491581 2.8765421362453334
Current Bleu score is:  2.8765421362453334

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 11 11  5  7 11  7  2  2  2]] [['6', '0', '0', '5', '4', '0', '4', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.16961266 -0.02796267 -0.04080498
 -0.02464422 -0.03771428 -0.01760824  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 11  8  8 10  4  4  4  4  4]] [['9', '0', '3', '3', '8', '9', '9', '9', '9', '9']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01 -4.83528130e-02
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
123  r_total and score:  3933.62685827902 2.583831202530506
Current Bleu score is:  2.583831202530506

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 2 2 9 2 9 2 9 2 9]] [['9', '<s>', '<s>', '2', '<s>', '2', '<s>', '2', '<s>', '2']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00295536 -0.00501939 -0.00102185
 -0.00214547 -0.00051581 -0.00119119  0.005726  ]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 11 11  5  7  7  7  7  7  7]] [['3', '0', '0', '5', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.16961266 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 11 11  8 10  4  4  4  4  4]] [['9', '0', '0', '3', '8', '9', '9', '9', '9', '9']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
124  r_total and score:  3629.2561694552146 1.6404471203339552
Current Bleu score is:  1.6404471203339552

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 4  9 13 13 13 13 13 13 13 13]] [['9', '2', '1', '1', '1', '1', '1', '1', '1', '1']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 11 11  5  7  7  7  7  7  7]] [['3', '0', '0', '5', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.16961266 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 11 11  8 10  4  4  4  4  4]] [['3', '0', '0', '3', '8', '9', '9', '9', '9', '9']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.77615869 -0.06691772
 -0.16480582 -0.1111393  -0.08027338  0.50712153]
125  r_total and score:  3259.780974660791 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 9 9 9 9 9 9 9 9]] [['<s>', '<s>', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606 -0.00455857 -0.00438243 -0.00295536 -0.00213459 -0.00161671
 -0.00126809 -0.00102185 -0.0008413   0.00873717]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 11 11  8  7  7  7  7  7  7]] [['6', '0', '0', '3', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 11 11  8 10  4  4  4  4  4]] [['3', '0', '0', '3', '8', '9', '9', '9', '9', '9']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.77615869 -0.06691772
 -0.16480582 -0.1111393  -0.08027338  0.50712153]
126  r_total and score:  3252.9800173016765 2.2932676731958677
Current Bleu score is:  2.2932676731958677

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 9 9 9 9 9 9 9 9 9]] [['9', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 11 10  4  4  7  7  7  7  7]] [['9', '0', '8', '9', '9', '4', '4', '4', '4', '4']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.09557581 -0.03680094 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 11 11  8 10  4  4  4  4  4]] [['3', '0', '0', '3', '8', '9', '9', '9', '9', '9']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.77615869 -0.06691772
 -0.16480582 -0.1111393  -0.08027338  0.50712153]
127  r_total and score:  3940.0337162525243 2.8797814449436236
Current Bleu score is:  2.8797814449436236

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 13  9  9  9  9  9  9  9  9]] [['<s>', '1', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 11 10  5  4  7  7  7  7  7]] [['9', '0', '8', '5', '9', '4', '4', '4', '4', '4']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.09557581  1.09079242 -0.32451006
 -0.19598825 -0.13216764 -0.09546167  0.60307254]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 11 11  8 11  4  4  4  4  4]] [['3', '0', '0', '3', '0', '9', '9', '9', '9', '9']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
128  r_total and score:  3023.994866525002 1.9534351531430114
Current Bleu score is:  1.9534351531430114

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 10 10 10 10 10 10 10 10 10]] [['1', '8', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 11 10  5  4 13 13 13  2  2]] [['9', '0', '8', '5', '9', '1', '1', '1', '<s>', '<s>']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.09557581  1.09079242 -0.32451006
 -0.19598825 -0.13216764 -0.22447378  0.47406043]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 11 11  8 10  4  4  4  4  4]] [['3', '0', '0', '3', '8', '9', '9', '9', '9', '9']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.77615869 -0.06691772
 -0.16480582 -0.1111393  -0.08027338  0.50712153]
129  r_total and score:  2671.244531750429 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 4 13 10  9  9  9  9  9  9  9]] [['9', '1', '8', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 11 10  5  4 13  7  7  2  2]] [['9', '0', '8', '5', '9', '1', '4', '4', '<s>', '<s>']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.09557581  1.09079242 -0.32451006
 -0.19598825 -0.13216764 -0.22447378  0.47406043]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 11  4  8 11  4  4  4  4  4]] [['3', '0', '9', '3', '0', '9', '9', '9', '9', '9']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
130  r_total and score:  3272.2847703654115 2.0013008136957584
Current Bleu score is:  2.0013008136957584
EPOCH %d 5
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 4 13 13 13 13 13 13 13 13 13]] [['9', '1', '1', '1', '1', '1', '1', '1', '1', '1']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 11 10  5 13  8  7  7  7  7]] [['9', '0', '8', '5', '1', '3', '4', '4', '4', '4']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.09557581 -0.03680094 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 11 11  8 11  4  4  4  4  4]] [['9', '0', '0', '3', '0', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
131  r_total and score:  2940.7709620217615 1.5379121915239224
Current Bleu score is:  1.5379121915239224

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 2 2 2 2 2 2 2 2 2]] [['9', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 11 10 11 13  8  7  7  7  7]] [['9', '0', '8', '0', '1', '3', '4', '4', '4', '4']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 11 11  8 11  4  4  4  4  4]] [['9', '0', '0', '3', '0', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
132  r_total and score:  2821.3295853637433 1.7016928019815079
Current Bleu score is:  1.7016928019815079

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 9 9 9 9 9 9 9 9]] [['5', '<s>', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -8.41619496e-02 -4.08049796e-02
 -2.46442176e-02 -1.66192011e-02 -1.20036695e-02 -9.09140954e-03
 -7.13100446e-03  5.96099427e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 11 10  5  4 11  7  7  7  7]] [['9', '0', '8', '5', '9', '0', '4', '4', '4', '4']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.09557581  1.09079242 -0.32451006
 -0.19598825 -0.13216764 -0.09546167  0.60307254]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 11 11  8 11  4  4  4  4  4]] [['1', '0', '0', '3', '0', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
133  r_total and score:  4081.3810714197757 2.639459964277428
Current Bleu score is:  2.639459964277428

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 2 2 2 2 2 2 2 2 2]] [['9', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 10 10  4  7  7  7  7  7]] [['9', '8', '8', '8', '9', '4', '4', '4', '4', '4']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.06578356
  -0.30199064  -0.18238762  -0.12299585  -0.08883709   0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10 11  8 13  9  9  9  9  9]] [['4', '8', '0', '3', '1', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
134  r_total and score:  5330.072883881685 4.113672232003878
Current Bleu score is:  4.113672232003878

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 2 2 2 2 2 2 2 2 2]] [['6', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10 10  7  2 13  7  7  7  7]] [['6', '8', '8', '4', '<s>', '1', '4', '4', '4', '4']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.09341186 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10 11  8 13  9  9  9  9  9]] [['4', '8', '0', '3', '1', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
135  r_total and score:  4563.8644214836895 2.3270703097725525
Current Bleu score is:  2.3270703097725525

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 2 2 2 2 2 2 2 2 2]] [['6', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10 10  7  2 11  7  7  7  7]] [['6', '8', '8', '4', '<s>', '0', '4', '4', '4', '4']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.09341186 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 10 11  8 13  7  7  7  7  7]] [['6', '8', '0', '3', '1', '4', '4', '4', '4', '4']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
136  r_total and score:  4168.224543876512 2.100676292460089
Current Bleu score is:  2.100676292460089

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 2 2 2 2 2 2 2 2 2]] [['6', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  9  7  2 11  7  7  7  7]] [['6', '8', '2', '4', '<s>', '0', '4', '4', '4', '4']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.24682783e-01 -1.11139296e-01 -8.02733758e-02 -6.07979199e-02
 -4.76879010e-02  3.98635713e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 10  5  8 13  9  7  7  7  7]] [['6', '8', '5', '3', '1', '2', '4', '4', '4', '4']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.41027304e+00
 -1.10961119e-01 -7.40566266e-02 -1.24740945e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]
137  r_total and score:  4504.539327048754 2.857320830654386
Current Bleu score is:  2.857320830654386

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 9 2 2 2 2 2 2 2 2]] [['9', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9  9 10  7  4  7  7  7  7  7]] [['2', '2', '8', '4', '9', '4', '4', '4', '4', '4']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 11  8 11  7  7  7  7  7]] [['7', '2', '0', '3', '0', '4', '4', '4', '4', '4']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307  0.01442
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
138  r_total and score:  3777.8773341344054 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 2 2 2 2 2 2 2 2 2]] [['9', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 9 9 7 9 7 7 7 7 7]] [['3', '2', '2', '4', '2', '4', '4', '4', '4', '4']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[6 9 7 8 7 9 7 7 7 7]] [['6', '2', '4', '3', '4', '2', '4', '4', '4', '4']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
 -1.00264689e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
139  r_total and score:  3624.7401470514155 2.519027695485349
Current Bleu score is:  2.519027695485349

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 2 2 2 2 2 2 2 2 2]] [['9', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  9  9  7  2 13  7  7  7  7]] [['6', '2', '2', '4', '<s>', '1', '4', '4', '4', '4']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.09341186 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2  9 11  8 10  9  2  2  2  2]] [['<s>', '2', '0', '3', '8', '2', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.01728052 -0.00266619  0.10436252  0.56943476 -0.1111393
 -0.1887592  -0.09657366 -0.0588078   0.24325426]
140  r_total and score:  3844.3246670090302 2.816714137552266
Current Bleu score is:  2.816714137552266

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  9  8  6  9 12  2  2  2  2]] [['6', '2', '3', '6', '2', '7', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.05326709 -0.02196869 -0.01206484  0.04179882]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2  9  8  8 10  9  2  2  2  2]] [['<s>', '2', '3', '3', '8', '2', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.01728052  0.11170286 -0.01000653  0.56943476 -0.1111393
 -0.1887592  -0.09657366 -0.0588078   0.24325426]
141  r_total and score:  3096.4271519927233 2.7017403021623334
Current Bleu score is:  2.7017403021623334

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 11  9  6  4 12  8  8  8  8]] [['6', '0', '2', '6', '9', '7', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 11 11  8 10  9  2  2  2  2]] [['1', '0', '0', '3', '8', '2', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -3.56218488e-01 -1.46913505e-01
 -8.06824692e-02  2.79525560e-01]
142  r_total and score:  4547.220365422119 3.6348604184650353
Current Bleu score is:  3.6348604184650353

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  9  6  2 11  8  8  8  8]] [['6', '8', '2', '6', '<s>', '0', '3', '3', '3', '3']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.24682783e-01 -1.11139296e-01 -8.02733758e-02 -6.07979199e-02
 -4.76879010e-02  3.98635713e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10  8  9 10  9  2  2  2  2]] [['1', '8', '3', '2', '8', '2', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -7.01034304e-02 -2.89124260e-02
 -1.58782266e-02  5.50103414e-02]
143  r_total and score:  4177.434970193979 2.696461722143758
Current Bleu score is:  2.696461722143758

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 2 2 2 2 2 2 2 2 2]] [['3', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  8  7  8 11  8  8  8  8]] [['6', '8', '3', '4', '3', '0', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10  8 10 10  8  9  8  8  8]] [['1', '8', '3', '8', '8', '3', '2', '3', '3', '3']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -4.75455349e-02  8.85387179e-01
 -1.10961119e-01 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
144  r_total and score:  3584.1195666890994 2.7153808419775913
Current Bleu score is:  2.7153808419775913

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  8  7  8 11  8  8  8 11]] [['6', '8', '3', '4', '3', '0', '3', '3', '3', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 10  7  8  8  9  9  9  9  9]] [['6', '8', '4', '3', '3', '2', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -4.75455349e-02  8.85387179e-01
 -1.10961119e-01 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
145  r_total and score:  5085.302564366535 3.9991888576540675
Current Bleu score is:  3.9991888576540675

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  8  5  8 11  8  8  8  8]] [['6', '8', '3', '5', '3', '0', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  8  5  4 10  9  9  8  8  8]] [['1', '3', '5', '9', '8', '2', '2', '3', '3', '3']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
146  r_total and score:  5030.451114208662 4.22358845107623
Current Bleu score is:  4.22358845107623

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 2 2 2 2 2 2 2 2 2]] [['6', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  8  5  8 11  8  8  8  8]] [['6', '8', '3', '5', '3', '0', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10  8  8  8  9  8  8  8  8]] [['1', '8', '3', '3', '3', '2', '3', '3', '3', '3']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
147  r_total and score:  5640.9730215953405 4.535763343649783
Current Bleu score is:  4.535763343649783

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 11  9  5  4  8  2  2  2  2]] [['5', '0', '2', '5', '9', '3', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344  7.08574716 -2.01953311
 -2.63631177 -1.08728159 -0.59711708  2.0687206 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  5  6  4  9  9  9  9  9]] [['5', '0', '5', '6', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
148  r_total and score:  5363.712428465427 4.282300155270136
Current Bleu score is:  4.282300155270136

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 11  9  5  9  8  2  2  2  2]] [['5', '0', '2', '5', '2', '3', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344 -0.18699762 -0.27287935
 -0.35621849 -0.1469135  -0.08068247  0.27952556]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  8 10  7  9  9  9  9  9]] [['5', '0', '3', '8', '4', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553  0.88538718 -0.03419142 -0.07957902
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
149  r_total and score:  5693.810163384784 4.279158294772289
Current Bleu score is:  4.279158294772289

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[5 5 9 5 4 9 9 9 9 9]] [['5', '5', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344  7.08574716 -2.01953311
 -1.2196995  -0.82252282 -0.59408945  3.75311927]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 5 6 5 8 9 9 9 9 9]] [['5', '5', '6', '5', '3', '2', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
150  r_total and score:  6387.172622475246 4.5620396703534665
Current Bleu score is:  4.5620396703534665

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 11  9  5  9  4  9  9  9  9]] [['5', '0', '2', '5', '2', '9', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344 -0.18699762 -0.18077657
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 8 6 8 8 9 9 9 9 9]] [['5', '3', '6', '3', '3', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
151  r_total and score:  4814.527010574167 3.9614833715012696
Current Bleu score is:  3.9614833715012696

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 9 2 9 2 9 2 9]] [['5', '<s>', '<s>', '2', '<s>', '2', '<s>', '2', '<s>', '2']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -1.66192011e-02
 -2.82260835e-02 -5.74627904e-03 -1.20648432e-02 -2.90063504e-03
 -6.69852831e-03  3.21996571e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  5  9  6  9 11  9  9  9  9]] [['6', '5', '2', '6', '2', '0', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 5 6 8 8 9 9 9 9 9]] [['5', '5', '6', '3', '3', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
152  r_total and score:  4791.880779923886 3.3892401974896598
Current Bleu score is:  3.3892401974896598

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 9 9 9 9 9 9 9 9 9]] [['9', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  5  4  6  2 11  2  9 11 11]] [['9', '5', '9', '6', '<s>', '0', '<s>', '2', '0', '0']] 

Reward:  [ 0.91578194 -0.21018242  3.36939485 -2.61061406 -0.69132514 -0.12299585
 -0.20889639 -0.01280099 -0.03762393  0.39073802]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 5 6 4 8 7 9 9 9 9]] [['5', '5', '6', '9', '3', '4', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -4.99576080e-04 -3.48521867e-02 -2.35030996e-02
 -1.69757522e-02  1.07243147e-01]
153  r_total and score:  6244.502806661717 4.298098220653748
Current Bleu score is:  4.298098220653748

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 2 9 9 9 9 9 9 9 9]] [['9', '<s>', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05       -0.0048199  -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 11 10  5  2 11 11 11 11 11]] [['6', '0', '8', '5', '<s>', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.04723938 -0.11108605 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  6  6  8  7  7  7  7  7]] [['5', '0', '6', '6', '3', '4', '4', '4', '4', '4']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.01132677  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
154  r_total and score:  4184.768658226062 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 2 2 2 9 2 2 9 2 2]] [['9', '<s>', '<s>', '<s>', '2', '<s>', '<s>', '2', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00126809 -0.00256804
 -0.00156379 -0.0003939  -0.00093792  0.00513666]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  5  2  8  6 11 11 11 11 11]] [['6', '5', '<s>', '3', '6', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.32902978 -0.04080498 -0.02464422 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 5 6 4 8 7 7 7 7 7]] [['5', '5', '6', '9', '3', '4', '4', '4', '4', '4']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -4.99576080e-04 -3.48521867e-02 -2.35030996e-02
 -1.69757522e-02  1.07243147e-01]
155  r_total and score:  4816.929744177095 2.5523784080360032
Current Bleu score is:  2.5523784080360032

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  2  5  6 11 11 11 11 11]] [['9', '8', '<s>', '5', '6', '0', '0', '0', '0', '0']] 

Reward:  [  0.91578194  21.39723407 -21.17679665  -0.18077657  -0.18238762
  -0.12299585  -0.08883709  -0.06728396  -0.05277534   0.44116294]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 5 5 4 8 7 7 7 7 7]] [['5', '5', '5', '9', '3', '4', '4', '4', '4', '4']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -4.99576080e-04 -3.48521867e-02 -2.35030996e-02
 -1.69757522e-02  1.07243147e-01]
156  r_total and score:  6434.388458384844 5.227032259608984
Current Bleu score is:  5.227032259608984

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 8 8 8 8 8 8 8 8]] [['5', '<s>', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -8.41619496e-02 -4.08049796e-02
 -2.46442176e-02 -1.66192011e-02 -1.20036695e-02 -9.09140954e-03
 -7.13100446e-03  5.96099427e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 11 13  6  4 11 11 11 11 11]] [['6', '0', '1', '6', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  6  8  8  7  7  7  7  7]] [['5', '0', '6', '3', '3', '4', '4', '4', '4', '4']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.01919618 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
157  r_total and score:  4972.142461531009 3.1815127489886663
Current Bleu score is:  3.1815127489886663

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 8 8 8 8 8 8 8 8]] [['5', '<s>', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -8.41619496e-02 -4.08049796e-02
 -2.46442176e-02 -1.66192011e-02 -1.20036695e-02 -9.09140954e-03
 -7.13100446e-03  5.96099427e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 11  4  6  4 11  2  9 11 11]] [['9', '0', '9', '6', '9', '0', '<s>', '2', '0', '0']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.0633456  -0.00234435 -0.00938493  0.0784511 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  6  8  8  8  9  9  9  9]] [['5', '0', '6', '3', '3', '3', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
158  r_total and score:  5227.099806908792 4.034005172000585
Current Bleu score is:  4.034005172000585

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 8 8 8 8 8 8 8 8]] [['5', '<s>', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -8.41619496e-02 -4.08049796e-02
 -2.46442176e-02 -1.66192011e-02 -1.20036695e-02 -9.09140954e-03
 -7.13100446e-03  5.96099427e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  4  6  6 11  8  8 11  2]] [['9', '8', '9', '6', '6', '0', '3', '3', '0', '<s>']] 

Reward:  [  0.91578194  21.39723407 -18.23802164  -2.61061406  -0.20694689
  -0.30199064  -0.18238762  -0.12299585  -0.08883709   0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  6  8  7  8  8  8  8  8]] [['5', '0', '6', '3', '4', '3', '3', '3', '3', '3']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -1.00167035e-01 -1.91961772e-02
 -1.81919385e-04  7.72369030e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
159  r_total and score:  4821.123366233093 3.4803302011008816
Current Bleu score is:  3.4803302011008816

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 8 8 8 8 8 8 8 8]] [['5', '<s>', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -8.41619496e-02 -4.08049796e-02
 -2.46442176e-02 -1.66192011e-02 -1.20036695e-02 -9.09140954e-03
 -7.13100446e-03  5.96099427e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  5  4  6  6 11 11  9 11 11]] [['6', '5', '9', '6', '6', '0', '0', '2', '0', '0']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -4.84748796e-02
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 5 6 8 7 8 8 8 8 8]] [['5', '5', '6', '3', '4', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.05226761 -0.00608019  0.82996454
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
160  r_total and score:  4219.212223591629 3.1615692036925354
Current Bleu score is:  3.1615692036925354

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 2 2 2 2 2 2 2 2 2]] [['9', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 11  2  8  6 11 11 11 11 11]] [['6', '0', '<s>', '3', '6', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01443607 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 11  6  8  8  7  7  7  7  7]] [['9', '0', '6', '3', '3', '4', '4', '4', '4', '4']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307  0.01442
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
161  r_total and score:  3912.7504966951324 2.838707033170076
Current Bleu score is:  2.838707033170076

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 2 2 2 2 2 2 2 2 2]] [['9', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 11  4  5  4 11 11 11 11 11]] [['6', '0', '9', '5', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01 -4.72393767e-02
  1.02212848e+00 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 11  8  8 10  8  7  7  7  7]] [['9', '0', '3', '3', '8', '3', '4', '4', '4', '4']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01 -4.83528130e-02
  7.76158692e-01 -6.69177162e-02 -9.02848457e-02 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
162  r_total and score:  4358.426312926514 3.786492942263908
Current Bleu score is:  3.786492942263908

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 8 8 8 8 8 8 8 8 8]] [['9', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 11  8  5  5 11  8  2  2  2]] [['6', '0', '3', '5', '5', '0', '3', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.16961266 -0.02796267 -0.04080498
 -0.02464422 -0.03771428 -0.01760824  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 6 5 8 8 8 7 7 7 7]] [['5', '6', '5', '3', '3', '3', '4', '4', '4', '4']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.02218243 -0.0235031  -0.01697575  0.10724315]
163  r_total and score:  5833.74302987833 4.467349178973335
Current Bleu score is:  4.467349178973335
EPOCH %d 6
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 2 2 2 2 2 2 2 2 2]] [['9', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  8  5  5 11  2  2  2  2]] [['6', '8', '3', '5', '5', '0', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.0633456  -0.02612533 -0.0143476   0.04970745]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  6  8  8  8  7  7  7  7]] [['5', '8', '6', '3', '3', '3', '4', '4', '4', '4']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.41027304  -0.11096112
  -0.07405663  -0.12474094  -0.13216764  -0.09546167   0.60307254]
164  r_total and score:  6500.444506344921 4.543994292474573
Current Bleu score is:  4.543994292474573

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 2 2 2 2 2 2 2 2 2]] [['9', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  8  7  5 11  2  2  2  2]] [['6', '8', '3', '4', '5', '0', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.0633456  -0.02612533 -0.0143476   0.04970745]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  6  8  8  8  8  8  8  8]] [['5', '8', '6', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.41027304  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
165  r_total and score:  4417.005860711461 3.346856159023837
Current Bleu score is:  3.346856159023837

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 2 2 2 2 2 2 2 2 2]] [['9', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6  8 10  4  8  2  2  2  2]] [['6', '6', '3', '8', '9', '3', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.16961266  0.00418446 -0.04852557
 -0.0633456  -0.02612533 -0.0143476   0.04970745]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  6  6  8  8  8 12 12 12 12]] [['5', '6', '6', '3', '3', '3', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
166  r_total and score:  2999.9872132922997 1.4084968848262658
Current Bleu score is:  1.4084968848262658

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 4  2  2 10 10 10 10 10 10 10]] [['9', '<s>', '<s>', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00295536 -0.00213459 -0.00161671
 -0.00126809 -0.00102185 -0.0008413   0.00873717]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  8 10  5  8 10 10 10 10]] [['6', '8', '3', '8', '5', '3', '8', '8', '8', '8']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  6  8  8 10 10 10 10 10]] [['5', '8', '6', '3', '3', '8', '8', '8', '8', '8']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.41027304  -0.11096112
   0.19144775  -0.23307062  -0.1571747   -0.1135237    0.71717815]
167  r_total and score:  4718.128432586862 3.206157166011611
Current Bleu score is:  3.206157166011611

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 2 2 2 2 2 2 2 2 2]] [['6', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  8 10  5  8  2  2  2  2]] [['6', '8', '3', '8', '5', '3', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.0633456  -0.02612533 -0.0143476   0.04970745]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 10  8 10 10 10 10 10 10]] [['5', '8', '8', '3', '8', '8', '8', '8', '8', '8']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.69435646   0.09007851
  -0.09463594  -0.23307062  -0.1571747   -0.1135237    0.71717815]
168  r_total and score:  5416.009010780288 3.3859533458787996
Current Bleu score is:  3.3859533458787996

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 2 2 2 2 2 2 2 2 2]] [['9', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11 10  7  5  8  2  2  2  2]] [['4', '0', '8', '4', '5', '3', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.0633456  -0.02612533 -0.0143476   0.04970745]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  5  8  8  8 10 10 10 10]] [['5', '0', '5', '3', '3', '3', '8', '8', '8', '8']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.01316934
  0.66079742 -0.09209185 -0.10093843  0.63767157]
169  r_total and score:  4503.060936758823 2.7171242655671546
Current Bleu score is:  2.7171242655671546

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 2 2 2 2 2 2 2 2 2]] [['9', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 10 10  5  8  2  2  2  2]] [['4', '8', '8', '8', '5', '3', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.0633456  -0.02612533 -0.0143476   0.04970745]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  8  8 13 12 10 10 10 10]] [['5', '0', '3', '3', '1', '7', '8', '8', '8', '8']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.01605517 -0.01325191 -0.01697575  0.10724315]
170  r_total and score:  4669.346172223739 2.8673704540956604
Current Bleu score is:  2.8673704540956604

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 2 2 2 2 2 2 2 2 2]] [['9', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10 10 10  6  8  2  2  2  2]] [['6', '8', '8', '8', '6', '3', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.05326709 -0.02196869 -0.01206484  0.04179882]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  5  2 12  8  8  8  8  8]] [['5', '0', '5', '<s>', '7', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.10154738 -0.02930708 -0.00862019
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]
171  r_total and score:  5613.91302450588 3.61556603301317
Current Bleu score is:  3.61556603301317

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 8 2 2 2 2 2 2 2 2]] [['9', '3', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6 10  8  5  8  2  2  2  2]] [['6', '6', '8', '3', '5', '3', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.0633456  -0.02612533 -0.0143476   0.04970745]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 6 6 2 8 8 8 8 8 8]] [['5', '6', '6', '<s>', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.07335241 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
172  r_total and score:  5141.408207863245 3.5486638385750684
Current Bleu score is:  3.5486638385750684

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 8 8 2 2 2 2 2 2 2]] [['9', '3', '3', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.03207463 -0.00947238 -0.00390665
 -0.00214547 -0.00135841 -0.00093792  0.00513666]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6 10  8  5  8  2  2  2  2]] [['6', '6', '8', '3', '5', '3', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.0633456  -0.02612533 -0.0143476   0.04970745]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[4 6 4 8 8 8 8 8 8 8]] [['9', '6', '9', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
173  r_total and score:  5658.817551958054 3.418539434114502
Current Bleu score is:  3.418539434114502

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 8 8 8 8 8 8 8 8 8]] [['9', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6 10  8  5  8  2  2  2  2]] [['6', '6', '8', '3', '5', '3', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.0633456  -0.02612533 -0.0143476   0.04970745]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 6 6 8 8 8 8 8 8 8]] [['5', '6', '6', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
174  r_total and score:  4964.729782771308 3.7858109181956148
Current Bleu score is:  3.7858109181956148

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 8 2 2 2 2 2 2 2 2]] [['9', '3', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 10  6  5 11  2  2  2  2]] [['4', '8', '8', '6', '5', '0', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.0633456  -0.02612533 -0.0143476   0.04970745]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  6  4  8  8 12 12 12 12 12]] [['5', '6', '9', '3', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
175  r_total and score:  4273.950177645031 3.352819534122783
Current Bleu score is:  3.352819534122783

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 8 2 2 2 2 2 2 2 2]] [['9', '3', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 11 10  5  8 12 12 12 12 12]] [['6', '0', '8', '5', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  5  8  8 12 12 12 12 12]] [['5', '0', '5', '3', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
176  r_total and score:  5567.693070916949 3.9049327309767325
Current Bleu score is:  3.9049327309767325

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 8 2 2 2 2 2 2 2 2]] [['9', '3', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 11 10  5  8 12  2  2  2  2]] [['6', '0', '8', '5', '3', '7', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.04723938 -0.0332534  -0.04852557
 -0.0633456  -0.02612533 -0.0143476   0.04970745]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  5  8  8 12 12 12 12 12]] [['5', '0', '5', '3', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
177  r_total and score:  5401.762995513766 4.27621266480498
Current Bleu score is:  4.27621266480498

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 8 2 2 2 2 2 2 2 2]] [['9', '3', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 11 10  5  8 12  2  2  2  2]] [['6', '0', '8', '5', '3', '7', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.04723938 -0.0332534  -0.04852557
 -0.0633456  -0.02612533 -0.0143476   0.04970745]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  5  2 12 12 12 12 12 12]] [['5', '0', '5', '<s>', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.10154738 -0.02930708 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
178  r_total and score:  4386.329361580487 3.502783277587123
Current Bleu score is:  3.502783277587123

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 8 2 2 2 2 2 2 2 2]] [['5', '3', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -2.06616355e+00 -8.20683983e-02
 -2.82260835e-02 -1.44411305e-02 -8.79381654e-03 -5.92244011e-03
 -4.26167813e-03  2.61908774e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 11  6  6  8 12  2  2  2  2]] [['6', '0', '6', '6', '3', '7', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00947238 -0.00390665 -0.00214547  0.007433  ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 11  6  2 12 13 12 12 12 12]] [['9', '0', '6', '<s>', '7', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.0027123  -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]
179  r_total and score:  2877.2143792074307 2.26162090756139
Current Bleu score is:  2.26162090756139

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 8 2 2 2 2 2 2 2 2]] [['5', '3', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -2.06616355e+00 -8.20683983e-02
 -2.82260835e-02 -1.44411305e-02 -8.79381654e-03 -5.92244011e-03
 -4.26167813e-03  2.61908774e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 11 10  6  8 12  2  2  2  2]] [['6', '0', '8', '6', '3', '7', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.05326709 -0.02196869 -0.01206484  0.04179882]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 11  4  2  8  8 12 12 12 12]] [['3', '0', '9', '<s>', '3', '3', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.07335241 -0.02464422 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]
180  r_total and score:  3747.0076958251693 2.5924949769560053
Current Bleu score is:  2.5924949769560053

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 8 2 2 2 2 2 2 2 2]] [['5', '3', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -2.06616355e+00 -8.20683983e-02
 -2.82260835e-02 -1.44411305e-02 -8.79381654e-03 -5.92244011e-03
 -4.26167813e-03  2.61908774e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 11  6  5  8  5  8  8  8  8]] [['6', '0', '6', '5', '3', '5', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.16961266 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 11  4  2 12  8  8  8  8  8]] [['3', '0', '9', '<s>', '7', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.07335241 -0.02464422 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]
181  r_total and score:  4203.363969364478 3.233182383342814
Current Bleu score is:  3.233182383342814

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6 10  6  2 10 12 12 12 12]] [['6', '6', '8', '6', '<s>', '8', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.09341186 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8  6  4  9 12  8  2  2  2  2]] [['3', '6', '9', '2', '7', '3', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.05326709 -0.02196869 -0.01206484  0.04179882]
182  r_total and score:  4209.91359882409 2.929604415116474
Current Bleu score is:  2.929604415116474

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[6 6 9 6 2 5 5 5 5 5]] [['6', '6', '2', '6', '<s>', '5', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.09341186  0.
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  6  4  2 12  7  4  4  4  4]] [['6', '6', '9', '<s>', '7', '4', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.0027123  -0.00438243  0.06926097
 -0.01200367 -0.00909141 -0.007131    0.05960994]
183  r_total and score:  3696.472453097632 2.2966502170031413
Current Bleu score is:  2.2966502170031413

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 2 2 2 2 2 2 2 2]] [['3', '3', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[6 6 9 6 4 5 8 8 8 8]] [['6', '6', '2', '6', '9', '5', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.03214713
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8  6  4 12  8  8 12 12 12 12]] [['3', '6', '9', '7', '3', '3', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
184  r_total and score:  4145.930346875094 2.694448089103747
Current Bleu score is:  2.694448089103747

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[6 6 9 8 4 2 2 2 2 2]] [['6', '6', '2', '3', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.09759632
 -0.03356666 -0.0171735  -0.01045767  0.0432574 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8  6  8  8  8 13 12 12 12 12]] [['3', '6', '3', '3', '3', '1', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
185  r_total and score:  4887.32047530882 3.9537322156036407
Current Bleu score is:  3.9537322156036407

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[6 6 9 6 5 2 2 2 2 2]] [['6', '6', '2', '6', '5', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.09759632
 -0.03356666 -0.0171735  -0.01045767  0.0432574 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  6  6 12  8  8 12 12 12 12]] [['5', '6', '6', '7', '3', '3', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
186  r_total and score:  4152.721821973601 3.522617523756917
Current Bleu score is:  3.522617523756917

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[6 6 9 6 4 2 2 2 2 2]] [['6', '6', '2', '6', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.09759632
 -0.03356666 -0.0171735  -0.01045767  0.0432574 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  6  4  8  8  4 12 12 12 12]] [['5', '6', '9', '3', '3', '9', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
187  r_total and score:  5149.995271224193 3.93487609436897
Current Bleu score is:  3.93487609436897

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 5 2 2 2 2 2 2 2 2]] [['5', '5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -2.06616355e+00 -8.20683983e-02
 -2.82260835e-02 -1.44411305e-02 -8.79381654e-03 -5.92244011e-03
 -4.26167813e-03  2.61908774e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[6 6 9 6 4 2 2 2 2 2]] [['6', '6', '2', '6', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.09759632
 -0.03356666 -0.0171735  -0.01045767  0.0432574 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  6  6 12  8  7  7  7  7  7]] [['5', '6', '6', '7', '3', '4', '4', '4', '4', '4']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.01132677  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
188  r_total and score:  6281.931913280437 4.554675310574292
Current Bleu score is:  4.554675310574292

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[6 6 9 6 4 2 2 2 2 2]] [['6', '6', '2', '6', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.09759632
 -0.03356666 -0.0171735  -0.01045767  0.0432574 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  6  6 12  8  7  7  7  7  7]] [['5', '6', '6', '7', '3', '4', '4', '4', '4', '4']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.01132677  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
189  r_total and score:  4383.2309462085 3.4684357725831663
Current Bleu score is:  3.4684357725831663

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[6 6 9 6 4 5 2 2 2 2]] [['6', '6', '2', '6', '9', '5', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.03214713
 -0.07010343 -0.02891243 -0.01587823  0.05501034]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  6  4 10 12  7  7  7  7  7]] [['5', '6', '9', '8', '7', '4', '4', '4', '4', '4']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.01919618 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
190  r_total and score:  3483.228717298294 3.2002689567426916
Current Bleu score is:  3.2002689567426916

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 5 2 2 2 2 2 2 2 2]] [['5', '5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -2.06616355e+00 -8.20683983e-02
 -2.82260835e-02 -1.44411305e-02 -8.79381654e-03 -5.92244011e-03
 -4.26167813e-03  2.61908774e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6  9  6  5 11  2  2  2  2]] [['6', '6', '2', '6', '5', '0', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.0633456  -0.02612533 -0.0143476   0.04970745]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  6  5 10  8  7  7  7  7  7]] [['5', '6', '5', '8', '3', '4', '4', '4', '4', '4']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553  0.88538718 -0.03419142 -0.02067652
 -0.20723234 -0.13975027 -0.10093843  0.63767157]
191  r_total and score:  4811.325667660557 4.127010441799
Current Bleu score is:  4.127010441799

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6  2  6  5 10  2  2  2  2]] [['6', '6', '<s>', '6', '5', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.01443607 -0.00725627  0.08149774  0.
 -0.03356666 -0.0171735  -0.01045767  0.0432574 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  6  5 12 12  7  7  7  7  7]] [['5', '6', '5', '7', '7', '4', '4', '4', '4', '4']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
192  r_total and score:  4871.514461675666 3.875580651702102
Current Bleu score is:  3.875580651702102

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 4 4 4 4 4 4 4]] [['5', '<s>', '<s>', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -1.66192011e-02
 -1.20036695e-02 -9.09140954e-03 -7.13100446e-03 -5.74627904e-03
 -4.73095821e-03  4.91327055e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6  2  5  5 12  2  2  2  2]] [['6', '6', '<s>', '5', '5', '7', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.01443607  0.09888569 -0.02464422 -0.0166192
 -0.02822608 -0.01444113 -0.00879382  0.036375  ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  6  5 12 12  7  7  4  4  4]] [['5', '6', '5', '7', '7', '4', '4', '9', '9', '9']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
193  r_total and score:  5519.629751260503 4.199765124451305
Current Bleu score is:  4.199765124451305

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 4 4 4 4 4 4 4 4]] [['5', '<s>', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -8.41619496e-02 -4.08049796e-02
 -2.46442176e-02 -1.66192011e-02 -1.20036695e-02 -9.09140954e-03
 -7.13100446e-03  5.96099427e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6  6  5  9 10  2  2  2  2]] [['6', '6', '6', '5', '2', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.16961266  0.00418446 -0.03214713
 -0.07010343 -0.02891243 -0.01587823  0.05501034]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  6  5 12 12  7  4  4  4  4]] [['9', '6', '5', '7', '7', '4', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281 -0.01499307  0.01442
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
194  r_total and score:  4620.741554740666 3.81718999544547
Current Bleu score is:  3.81718999544547

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 4 4 4 4 4 4 4 4]] [['5', '<s>', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -8.41619496e-02 -4.08049796e-02
 -2.46442176e-02 -1.66192011e-02 -1.20036695e-02 -9.09140954e-03
 -7.13100446e-03  5.96099427e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6  9  4  5 11  2  2  2  2]] [['6', '6', '2', '9', '5', '0', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.04723938 -0.01169815 -0.05370237
 -0.07010343 -0.02891243 -0.01587823  0.05501034]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  6  4  6 12  7  4  4  4  4]] [['9', '6', '9', '6', '7', '4', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619  0.10436252
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
195  r_total and score:  3816.6731951518564 3.0746372878898467
Current Bleu score is:  3.0746372878898467

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6 13  8 11 11 11 11 11 11]] [['6', '6', '1', '3', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8  6  4  6 12  7  4  4  4  4]] [['3', '6', '9', '6', '7', '4', '9', '9', '9', '9']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307  0.01442
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
196  r_total and score:  3475.0969824885947 2.5681614005230395
Current Bleu score is:  2.5681614005230395

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 2 2 2 2 2 2 2 2 2]] [['3', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6  8  8  4 11 11 11 11 11]] [['6', '6', '3', '3', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  6  8  7  7  7  7  7]] [['3', '8', '3', '6', '3', '4', '4', '4', '4', '4']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
   0.02518505  -0.18238762  -0.12299585  -0.08883709   0.56122223]
197  r_total and score:  4273.039898402057 3.6633183408492935
Current Bleu score is:  3.6633183408492935
EPOCH %d 7
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[4 2 2 2 2 2 2 2 2 2]] [['9', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 13  4  7 11 11 11 11 11]] [['3', '8', '1', '9', '4', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 8 6 8 7 7 7 7 7]] [['3', '3', '3', '6', '3', '4', '4', '4', '4', '4']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307  0.01442
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
198  r_total and score:  4759.705287524744 3.8462965478042737
Current Bleu score is:  3.8462965478042737

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  8  5 11  5  5 11 11 11]] [['3', '8', '3', '5', '0', '5', '5', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8  6  8  6 12  8  7  7  7  7]] [['3', '6', '3', '6', '7', '3', '4', '4', '4', '4']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.00488055 -0.01976367 -0.01427485  0.09018038]
199  r_total and score:  4329.041058277817 2.747355405518609
Current Bleu score is:  2.747355405518609

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  2  2  2  2  2  2  2  2  2]] [['7', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 13  5 10  5  5 11 11 11]] [['4', '8', '1', '5', '8', '5', '5', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  4  6  8  8  7  7  7  7]] [['3', '8', '9', '6', '3', '3', '4', '4', '4', '4']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.06691772  -0.09028485  -0.12299585  -0.08883709   0.56122223]
200  r_total and score:  3071.197310029957 1.787560981005423
Current Bleu score is:  1.787560981005423

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 2 2 2 2 2 2 2 2]] [['5', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -2.06616355e+00 -8.20683983e-02
 -2.82260835e-02 -1.44411305e-02 -8.79381654e-03 -5.92244011e-03
 -4.26167813e-03  2.61908774e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 13  5  7  5  5  5  5  5]] [['4', '8', '1', '5', '4', '5', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  6  8  8  7  7  7  7]] [['3', '8', '3', '6', '3', '3', '4', '4', '4', '4']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.06691772  -0.09028485  -0.12299585  -0.08883709   0.56122223]
201  r_total and score:  5320.688677927222 3.811376653569128
Current Bleu score is:  3.811376653569128

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  2  2  2  2  2  2  2  2]] [['7', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  5 10  5  2  2  2  2]] [['4', '8', '2', '5', '8', '5', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -2.63631177e+00 -1.08728159e+00
 -5.97117081e-01  2.06872060e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  8  9 12  7 12 12 12]] [['3', '8', '3', '3', '2', '7', '4', '7', '7', '7']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.06691772  -0.09028485  -0.12299585  -0.08883709   0.56122223]
202  r_total and score:  5553.032471149732 3.949171903782609
Current Bleu score is:  3.949171903782609

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11  2  2  2  2  2  2  2  2  2]] [['0', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  5  7  5  2  2  2  2]] [['4', '8', '2', '5', '4', '5', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -2.63631177e+00 -1.08728159e+00
 -5.97117081e-01  2.06872060e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  8  8  8  9 12  7  7  7  7]] [['5', '3', '3', '3', '2', '7', '4', '4', '4', '4']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.01605517 -0.0218721  -0.01579772  0.09980099]
203  r_total and score:  5360.349798963347 5.027197301123799
Current Bleu score is:  5.027197301123799

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 9 2 2 2 2 2 2 2 2]] [['<s>', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606  0.01766404 -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10 13  5  7 13  2  2  2  2]] [['5', '8', '1', '5', '4', '1', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.0633456  -0.02612533 -0.0143476   0.04970745]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2  8  8  8  9 12  7  7  7  7]] [['<s>', '3', '3', '3', '2', '7', '4', '4', '4', '4']] 

Reward:  [ 0.01012259  0.14397645 -0.01499307 -0.01000653 -0.02464422 -0.0166192
  0.00234435 -0.01081157 -0.00848024  0.07088857]
204  r_total and score:  5442.565522532031 4.583159419102259
Current Bleu score is:  4.583159419102259

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  2  2  2  2  2  2  2  2  2]] [['1', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  5  4  5  2  2  2  2]] [['4', '8', '2', '5', '9', '5', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
  5.70811291e+01 -1.60607557e+01 -2.09658159e+01 -8.64683220e+00
 -4.74869736e+00  1.64519294e+01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  8  9  7  7  7  7  7]] [['3', '8', '3', '3', '2', '4', '4', '4', '4', '4']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
   0.02518505  -0.18238762  -0.12299585  -0.08883709   0.56122223]
205  r_total and score:  3533.278694664883 3.3315865738823174
Current Bleu score is:  3.3315865738823174

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11  2  2  2  2  2  2  2  2  2]] [['0', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  9  5  4  5  2  2  2  2]] [['5', '8', '2', '5', '9', '5', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  -0.21018242   3.36939485   5.71790702  57.0811291
 -16.06075568 -20.96581586  -8.6468322   -4.74869736  16.4519294 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  8  8  9  7  7  2  2  2]] [['5', '8', '3', '3', '2', '4', '4', '<s>', '<s>', '<s>']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.06136673e+01 -1.77940052e+00
 -1.10961119e-01 -2.80932275e-03 -1.95988249e-01 -2.99930630e-01
 -1.40033192e-01  3.90738025e-01]
206  r_total and score:  4571.784248398398 4.34768607905249
Current Bleu score is:  4.34768607905249

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  2  2  2  2  2  2  2  2  2]] [['1', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  5  4  8  2  2  2  2]] [['4', '8', '2', '5', '9', '3', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
  5.70811291e+01 -1.60607557e+01 -2.09658159e+01 -8.64683220e+00
 -4.74869736e+00  1.64519294e+01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2 11  8  4  8  7  2  2  2  2]] [['<s>', '0', '3', '9', '3', '4', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.01728052  0.11170286 -0.01000653 -0.02464422  0.
 -0.03356666 -0.0171735  -0.01045767  0.0432574 ]
207  r_total and score:  4460.79731623575 4.412844418696259
Current Bleu score is:  4.412844418696259

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  9  2  2  2  2  2  2  2  2]] [['1', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  5  4  5  2  2  2  2]] [['3', '8', '2', '5', '9', '5', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
  5.70811291e+01 -1.60607557e+01 -2.09658159e+01 -8.64683220e+00
 -4.74869736e+00  1.64519294e+01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[7 8 7 8 8 8 8 2 2 2]] [['4', '3', '4', '3', '3', '3', '3', '<s>', '<s>', '<s>']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.06691772  -0.16480582  -0.25221059  -0.11775341   0.3285702 ]
208  r_total and score:  6120.737487680799 6.074617646311361
Current Bleu score is:  6.074617646311361

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  2  2  2  2  2  2  2  2  2]] [['1', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  7  5  5  2  2  2  2]] [['4', '8', '2', '4', '5', '5', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -3.01990637e-01 -3.94220560e-01 -1.62586520e-01
 -8.92898299e-02  3.09345883e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 8 7 8 8 8 2 2 2 2]] [['3', '3', '4', '3', '3', '3', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553  0.77544907 -0.10026469 -0.06691772
 -0.35621849 -0.1469135  -0.08068247  0.27952556]
209  r_total and score:  4114.973967365621 2.7726616161214164
Current Bleu score is:  2.7726616161214164

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  2  2  2  2  2  2  2  2]] [['7', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  7  5 10  2  2  2  2]] [['4', '8', '2', '4', '5', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -3.01990637e-01 -3.94220560e-01 -1.62586520e-01
 -8.92898299e-02  3.09345883e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[7 6 7 8 8 8 9 9 9 9]] [['4', '6', '4', '3', '3', '3', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703  0.82807057 -0.10026469 -0.06691772
 -0.16480582 -0.1111393  -0.08027338  0.50712153]
210  r_total and score:  3084.6102529582427 1.8856509648738313
Current Bleu score is:  1.8856509648738313

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 2 2 2 2 2 2 2 2]] [['2', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  7  5 13  2  2  2  2]] [['3', '8', '2', '4', '5', '1', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -3.01990637e-01 -3.94220560e-01 -1.62586520e-01
 -8.92898299e-02  3.09345883e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  7  8  5  8 12 12 12 12]] [['2', '8', '4', '3', '5', '3', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -4.75455349e-02  8.85387179e-01
 -3.41914172e-02 -7.95790242e-02 -1.95988249e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]
211  r_total and score:  3497.355052258376 1.8911936178230073
Current Bleu score is:  1.8911936178230073

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 9 2 2 2 2 2 2 2 2]] [['<s>', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606  0.01766404 -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  7  5 13  2  2  2  2]] [['3', '8', '2', '4', '5', '1', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -3.01990637e-01 -3.94220560e-01 -1.62586520e-01
 -8.92898299e-02  3.09345883e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  8  2  8  8  2  2  2  2]] [['4', '8', '3', '<s>', '3', '3', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.12208168 -0.03243361 -0.0218721
 -0.03714761 -0.0190056  -0.01157331  0.04787219]
212  r_total and score:  3824.161346147511 2.2559783191548166
Current Bleu score is:  2.2559783191548166

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  9  2  2  2  2  2  2  2  2]] [['1', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9 10 11 10  9  9  9  9]] [['3', '8', '2', '8', '0', '8', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10  7  8 11 12  6  9  9  9]] [['8', '8', '4', '3', '0', '7', '6', '2', '2', '2']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164  0.9335185  -0.11923548 -0.07957902
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
213  r_total and score:  3438.634877290418 2.599919834220793
Current Bleu score is:  2.599919834220793

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 2 2 2 2 2 2 2 2]] [['2', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  7 11 13  9  9  9  9]] [['3', '8', '2', '4', '0', '1', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  8  8 11 12  6  9  9  9]] [['4', '8', '3', '3', '0', '7', '6', '2', '2', '2']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.08918036 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
214  r_total and score:  4455.661357701181 2.851480100521697
Current Bleu score is:  2.851480100521697

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  9  2  2  2  2  2  2  2  2]] [['1', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  7  5 13  2  2  9  2]] [['9', '8', '2', '4', '5', '1', '<s>', '<s>', '2', '<s>']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -0.75688136
  -2.17012956  -2.83290136  -1.1683601   -0.25160636   2.61302266]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  8  8 11  6  9  9  9  9]] [['4', '8', '3', '3', '0', '6', '2', '2', '2', '2']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.08918036 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
215  r_total and score:  3622.4331634114883 3.2285316880113544
Current Bleu score is:  3.2285316880113544

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  7  5  2  2  2  2  2]] [['9', '8', '2', '4', '5', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -0.75688136
  -4.36464026  -1.50114664  -0.76802205  -0.46768118   1.9345299 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10  8  8 11  6  9  9  9  9]] [['9', '8', '3', '3', '0', '6', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
216  r_total and score:  4603.804945632358 3.6675336693107474
Current Bleu score is:  3.6675336693107474

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  7  5  2  2  2  2  2]] [['9', '8', '2', '4', '5', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -0.75688136
  -4.36464026  -1.50114664  -0.76802205  -0.46768118   1.9345299 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10  8  8 11  6  9  9  9  9]] [['9', '8', '3', '3', '0', '6', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
217  r_total and score:  4188.0159181963045 3.4756902154379268
Current Bleu score is:  3.4756902154379268

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 2 2 2 2 2 2 2 2]] [['5', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -2.06616355e+00 -8.20683983e-02
 -2.82260835e-02 -1.44411305e-02 -8.79381654e-03 -5.92244011e-03
 -4.26167813e-03  2.61908774e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  7  5  2  9  9  9  9]] [['9', '8', '2', '4', '5', '<s>', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -0.75688136
  -4.36464026  -0.63839066  -0.48350806  -0.37924792   3.17023314]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  8  8 11  8  9  9  9  9]] [['5', '8', '3', '3', '0', '3', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
218  r_total and score:  4653.5073140743325 2.6131421039520033
Current Bleu score is:  2.6131421039520033

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 2 2 2 2 2 2 2 2]] [['5', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -2.06616355e+00 -8.20683983e-02
 -2.82260835e-02 -1.44411305e-02 -8.79381654e-03 -5.92244011e-03
 -4.26167813e-03  2.61908774e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  5  2  9  9  9  9]] [['9', '8', '2', '5', '5', '<s>', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407  29.02869589  26.5383664  -11.00604781
 -32.30195203  -4.7246195   -3.57836002  -2.80674862  23.46235032]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  8  8 11  2  2  9  9  9]] [['5', '8', '3', '3', '0', '<s>', '<s>', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.37944009  -0.20889639  -0.04252722  -0.03501301   0.3636227 ]
219  r_total and score:  4998.235660759986 4.049909115329676
Current Bleu score is:  4.049909115329676

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  2  2  2  2  2  2  2]] [['7', '2', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.03207463 -0.00947238 -0.00390665
 -0.00214547 -0.00135841 -0.00093792  0.00513666]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  5  5  9  9  9  9  9]] [['4', '8', '2', '5', '5', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  8  8 11  2  9  9  9  9]] [['5', '8', '3', '3', '0', '<s>', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.37944009  -0.08883709  -0.06728396  -0.05277534   0.44116294]
220  r_total and score:  3251.240193096848 1.7855036325694131
Current Bleu score is:  1.7855036325694131

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  2  2  2  2  2  2  2  2]] [['7', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  5  2  9  9  9  9]] [['9', '8', '2', '5', '5', '<s>', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407  29.02869589  26.5383664  -11.00604781
 -32.30195203  -4.7246195   -3.57836002  -2.80674862  23.46235032]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  8  8 11  6  2  2  9  9]] [['5', '8', '3', '3', '0', '6', '<s>', '<s>', '2', '2']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.39422056  -0.16258652  -0.03501301   0.3636227 ]
221  r_total and score:  4187.306636341064 3.605863753730439
Current Bleu score is:  3.605863753730439

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 2 2 2 2 2 2 2 2]] [['2', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  7  5  2  2  2  2  2]] [['9', '8', '2', '4', '5', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -0.75688136
  -4.36464026  -1.50114664  -0.76802205  -0.46768118   1.9345299 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  8 11  2  2  2  2  2]] [['3', '8', '3', '3', '0', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.34286283  -0.1887592   -0.09657366  -0.0588078    0.24325426]
222  r_total and score:  4236.472274342835 3.526689719894316
Current Bleu score is:  3.526689719894316

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  2  2  2  2  2  2  2  2  2]] [['7', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  5 12  2  2  2  2]] [['9', '8', '2', '5', '5', '7', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407  29.02869589  26.5383664  -11.00604781
 -16.06075568 -20.96581586  -8.6468322   -4.74869736  16.4519294 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  6  8 11 12  2  2  2  2]] [['3', '8', '6', '3', '0', '7', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.06691772  -0.35621849  -0.1469135   -0.08068247   0.27952556]
223  r_total and score:  3447.914741201985 2.6699754389291046
Current Bleu score is:  2.6699754389291046

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 2 2 2 2 2 2 2 2 2]] [['2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  4  7  5 12  2  2  2  2]] [['9', '8', '9', '4', '5', '7', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407 -18.23802164  -2.61061406  -0.11318016
  -0.32451006  -0.42361756  -0.17471059  -0.09594817   0.33241378]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  6  8 11 12  2  2  2  2]] [['3', '8', '6', '3', '0', '7', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.06691772  -0.35621849  -0.1469135   -0.08068247   0.27952556]
224  r_total and score:  3669.483806700917 2.6627268075045123
Current Bleu score is:  2.6627268075045123

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 2 2 2 2 2 2 2 2]] [['2', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  4  7  5 12  2  2  2  2]] [['9', '8', '9', '4', '5', '7', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407 -18.23802164  -2.61061406  -0.11318016
  -0.32451006  -0.42361756  -0.17471059  -0.09594817   0.33241378]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  6  8 13 12  2  2  2  2]] [['3', '8', '6', '3', '1', '7', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.06691772  -0.35621849  -0.1469135   -0.08068247   0.27952556]
225  r_total and score:  3076.4747367011437 2.344014830183688
Current Bleu score is:  2.344014830183688

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 2 2 2 2 2 2 2 2 2]] [['2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  4  7  5 12  2  2  2  2]] [['9', '8', '9', '4', '5', '7', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407 -18.23802164  -2.61061406  -0.11318016
  -0.32451006  -0.42361756  -0.17471059  -0.09594817   0.33241378]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 13  6  8  9  2  2  2  2  2]] [['3', '1', '6', '3', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.05126995
 -0.02822608 -0.01444113 -0.00879382  0.036375  ]
226  r_total and score:  2411.3385528395493 1.3825031617883339
Current Bleu score is:  1.3825031617883339

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 2 2 2 2 2 2 2 2 2]] [['2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  4  6  5  4  2  2  2  2]] [['9', '8', '9', '6', '5', '9', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407 -18.23802164  -2.61061406  -0.11318016
  -0.13025299  -0.50376902  -0.20776707  -0.11410224   0.39530884]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 13  6  8  9 12  2  2  2  2]] [['3', '1', '6', '3', '2', '7', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.05326709 -0.02196869 -0.01206484  0.04179882]
227  r_total and score:  2074.758315931734 1.1424575890661972
Current Bleu score is:  1.1424575890661972

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 2 2 2 2 2 2 2 2]] [['2', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 13  9  5  5  4  2  2  2  2]] [['6', '1', '2', '5', '5', '9', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01  1.04067266e+00
 -1.86997622e-01  0.00000000e+00 -4.68809895e-01 -1.93349046e-01
 -1.06184101e-01  3.67876325e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 13  6  8 12  6  6  6  6  6]] [['6', '1', '6', '3', '7', '6', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
228  r_total and score:  2845.8340582023366 2.13414230641237
Current Bleu score is:  2.13414230641237

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 2 2 2 2 2 2 2 2]] [['2', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 10  8  6  4  4  2  2  2  2]] [['2', '8', '3', '6', '9', '9', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.04103261
 -0.07533104 -0.03106842 -0.01706226  0.05911246]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 13  6  8  9  6  2  2  2  2]] [['3', '1', '6', '3', '2', '6', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.05326709 -0.02196869 -0.01206484  0.04179882]
229  r_total and score:  2298.300957007111 1.7705182397453378
Current Bleu score is:  1.7705182397453378

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 2 2 2 2 2 2 2 2 2]] [['2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 13  9  5  4  4  2  2  2  2]] [['6', '1', '2', '5', '9', '9', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01  1.04067266e+00
  7.08574716e+00 -1.54307367e+00 -2.83290136e+00 -1.16836010e+00
 -6.41644061e-01  2.22298496e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 11  6  8 12  6  2  2  2  2]] [['6', '0', '6', '3', '7', '6', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.05326709 -0.02196869 -0.01206484  0.04179882]
230  r_total and score:  3596.955738532879 2.661844540987357
Current Bleu score is:  2.661844540987357
EPOCH %d 8
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 2 2 2 2 2 2 2 2 2]] [['2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  6  5  2  2  2  2  2]] [['9', '8', '2', '6', '5', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -0.75688136
  -4.36464026  -1.50114664  -0.76802205  -0.46768118   1.9345299 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 13  8  8 10  6  2  2  2  2]] [['3', '1', '3', '3', '8', '6', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.77615869 -0.06691772
 -0.35621849 -0.1469135  -0.08068247  0.27952556]
231  r_total and score:  3413.7142319849568 1.5736459125716908
Current Bleu score is:  1.5736459125716908

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 2 2 2 2 2 2 2 2 2]] [['2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 10  9  6  4  2  2  2  2  2]] [['2', '8', '2', '6', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.91578194 -0.21018242  2.85423596 -2.23661849 -0.06578356 -0.6073741
 -0.20889639 -0.10687632 -0.06508152  0.26920509]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 13  8  8  9  2  2  2  2  2]] [['3', '1', '3', '3', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.05126995
 -0.02822608 -0.01444113 -0.00879382  0.036375  ]
232  r_total and score:  3820.9853382879132 1.5899494077544403
Current Bleu score is:  1.5899494077544403

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 2 2 2 2 2 2 2 2 2]] [['5', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 5.00000000e+01 -4.97459336e+01 -1.49611147e-01 -3.77142801e-02
 -1.76082417e-02 -1.02345200e-02 -6.69852831e-03 -4.72744656e-03
 -3.51564498e-03  2.39565656e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  8  4  2  2  2  2  2]] [['4', '8', '2', '3', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -6.07374104e-01 -2.08896390e-01 -1.06876324e-01
 -6.50815241e-02  2.69205088e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 13  7  8 12  6  2  2  2  2]] [['3', '1', '4', '3', '7', '6', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553  0.77544907 -0.10026469 -0.06691772
 -0.35621849 -0.1469135  -0.08068247  0.27952556]
233  r_total and score:  4913.824093340461 2.303666051442713
Current Bleu score is:  2.303666051442713

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 2 2 2 2 2 2 2 2 2]] [['2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  7  4  2  2  2  2  2]] [['4', '8', '2', '4', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -6.07374104e-01 -2.08896390e-01 -1.06876324e-01
 -6.50815241e-02  2.69205088e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 13  7  8 12  2  2  2  2  2]] [['4', '1', '4', '3', '7', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703  0.82807057 -0.10026469 -0.34286283
 -0.1887592  -0.09657366 -0.0588078   0.24325426]
234  r_total and score:  3307.5910434175266 1.7960552085351937
Current Bleu score is:  1.7960552085351937

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  2  5  2  2  2  2  2]] [['4', '8', '2', '<s>', '5', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.69649546e+00
 -9.02848457e-02 -2.79116902e-01 -1.30315569e-01 -7.57439228e-02
 -4.95746562e-02  2.38304126e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2 13  8  8  7  6  2  2  2  2]] [['<s>', '1', '3', '3', '4', '6', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.01728052  0.11170286 -0.01000653 -0.00488055 -0.01976367
 -0.03356666 -0.0171735  -0.01045767  0.0432574 ]
235  r_total and score:  4067.488184456231 2.507918646717778
Current Bleu score is:  2.507918646717778

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 2 2 2 2 2 2 2 2 2]] [['2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  5  4  2  2  2  2  2]] [['4', '8', '2', '5', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
  5.70811291e+01 -3.23019520e+01 -1.11097281e+01 -5.68399914e+00
 -3.46122802e+00  1.43171232e+01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 13  8  8  9  6  9  9  9  9]] [['5', '1', '3', '3', '2', '6', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
236  r_total and score:  5746.920898599215 4.387191449040961
Current Bleu score is:  4.387191449040961

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 2 2 2 2 2 2 2 2 2]] [['2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  5  4  2  2  2  2  2]] [['4', '8', '2', '5', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
  5.70811291e+01 -3.23019520e+01 -1.11097281e+01 -5.68399914e+00
 -3.46122802e+00  1.43171232e+01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  8  8 11  6  6  6  6  6]] [['5', '8', '3', '3', '0', '6', '6', '6', '6', '6']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
237  r_total and score:  4715.174532096572 3.52370981208459
Current Bleu score is:  3.52370981208459

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 2 2 2 2 2 2 2 2 2]] [['2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  5  4  9  9  9  9  9]] [['4', '8', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
  5.70811291e+01 -1.60607557e+01 -9.69991313e+00 -6.54128323e+00
 -4.72461950e+00  2.98474590e+01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  8  8  9  6  6  9  9  9]] [['5', '8', '3', '3', '2', '6', '6', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
238  r_total and score:  4056.0348650222145 2.8198054327448365
Current Bleu score is:  2.8198054327448365

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  8  4  9  9  9  9  9]] [['4', '8', '2', '3', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  8  8  9  6  6  6  6  6]] [['5', '8', '3', '3', '2', '6', '6', '6', '6', '6']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
239  r_total and score:  4477.108181149578 3.5112430855664143
Current Bleu score is:  3.5112430855664143

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  8  4  9  2  2  2  2]] [['9', '8', '2', '3', '9', '2', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -0.75688136
  -2.17012956  -2.83290136  -1.1683601   -0.64164406   2.22298496]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  8  8  9  6  6  6  6  6]] [['5', '8', '3', '3', '2', '6', '6', '6', '6', '6']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
240  r_total and score:  5008.892771020475 3.7950162420276463
Current Bleu score is:  3.7950162420276463

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4  9  9  9  9  9]] [['9', '8', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407  29.02869589  26.5383664   22.11992169
 -24.01643143 -14.50475327  -9.7814999   -7.06495402  44.63236138]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  6 12  6  6  6  6  9]] [['3', '8', '3', '6', '7', '6', '6', '6', '6', '2']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.06691772  -0.16480582  -0.1111393   -0.08027338   0.50712153]
241  r_total and score:  4863.937341624976 3.678762330236618
Current Bleu score is:  3.678762330236618

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 2 2 2 2 2 2 2 2 2]] [['2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  8  5  4 13  2  2  2  2]] [['9', '8', '3', '5', '9', '1', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.09545516   0.14247652
  -0.38590967  -0.50376902  -0.20776707  -0.11410224   0.39530884]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  8  8  9 13  2  2  2  2]] [['4', '8', '3', '3', '2', '1', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.08918036 -0.01973199 -0.01316934
 -0.07010343 -0.02891243 -0.01587823  0.05501034]
242  r_total and score:  4538.907073446357 2.9933590578567797
Current Bleu score is:  2.9933590578567797

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 2 2 2 2 2 2 2 2 2]] [['2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4 13  2  2  2  2]] [['9', '8', '2', '5', '9', '1', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407  29.02869589  26.5383664   22.11992169
 -24.01643143 -31.35120719 -12.93002999  -7.10095881  24.60137258]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  8  8  9 13  2  2  2  2]] [['4', '8', '3', '3', '2', '1', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.08918036 -0.01973199 -0.01316934
 -0.07010343 -0.02891243 -0.01587823  0.05501034]
243  r_total and score:  4201.30226632055 3.2596951893437085
Current Bleu score is:  3.2596951893437085

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 2 2 2 2 2 2 2 2 2]] [['2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  4 13  2  2  2  2]] [['9', '8', '2', '5', '9', '1', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [  0.91578194  21.39723407  29.02869589  26.5383664   22.11992169
 -24.01643143 -31.35120719 -12.93002999  -7.10095881  24.60137258]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  8  8  9 13  2  2  2  2]] [['4', '8', '3', '3', '2', '1', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.08918036 -0.01973199 -0.01316934
 -0.07010343 -0.02891243 -0.01587823  0.05501034]
244  r_total and score:  5507.652661161571 3.9878326046387866
Current Bleu score is:  3.9878326046387866

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  2  2  2  2  2  2  2  2  2]] [['1', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9  7 13 13  2  2  2  2]] [['1', '8', '2', '4', '1', '1', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -3.56218488e-01 -1.46913505e-01
 -8.06824692e-02  2.79525560e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  8  8  9  2  2  2  2  2]] [['4', '8', '3', '3', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.08918036 -0.01973199 -0.06747505
 -0.03714761 -0.0190056  -0.01157331  0.04787219]
245  r_total and score:  3424.1589868425913 1.565521083972947
Current Bleu score is:  1.565521083972947

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  2  2  2  2  2  2  2  2  2]] [['1', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9  8 13 13  2  2  2  2]] [['1', '8', '2', '3', '1', '1', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -3.56218488e-01 -1.46913505e-01
 -8.06824692e-02  2.79525560e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  8  8  9  2  2  2  2  2]] [['4', '8', '3', '3', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.08918036 -0.01973199 -0.06747505
 -0.03714761 -0.0190056  -0.01157331  0.04787219]
246  r_total and score:  2721.8286996770707 1.7376533985618199
Current Bleu score is:  1.7376533985618199

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  2  2  2  2  2  2  2  2  2]] [['1', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  7 13 13  2  2  2  2]] [['4', '8', '2', '4', '1', '1', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -3.56218488e-01 -1.46913505e-01
 -8.06824692e-02  2.79525560e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  8  8  9  2  2  2  2  2]] [['4', '8', '3', '3', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.08918036 -0.01973199 -0.06747505
 -0.03714761 -0.0190056  -0.01157331  0.04787219]
247  r_total and score:  2196.9081237169403 1.241411898099194
Current Bleu score is:  1.241411898099194

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  9  2  2  2  2  2  2  2  2]] [['1', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  5  9  5 10 13  2  2  2  2]] [['1', '5', '2', '5', '8', '1', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -1.42950658e-01  9.67233440e-01
 -6.57835587e-02 -3.01990637e-01 -3.94220560e-01 -1.62586520e-01
 -8.92898299e-02  3.09345883e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[7 5 8 8 9 2 2 2 2 2]] [['4', '5', '3', '3', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.08918036 -0.01973199 -0.06747505
 -0.03714761 -0.0190056  -0.01157331  0.04787219]
248  r_total and score:  1425.4576728109932 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  2  2  2  2  2  2  2  2]] [['7', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9  5 10 13  2  2  2  2]] [['1', '8', '2', '5', '8', '1', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -2.63631177e+00 -1.08728159e+00
 -5.97117081e-01  2.06872060e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  8  8 12  2  2  2  2  2]] [['4', '8', '3', '3', '7', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.08918036 -0.01973199 -0.06747505
 -0.03714761 -0.0190056  -0.01157331  0.04787219]
249  r_total and score:  2005.601448221142 1.1197845652065732
Current Bleu score is:  1.1197845652065732

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  2  2  2  2  2  2  2  2]] [['7', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  5  9  5  4  2  2  2  2  2]] [['1', '5', '2', '5', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -1.42950658e-01  9.67233440e-01
  7.08574716e+00 -4.06175543e+00 -1.39697436e+00 -7.14725054e-01
 -4.35226382e-01  1.80028293e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  8  8 12  2  2  2  2  2]] [['4', '8', '3', '3', '7', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.08918036 -0.01973199 -0.06747505
 -0.03714761 -0.0190056  -0.01157331  0.04787219]
250  r_total and score:  2131.829922990387 1.0604262628072185
Current Bleu score is:  1.0604262628072185

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 2 2 2 2 2 2 2 2]] [['2', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  5  9  5 10  2  2  2  2  2]] [['4', '5', '2', '5', '8', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -1.42950658e-01  9.67233440e-01
 -6.57835587e-02 -6.07374104e-01 -2.08896390e-01 -1.06876324e-01
 -6.50815241e-02  2.69205088e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  8  8  9  2  2  2  2  2]] [['4', '8', '3', '3', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.08918036 -0.01973199 -0.06747505
 -0.03714761 -0.0190056  -0.01157331  0.04787219]
251  r_total and score:  2059.1642622907084 1.167237190695992
Current Bleu score is:  1.167237190695992

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 2 2 2 2 2 2 2 2]] [['2', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  5  9  5 10  9  2  2  2  2]] [['4', '5', '2', '5', '8', '2', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -1.42950658e-01  9.67233440e-01
 -6.57835587e-02 -1.21214063e-01 -4.68809895e-01 -1.93349046e-01
 -1.06184101e-01  3.67876325e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  5  8  8  9  2 13  9  9  9]] [['2', '5', '3', '3', '2', '<s>', '1', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.07181768 -0.01782986 -0.06097059
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
252  r_total and score:  1327.8481320555065 1.1309755038417024
Current Bleu score is:  1.1309755038417024

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 2 2 2 2 2 2 2 2]] [['2', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  7 13  2  2  2  2  2]] [['4', '8', '2', '4', '1', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -5.48824457e-01 -1.88759197e-01 -9.65736603e-02
 -5.88077955e-02  2.43254257e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  5  8  9  2 13 13 13 13]] [['2', '8', '5', '3', '2', '<s>', '1', '1', '1', '1']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.41027304e+00
 -1.10961119e-01 -3.79440093e-01 -8.88370936e-02 -6.72839587e-02
 -5.27753378e-02  4.41162936e-01]
253  r_total and score:  2865.5107471836727 1.5082358608334558
Current Bleu score is:  1.5082358608334558

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 2 2 2 2 2 2 2 2]] [['2', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  5 10 13  2  2  2  2]] [['4', '8', '2', '5', '8', '1', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -2.63631177e+00 -1.08728159e+00
 -5.97117081e-01  2.06872060e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  5 10  9  2 13  2  2  2]] [['2', '8', '5', '8', '2', '<s>', '1', '<s>', '<s>', '<s>']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.19448980e+00
 -1.31955752e-01 -4.51232858e-01 -1.05645704e-01 -1.93349046e-01
 -1.06184101e-01  3.67876325e-01]
254  r_total and score:  4363.260276186677 2.404051414845083
Current Bleu score is:  2.404051414845083

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 2 2 2 2 2 2 2 2]] [['2', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  5 10 13  9  9  9  9]] [['4', '8', '2', '5', '8', '1', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  5  8  9  2  2  2  2  2]] [['2', '8', '5', '3', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.41027304e+00
 -1.10961119e-01 -3.79440093e-01 -2.08896390e-01 -1.06876324e-01
 -6.50815241e-02  2.69205088e-01]
255  r_total and score:  3849.0030650458507 2.31581942173755
Current Bleu score is:  2.31581942173755

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 2 2 2 2 2 2 2 2]] [['2', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  5 13 13  2  2  2  2]] [['4', '8', '2', '5', '1', '1', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -2.63631177e+00 -1.08728159e+00
 -5.97117081e-01  2.06872060e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  5  8  9  2  2  2  2  2]] [['2', '8', '5', '3', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.41027304e+00
 -1.10961119e-01 -3.79440093e-01 -2.08896390e-01 -1.06876324e-01
 -6.50815241e-02  2.69205088e-01]
256  r_total and score:  3360.596861255911 2.3592711826026926
Current Bleu score is:  2.3592711826026926

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  8 11 12  2  9  9  9]] [['4', '8', '2', '3', '0', '7', '<s>', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -3.56218488e-01 -6.07979199e-02
 -4.76879010e-02  3.98635713e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  5  8  9  9  9  9  9  9]] [['2', '8', '5', '3', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.41027304e+00
 -1.10961119e-01 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
257  r_total and score:  3222.934143935039 2.459912739434716
Current Bleu score is:  2.459912739434716

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 2 2 2 2 2 2 2 2 2]] [['2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11  9  8  4 13  2  2  2  2]] [['4', '0', '2', '3', '9', '1', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.0633456  -0.02612533 -0.0143476   0.04970745]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 11  9  6  9  2  2  2  2  2]] [['2', '0', '2', '6', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00911723
 -0.00501939 -0.00256804 -0.00156379  0.00646849]
258  r_total and score:  2423.145371605102 2.0994726290558585
Current Bleu score is:  2.0994726290558585

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 2 2 2 2 2 2 2 2 2]] [['3', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 12  8  4 13 13  2  2  2]] [['4', '8', '7', '3', '9', '1', '1', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.04485009 -0.02093985  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 11  5  6  9  9  2  2  2  2]] [['2', '0', '5', '6', '2', '2', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281 -0.01499307 -0.01000653
 -0.05326709 -0.02196869 -0.01206484  0.04179882]
259  r_total and score:  1743.587083466757 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  2  2  2  2  2  2  2  2  2]] [['7', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 12  8 11 12  2  2  2  2]] [['4', '8', '7', '3', '0', '7', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.05326709 -0.02196869 -0.01206484  0.04179882]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11  5  7  9  2  2  2  2  2]] [['0', '0', '5', '4', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
 -1.00264689e-01 -3.42862828e-01 -1.88759197e-01 -9.65736603e-02
 -5.88077955e-02  2.43254257e-01]
260  r_total and score:  2321.297738286401 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  2  2  2  2  2  2  2  2  2]] [['7', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11  8  8  4 13  2  2  2  2]] [['4', '0', '3', '3', '9', '1', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.05326709 -0.02196869 -0.01206484  0.04179882]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11  5  7  4  2  2  2  2  2]] [['0', '0', '5', '4', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
 -1.00264689e-01 -3.42862828e-01 -1.88759197e-01 -9.65736603e-02
 -5.88077955e-02  2.43254257e-01]
261  r_total and score:  1445.095146055817 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  2  2  2  2  2  2  2  2  2]] [['7', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11 12  5  4 13  2  2  2  2]] [['4', '0', '7', '5', '9', '1', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  1.24767480e-02  1.69612658e-01
  9.38352275e-01 -2.72879345e-01 -3.56218488e-01 -1.46913505e-01
 -8.06824692e-02  2.79525560e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11  5  6  4  2  2  2  2  2]] [['0', '0', '5', '6', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281 -0.01499307 -0.05126995
 -0.02822608 -0.01444113 -0.00879382  0.036375  ]
262  r_total and score:  2651.6703345902924 1.577171072764952
Current Bleu score is:  1.577171072764952

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  2  2  2  2  2  2  2  2  2]] [['7', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  7  8  8  4 12  2  2  2  2]] [['4', '4', '3', '3', '9', '7', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.05326709 -0.02196869 -0.01206484  0.04179882]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11  5  6  4  2  2  2  2  2]] [['0', '0', '5', '6', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281 -0.01499307 -0.05126995
 -0.02822608 -0.01444113 -0.00879382  0.036375  ]
263  r_total and score:  2275.4105508875277 0.0
Current Bleu score is:  0.0
EPOCH %d 9
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12  2  2  2  2  2  2  2  2]] [['7', '7', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  7 12  7 12 12  2  2  2  2]] [['4', '4', '7', '4', '7', '7', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00947238 -0.00390665 -0.00214547  0.007433  ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11  5  6  4  2  2  2  2  2]] [['0', '0', '5', '6', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281 -0.01499307 -0.05126995
 -0.02822608 -0.01444113 -0.00879382  0.036375  ]
264  r_total and score:  2172.051268023141 1.3838948815723917
Current Bleu score is:  1.3838948815723917

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  8  2  2  2  2  2  2  2  2]] [['7', '3', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  7  8  8 12 12  8  8  8  8]] [['3', '4', '3', '3', '7', '7', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11  5  6  4  2  2  2  2  2]] [['0', '0', '5', '6', '9', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281 -0.01499307 -0.05126995
 -0.02822608 -0.01444113 -0.00879382  0.036375  ]
265  r_total and score:  1639.8104574743793 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  8  2  2  2  2  2  2  2  2]] [['1', '3', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05        0.02071068 -0.04049692 -0.01459405 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 11  9  5  4 12  8  8  8  8]] [['3', '0', '2', '5', '9', '7', '3', '3', '3', '3']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01  1.04067266e+00
  7.08574716e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 11  5  6  6  8  2  2  2  2]] [['2', '0', '5', '6', '6', '3', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281 -0.01499307  0.01442
 -0.0633456  -0.02612533 -0.0143476   0.04970745]
266  r_total and score:  3071.6802921746116 1.3077259348763204
Current Bleu score is:  1.3077259348763204

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 13  8  8  8  8  8  8  8  8]] [['3', '1', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  7  8  8  4 13 13 13 13 13]] [['3', '4', '3', '3', '9', '1', '1', '1', '1', '1']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 11  5  7  8  2  8  8  8  8]] [['3', '0', '5', '4', '3', '<s>', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553  0.88538718  5.74421702 -2.53746883
 -0.59408945 -0.44995495 -0.35292995  2.95023436]
267  r_total and score:  3139.925683335256 1.4841171628982315
Current Bleu score is:  1.4841171628982315

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 11 11  5 13 12 12 12 12 12]] [['3', '0', '0', '5', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.16961266 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 13  5 10  8 13 12 12 12 12]] [['1', '1', '5', '8', '3', '1', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
 -1.02300788e-03 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
268  r_total and score:  3404.6372012265497 1.4728691674512757
Current Bleu score is:  1.4728691674512757

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 12 12 12 12 12 12 12 12 12]] [['2', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 11 11  5  8 12 12 12 12 12]] [['3', '0', '0', '5', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.16961266 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 11  5 10  8  9 12 12 12 12]] [['2', '0', '5', '8', '3', '2', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
 -1.02300788e-03 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
269  r_total and score:  3657.013639473828 2.526508717684959
Current Bleu score is:  2.526508717684959

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11 12  5  4  5 12 12 12 12]] [['4', '0', '7', '5', '9', '5', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  1.24767480e-02  1.69612658e-01
  9.38352275e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 11  5 10  8  9 12 12 12 12]] [['2', '0', '5', '8', '3', '2', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
 -1.02300788e-03 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
270  r_total and score:  3401.1349260923716 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11  9  5  4  5  5 12 12  5]] [['4', '0', '2', '5', '9', '5', '5', '7', '7', '5']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01  1.04067266e+00
  7.08574716e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11  5 10  4 13 12 12 12 12]] [['0', '0', '5', '8', '9', '1', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
 -1.00264689e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
271  r_total and score:  4402.459193790117 2.6852689210537695
Current Bleu score is:  2.6852689210537695

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 13 12  5  4 12 12 12 12 12]] [['4', '1', '7', '5', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  1.24767480e-02  1.69612658e-01
  9.38352275e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 11  5 10  4 12 12 12 12 12]] [['2', '0', '5', '8', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
 -1.00264689e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
272  r_total and score:  4034.5479754527028 2.1425005356243414
Current Bleu score is:  2.1425005356243414

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 11 11 13 13 13 13 13 13 13]] [['2', '0', '0', '1', '1', '1', '1', '1', '1', '1']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 11 13  5  4  5 11 11 11 11]] [['8', '0', '1', '5', '9', '5', '0', '0', '0', '0']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.04723938  1.02212848 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11  5 10  4 13 11 11 11 11]] [['0', '0', '5', '8', '9', '1', '0', '0', '0', '0']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
 -1.00264689e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
273  r_total and score:  3604.583601758972 2.6780869585246507
Current Bleu score is:  2.6780869585246507

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 12 12 12 12 12 12 12 12 12]] [['2', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 11 13  5  4  5 12 12 12 12]] [['8', '0', '1', '5', '9', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.04723938  1.02212848 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11  5 10  4 13 12 12 12 12]] [['0', '0', '5', '8', '9', '1', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
 -1.00264689e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
274  r_total and score:  2988.1412154754794 1.652506269125294
Current Bleu score is:  1.652506269125294

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 12 13 13 13 13 13 13 13 13]] [['2', '7', '1', '1', '1', '1', '1', '1', '1', '1']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 11  9  5  4  5 12 12 12 12]] [['8', '0', '2', '5', '9', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  1.10839677  7.57163972 -2.17012956
 -1.31065241 -0.88385829 -0.63839066  4.03298912]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11  6 10  9 13 12 12 12 12]] [['0', '0', '6', '8', '2', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
275  r_total and score:  3207.5863108905396 2.0864882547923522
Current Bleu score is:  2.0864882547923522

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 12 12 12 12 12 12 12 12 12]] [['2', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  9 13  7  5 12 12 12 12]] [['8', '8', '2', '1', '4', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774  3.06090127 -2.23661849 -0.18699762 -0.18077657
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 11  9 10  9 13 12 12 12 12]] [['2', '0', '2', '8', '2', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
276  r_total and score:  2832.7567944249386 1.817159019794044
Current Bleu score is:  1.817159019794044

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  9 13  4  5 12 12 12 12]] [['8', '8', '2', '1', '9', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774  3.06090127 -2.23661849 -0.06578356 -0.23074333
 -0.19598825 -0.13216764 -0.09546167  0.60307254]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11  5 10  9 12 12 12 12 12]] [['0', '0', '5', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
 -1.00264689e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
277  r_total and score:  2523.2784341253628 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 12 12 12 12 12 12 12 12 12]] [['2', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  5  4  5 12 12 12 12]] [['4', '8', '2', '5', '9', '5', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
  5.70811291e+01 -1.60607557e+01 -9.69991313e+00 -6.54128323e+00
 -4.72461950e+00  2.98474590e+01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 11  9 10  9 13 12 12 12 12]] [['2', '0', '2', '8', '2', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
278  r_total and score:  2495.5244374440467 1.6731429575797463
Current Bleu score is:  1.6731429575797463

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 12 12 12 12 12 12 12 12 12]] [['2', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  5  8  5 12 12 12 12]] [['4', '8', '2', '5', '3', '5', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 11  9 12  9 12 12 12 12 12]] [['2', '0', '2', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
279  r_total and score:  1740.3140232381816 1.3737907117924146
Current Bleu score is:  1.3737907117924146

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 12 12 12 12 12 12 12 12 12]] [['2', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 13  9  9  4 12 12 12 12 12]] [['4', '1', '2', '2', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 13 13 12  9 12 12 12 12 12]] [['2', '1', '1', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
280  r_total and score:  1892.2779112135731 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 12 12 12 12 12 12 12 12 12]] [['2', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10 11 13  4 12 12 12 12 12]] [['6', '8', '0', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10 13  7 13  5 12 12 12 12]] [['2', '8', '1', '4', '1', '5', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
281  r_total and score:  2174.223626018434 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 13 11 13  4 12 12 12 12 12]] [['4', '1', '0', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11  9 12  9 12 12 12 12 12]] [['0', '0', '2', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
282  r_total and score:  2637.5416932412286 1.127479029020159
Current Bleu score is:  1.127479029020159

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 11 13 13 12 12 12 12 12]] [['4', '8', '0', '1', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 13 12  9 12 12 12 12 12]] [['0', '8', '1', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
283  r_total and score:  3194.6354135189154 1.5859449921795763
Current Bleu score is:  1.5859449921795763

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 13 13 13 12 12 12 12 12]] [['4', '8', '1', '1', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10 13  6  8 12 12 12 12 12]] [['2', '8', '1', '6', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
284  r_total and score:  3686.019939526138 1.927016541133597
Current Bleu score is:  1.927016541133597

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 13 13  4 12 12 12 12 12]] [['4', '8', '1', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10 13  6  8 12 12 12 12 12]] [['2', '8', '1', '6', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
285  r_total and score:  3658.9850187723273 2.307195502654011
Current Bleu score is:  2.307195502654011

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 12 12 12 12 12 12 12 12 12]] [['2', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 13  9 13 13 13 13 13 13 13]] [['4', '1', '2', '1', '1', '1', '1', '1', '1', '1']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 13 13  6  9  5 12 12 12 12]] [['2', '1', '1', '6', '2', '5', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619  0.10436252
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
286  r_total and score:  3193.5285667156336 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 12 12 12 12 12 12 12 12 12]] [['2', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 13  9  9 13  9 12 12 12 12]] [['4', '1', '2', '2', '1', '2', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 13  9  6  9  5 12 12 12 12]] [['2', '1', '2', '6', '2', '5', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619  0.10436252
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
287  r_total and score:  4256.2583813967485 2.323294893595351
Current Bleu score is:  2.323294893595351

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 12 12 12 12 12 12 12 12 12]] [['2', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 13  9  5 13  5 12 12 12 12]] [['4', '1', '2', '5', '1', '5', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01  1.04067266e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 13  9  6  9  5 12 12 12 12]] [['2', '1', '2', '6', '2', '5', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619  0.10436252
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
288  r_total and score:  4718.267135917148 3.0896507158606763
Current Bleu score is:  3.0896507158606763

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 12 12 12 12 12 12 12 12 12]] [['2', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 13  9  9 13 12 12 12 12 12]] [['4', '1', '2', '2', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 13  5  6  4  5 12 12 12 12]] [['2', '1', '5', '6', '9', '5', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281 -0.01499307  0.01442
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
289  r_total and score:  4807.461310305654 3.456054867154062
Current Bleu score is:  3.456054867154062

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 12 12 12 12 12 12 12 12 12]] [['2', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 13  9  5 13 12 12 12 12 12]] [['4', '1', '2', '5', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01  1.04067266e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 13  5  6  4 12 12 12 12 12]] [['2', '1', '5', '6', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
290  r_total and score:  4075.9532939042415 2.943304283729254
Current Bleu score is:  2.943304283729254

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 12 12 12 12 12 12 12 12 12]] [['2', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 13  9  9 13 12 12 12 12 12]] [['4', '1', '2', '2', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 13  5 13  9  5 12 12 12 12]] [['2', '1', '5', '1', '2', '5', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281 -0.01499307  0.01442
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
291  r_total and score:  3214.269970471667 2.346514295883497
Current Bleu score is:  2.346514295883497

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 13  9 13 13  5 12 12 12 12]] [['4', '1', '2', '1', '1', '5', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.01637845
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 11  5  6  9  5 12 12 12 12]] [['2', '0', '5', '6', '2', '5', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281 -0.01499307  0.01442
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
292  r_total and score:  4311.8414255086145 3.4479424415742046
Current Bleu score is:  3.4479424415742046

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 12 12 12 12 12 12 12 12 12]] [['2', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 13  9  9 13  5 12 12 12 12]] [['4', '1', '2', '2', '1', '5', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.01637845
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 13  9  6  4  5 12 12 12 12]] [['2', '1', '2', '6', '9', '5', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619  0.10436252
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
293  r_total and score:  3229.06641634804 2.2076694249063102
Current Bleu score is:  2.2076694249063102

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 12 12 12 12 12 12 12 12 12]] [['2', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11  9  9 13  5  5  5  5  5]] [['4', '0', '2', '2', '1', '5', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.01637845
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 11  9  6  4  5  5  5  5  5]] [['2', '0', '2', '6', '9', '5', '5', '5', '5', '5']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619  0.10436252
 -0.00488055 -0.01976367 -0.01427485  0.09018038]
294  r_total and score:  2586.133995680339 1.5022107163949223
Current Bleu score is:  1.5022107163949223

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 12 12 12 12 12 12 12 12 12]] [['2', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  9 13  5  5  5  5  5]] [['4', '8', '2', '2', '1', '5', '5', '5', '5', '5']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -1.80776574e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 11 13 12 13  5  9  9  5  5]] [['2', '0', '1', '7', '1', '5', '2', '2', '5', '5']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619  0.10436252
 -0.02464422 -0.0166192   0.00234435  0.09018038]
295  r_total and score:  3972.508389965331 2.591175549593546
Current Bleu score is:  2.591175549593546

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11  9 13 13  5  9  9  9  9]] [['4', '0', '2', '1', '1', '5', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.01637845
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 11  9 12 13  9 12 12 12 12]] [['2', '0', '2', '7', '1', '2', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
296  r_total and score:  3791.996407445982 2.0561818089171835
Current Bleu score is:  2.0561818089171835

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9  9  9 12 12 12 12 12 12 12]] [['2', '2', '2', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11  9 13 13  9  9  9  9  9]] [['4', '0', '2', '1', '1', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 11  9 12 13  9  9  9  9  9]] [['2', '0', '2', '7', '1', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
297  r_total and score:  3458.404799207046 0.0
Current Bleu score is:  0.0
EPOCH %d 10
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5  9 12 12 12 12 12 12 12 12]] [['5', '2', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11 11 13 13  5  9  9  9  9]] [['4', '0', '0', '1', '1', '5', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254  0.09888569
 -0.00488055 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11 13 12 13  9  9  9  9  9]] [['5', '0', '1', '7', '1', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
298  r_total and score:  3234.9852238376825 1.2857379384272525
Current Bleu score is:  1.2857379384272525

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11  9 13  5  9  9  9  9  9]] [['4', '0', '2', '1', '5', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11 13 12 13  9  9  9  9  9]] [['5', '0', '1', '7', '1', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
299  r_total and score:  3815.751306758957 1.7912845962199073
Current Bleu score is:  1.7912845962199073

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11  9 13  5  9  9  9  9  9]] [['4', '0', '2', '1', '5', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11 10 12 13  9  9  9  9  9]] [['5', '0', '8', '7', '1', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
300  r_total and score:  3951.4948078783996 1.9025906803730126
Current Bleu score is:  1.9025906803730126

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11  9 12  5  9  9  9  9  9]] [['4', '0', '2', '7', '5', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  5 12 13  9  9  9  9  9]] [['5', '0', '5', '7', '1', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
301  r_total and score:  3787.1338130837657 2.3067061429023683
Current Bleu score is:  2.3067061429023683

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11  9 13  4 12 12 12 12 12]] [['4', '0', '2', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11 13 12 13  9  9  9  9  9]] [['5', '0', '1', '7', '1', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
302  r_total and score:  4813.943398510914 3.668129289901931
Current Bleu score is:  3.668129289901931

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 11 11 13  4 12  9  9  9  9]] [['3', '0', '0', '1', '9', '7', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.00488055 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11  5  6 13  9  9  9  9  9]] [['0', '0', '5', '6', '1', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
303  r_total and score:  4180.067839341669 2.588648594176414
Current Bleu score is:  2.588648594176414

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9 13  4  5 12  9  9 12]] [['3', '8', '2', '1', '9', '5', '7', '2', '2', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -2.30743334e-01 -1.95988249e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  5  8 13 12  9  9  9  9]] [['5', '0', '5', '3', '1', '7', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
304  r_total and score:  5994.340825734703 4.251391032775506
Current Bleu score is:  4.251391032775506

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12  9  9  9  9  9  9  9  9]] [['5', '7', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 11  9 13 10 12 12 12 12 12]] [['3', '0', '2', '1', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11 13 12 13 12 12 12 12 12]] [['5', '0', '1', '7', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
305  r_total and score:  4991.855341622536 3.768252026781793
Current Bleu score is:  3.768252026781793

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11  9 13  4 12 12 12 12 12]] [['4', '0', '2', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11 13 12 13 12 12 12 12 12]] [['5', '0', '1', '7', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
306  r_total and score:  5081.763138942347 3.6600960544912167
Current Bleu score is:  3.6600960544912167

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  9  9  9  9  9  9  9  9  9]] [['1', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 11  9 13  4 12 12 12 12 12]] [['1', '0', '2', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 11 13 12 13 12 12 12 12 12]] [['2', '0', '1', '7', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
307  r_total and score:  5248.981723569921 4.473217548824199
Current Bleu score is:  4.473217548824199

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 11  9 13  4 12 12 12 12 12]] [['1', '0', '2', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 11 13 13 13 12 12 12 12 12]] [['7', '0', '1', '1', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
308  r_total and score:  3689.556641817296 3.2099409668583974
Current Bleu score is:  3.2099409668583974

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9  5  4 12 12 12 12 12]] [['1', '8', '2', '5', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
  5.70811291e+01 -1.60607557e+01 -9.69991313e+00 -6.54128323e+00
 -4.72461950e+00  2.98474590e+01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 11 13 13 13 12 12 12 12 12]] [['2', '0', '1', '1', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
309  r_total and score:  5861.869023870825 5.054069003965496
Current Bleu score is:  5.054069003965496

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  6  6  6  6  6  6  6  6  6]] [['7', '6', '6', '6', '6', '6', '6', '6', '6', '6']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9  5  4 12  6  6  6  6]] [['1', '8', '2', '5', '9', '7', '6', '6', '6', '6']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
  5.70811291e+01 -1.60607557e+01 -9.69991313e+00 -6.54128323e+00
 -4.72461950e+00  2.98474590e+01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10  5  7  9 12  6  6  6  6]] [['7', '8', '5', '4', '2', '7', '6', '6', '6', '6']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00  5.07598570e+00
 -7.42041723e-01 -4.95246511e-01 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]
310  r_total and score:  5534.542045444221 5.126377380961706
Current Bleu score is:  5.126377380961706

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  9  9  9  9  9  9  9  9  9]] [['1', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  9  9  5  4 12  9  9  9  9]] [['1', '2', '2', '5', '9', '7', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -2.16389877e-01  1.04067266e+00
  7.08574716e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9  5  4 10 12  9  9  9  9]] [['7', '2', '5', '9', '8', '7', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
311  r_total and score:  5005.240636029628 4.415627671053437
Current Bleu score is:  4.415627671053437

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9  5  4 12  9  9  9  9]] [['1', '8', '2', '5', '9', '7', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
  5.70811291e+01 -1.60607557e+01 -9.69991313e+00 -6.54128323e+00
 -4.72461950e+00  2.98474590e+01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  5  5 13 13 12 12 12 12 12]] [['7', '5', '5', '1', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
312  r_total and score:  5461.907379835653 4.893680474267455
Current Bleu score is:  4.893680474267455

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9  5  4 12 12 12 12 12]] [['1', '8', '2', '5', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
  5.70811291e+01 -1.60607557e+01 -9.69991313e+00 -6.54128323e+00
 -4.72461950e+00  2.98474590e+01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  9 12 12 12 12 12]] [['5', '8', '5', '0', '2', '7', '7', '7', '7', '7']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
313  r_total and score:  6324.0933618769795 5.500536574902483
Current Bleu score is:  5.500536574902483

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  9  9  9  9  9  9  9  9  9]] [['1', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9  5  4 12  9  9  9  9]] [['1', '8', '2', '5', '9', '7', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
  5.70811291e+01 -1.60607557e+01 -9.69991313e+00 -6.54128323e+00
 -4.72461950e+00  2.98474590e+01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  9 12  9 12  9 12]] [['5', '8', '5', '0', '2', '7', '2', '7', '2', '7']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
314  r_total and score:  4883.460636808984 3.8180535433707283
Current Bleu score is:  3.8180535433707283

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9  5 10  9  9  9  9  9]] [['1', '8', '2', '5', '8', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  9  9  9  9  9  9]] [['5', '8', '5', '0', '2', '2', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
315  r_total and score:  4449.956717506524 3.8819282225440843
Current Bleu score is:  3.8819282225440843

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  9  9  9  9  9  9  9  9  9]] [['1', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9 13  4  9  9  9  9  9]] [['1', '8', '2', '1', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  9  9  9  9  9  9]] [['5', '8', '5', '0', '2', '2', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
316  r_total and score:  5253.596374587982 3.2510244521144607
Current Bleu score is:  3.2510244521144607

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  5 10  9  9  9  9  9]] [['4', '8', '2', '5', '8', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5 11  7  9  9  9  9  9]] [['5', '5', '5', '0', '4', '2', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
317  r_total and score:  5042.811782095548 3.4221882879046426
Current Bleu score is:  3.4221882879046426

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  9  9  9  9  9  9  9  9  9]] [['1', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9 12 10  9  9  9  9  9]] [['4', '8', '2', '7', '8', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  5  5 11  4  9  9  9  9  9]] [['9', '5', '5', '0', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
318  r_total and score:  3111.7881767296794 2.5173580628750756
Current Bleu score is:  2.5173580628750756

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  9  9  9  9  9  9  9  9  9]] [['1', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 11  9 13  4  9  9  9  9  9]] [['1', '0', '2', '1', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  5 11  4  9  9  9  9  9]] [['5', '0', '5', '0', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
319  r_total and score:  3963.453669947037 2.477125464017232
Current Bleu score is:  2.477125464017232

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11  9  9  9  9  9  9  9  9  9]] [['0', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11  9 11  4  9  9  9  9  9]] [['4', '0', '2', '0', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11 11  9  6  9  9  9  9  9]] [['0', '0', '0', '2', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
320  r_total and score:  4237.69726488036 3.0872639618850415
Current Bleu score is:  3.0872639618850415

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  9  9  9  9  9  9  9  9  9]] [['1', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11  9 11  4  9  9  9  9  9]] [['4', '0', '2', '0', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11 11  9  6  9  9  9  9  9]] [['0', '0', '0', '2', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
321  r_total and score:  2897.472781678044 1.8511314217170536
Current Bleu score is:  1.8511314217170536

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11  9 11  4  9  9  9  9  9]] [['4', '0', '2', '0', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11 11  9  6  9  9  9  9  9]] [['0', '0', '0', '2', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
322  r_total and score:  3580.2616579186156 1.8675389171516419
Current Bleu score is:  1.8675389171516419

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  9  9  9  9  9  9  9  9  9]] [['1', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 11  9 11  6  9  9  9  9  9]] [['6', '0', '2', '0', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11 11 11  6  9  9  9  9  9]] [['0', '0', '0', '0', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
323  r_total and score:  2935.5063421492555 1.6522630155122269
Current Bleu score is:  1.6522630155122269

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  9  9  9  9  9  9  9  9  9]] [['1', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 11 13 13  6  9  9  9  9  9]] [['1', '0', '1', '1', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254  0.09888569
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  5 11 13  9  9  9  9  9]] [['5', '0', '5', '0', '1', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
324  r_total and score:  4296.285289488001 2.990372998157187
Current Bleu score is:  2.990372998157187

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  9  9  9  9  9  9  9  9  9]] [['1', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 11  9  5  4  9  9  9  9  9]] [['6', '0', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01  1.04067266e+00
  7.08574716e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 11  5 11 10  9  9  9  9  9]] [['2', '0', '5', '0', '8', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
325  r_total and score:  4799.8975392952425 3.807401843437937
Current Bleu score is:  3.807401843437937

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  9  9  9  9  9  9  9  9  9]] [['1', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 11  9  5  4  9  9  9  9  9]] [['6', '0', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01  1.04067266e+00
  7.08574716e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  5 11 13  9  9  9  9  9]] [['5', '0', '5', '0', '1', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
326  r_total and score:  5548.954146150874 4.7893287942148355
Current Bleu score is:  4.7893287942148355

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  9  9 13  9  9  9  9  9]] [['6', '8', '2', '2', '1', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10  5 11 13  9  9  9  9  9]] [['0', '8', '5', '0', '1', '2', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.52021115e+00
 -1.00264689e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
327  r_total and score:  5903.669490525133 4.5033154601123355
Current Bleu score is:  4.5033154601123355

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 11  9  9  6  9  9  9  9  9]] [['6', '0', '2', '2', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10  9 11  6  9  9  9  9  9]] [['0', '8', '2', '0', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
328  r_total and score:  3732.5111296201044 3.2862957231803707
Current Bleu score is:  3.2862957231803707

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  9  5  6  9  9  9  9  9]] [['6', '8', '2', '5', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10  9  8  6  9  9  9  9  9]] [['9', '8', '2', '3', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
329  r_total and score:  4750.4208030814 3.5777860994552015
Current Bleu score is:  3.5777860994552015

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  9  5  6  9  9  9  9  9]] [['6', '8', '2', '5', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10  5 11 10  9  9  9  9  9]] [['9', '8', '5', '0', '8', '2', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.52021115e+00
 -1.02300788e-03 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
330  r_total and score:  5871.373287638969 4.705277486235451
Current Bleu score is:  4.705277486235451
EPOCH %d 11
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  5  6  9  9  9  9  9]] [['3', '8', '2', '5', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 10  5 11 10  9  9  9  9  9]] [['9', '8', '5', '0', '8', '2', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.52021115e+00
 -1.02300788e-03 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
331  r_total and score:  5468.106829186424 4.740109466502589
Current Bleu score is:  4.740109466502589

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  5  6  9  9  9  9  9]] [['3', '8', '2', '5', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  9  9  9  9  9  9]] [['5', '8', '5', '0', '2', '2', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
332  r_total and score:  6217.656747080567 4.974055911750687
Current Bleu score is:  4.974055911750687

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  5  6  9  9  9  9  9]] [['3', '8', '2', '5', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  7  9  9  9  9  9]] [['5', '8', '5', '0', '4', '2', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.22865179
  -0.53217701  -1.31065241  -0.88385829  -0.63839066   4.03298912]
333  r_total and score:  6296.945996187492 5.002596934412184
Current Bleu score is:  5.002596934412184

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  5  6  9  9  9  9  9]] [['3', '8', '2', '5', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  8  9  9  9  9  9]] [['5', '8', '5', '0', '3', '2', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.22865179
  -0.53217701  -1.31065241  -0.88385829  -0.63839066   4.03298912]
334  r_total and score:  5360.97779173558 4.48336708543892
Current Bleu score is:  4.48336708543892

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  9  9  4  9  9  9  9  9]] [['6', '8', '2', '2', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  9  9  9  9  9  9]] [['5', '8', '5', '0', '2', '2', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
335  r_total and score:  5248.336533841852 4.573723635404279
Current Bleu score is:  4.573723635404279

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  9  6  9  9  9  9  9]] [['9', '8', '2', '2', '6', '2', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -1.38393724
  -2.01953311  -1.2196995   -0.82252282  -0.59408945   3.75311927]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  9  9  9  9  9  9]] [['5', '8', '5', '0', '2', '2', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
336  r_total and score:  6765.6378014470065 4.971885410396349
Current Bleu score is:  4.971885410396349

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  9  6  9  9  9  9  9]] [['9', '8', '2', '2', '6', '2', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -1.38393724
  -2.01953311  -1.2196995   -0.82252282  -0.59408945   3.75311927]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  9 12  9  9  9  9]] [['5', '8', '5', '0', '2', '7', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
337  r_total and score:  6605.642561243835 5.086480361309825
Current Bleu score is:  5.086480361309825

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  9  6 12 12 12 12 12]] [['9', '8', '2', '2', '6', '7', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -1.38393724
  -2.01953311  -1.2196995   -0.82252282  -0.59408945   3.75311927]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  9 12 12 12 12 12]] [['5', '8', '5', '0', '2', '7', '7', '7', '7', '7']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
338  r_total and score:  6198.102819683252 4.913934143901409
Current Bleu score is:  4.913934143901409

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 12  5 11 12 12 12 12 12]] [['9', '8', '7', '5', '0', '7', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.09545516  -0.20694689
  -0.30199064  -0.18238762  -0.12299585  -0.08883709   0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  9 12 12 12 12 12]] [['5', '8', '5', '0', '2', '7', '7', '7', '7', '7']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
339  r_total and score:  6547.99851791908 5.0834499873933865
Current Bleu score is:  5.0834499873933865

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 12  5  6  9  9  9  9  9]] [['9', '8', '7', '5', '6', '2', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.09545516  -0.20694689
  -0.23074333  -0.19598825  -0.13216764  -0.09546167   0.60307254]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  9  9  9  9  9  9]] [['5', '8', '5', '0', '2', '2', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
340  r_total and score:  4709.74409833105 3.8188473700507446
Current Bleu score is:  3.8188473700507446

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  9  5 11  9  9  9  9  9]] [['7', '8', '2', '5', '0', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  9  9  9  9  9  9]] [['5', '8', '5', '0', '2', '2', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
341  r_total and score:  4630.781655432957 4.00127144381922
Current Bleu score is:  4.00127144381922

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  9  5  4  9  9  9  9  9]] [['7', '8', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
  5.70811291e+01 -1.60607557e+01 -9.69991313e+00 -6.54128323e+00
 -4.72461950e+00  2.98474590e+01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  9  9  9  9  9  9]] [['5', '8', '5', '0', '2', '2', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
342  r_total and score:  4361.499656859261 2.946746907767439
Current Bleu score is:  2.946746907767439

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10 12  9  6  9  9  9  9  9]] [['7', '8', '7', '2', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  9 11  9  9  9  9  9  9]] [['5', '8', '2', '0', '2', '2', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.06691772  -0.16480582  -0.1111393   -0.08027338   0.50712153]
343  r_total and score:  2426.551602252363 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5  9  9 12 12 12 12 12 12 12]] [['5', '2', '2', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10 12  5 10  9  9  9  9  9]] [['7', '8', '7', '5', '8', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534   0.75339124
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  9  9  9  9  9  9]] [['5', '8', '5', '0', '2', '2', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
344  r_total and score:  3536.834377460027 2.154058806069471
Current Bleu score is:  2.154058806069471

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10 12  5 10  9  9  9  9  9]] [['6', '8', '7', '5', '8', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534   0.75339124
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  9  9  9  9  9  9]] [['5', '8', '5', '0', '2', '2', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
345  r_total and score:  3958.425327127558 3.0174778412806256
Current Bleu score is:  3.0174778412806256

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 10 12  5  4  9  9  9  9  9]] [['2', '8', '7', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.09557581  1.09079242 -0.32451006
 -0.19598825 -0.13216764 -0.09546167  0.60307254]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  9  9  9  9  9  9]] [['5', '8', '5', '0', '2', '2', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
346  r_total and score:  4262.628198744325 3.6791249416355285
Current Bleu score is:  3.6791249416355285

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10 12  5  4 12  9  9  9  9]] [['6', '8', '7', '5', '9', '7', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -2.16389877e-01 -4.72393767e-02
  1.02212848e+00 -3.01990637e-01 -1.24740945e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  9  9  9  9  9  9]] [['5', '8', '5', '0', '2', '2', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
347  r_total and score:  5105.58344922636 4.13350623500726
Current Bleu score is:  4.13350623500726

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 12  5  4  9  9  9  9  9]] [['3', '8', '7', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -2.16389877e-01 -4.72393767e-02
  1.02212848e+00 -2.30743334e-01 -1.95988249e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  9 12  9  9  9  9]] [['5', '8', '5', '0', '2', '7', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
348  r_total and score:  5263.6569023707925 3.778180743824428
Current Bleu score is:  3.778180743824428

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10 12  2  4 12  9  9  9  9]] [['6', '8', '7', '<s>', '9', '7', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.00488055 -0.01976367
 -0.00465423 -0.01196497 -0.00938493  0.0784511 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  2 11  8 12  9  9  9  9]] [['5', '8', '<s>', '0', '3', '7', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097 -12.60327059  -0.06691772  -0.09028485
  -0.12299585  -0.08883709  -0.06728396  -0.05277534   0.44116294]
349  r_total and score:  3384.532519715994 2.662713998735496
Current Bleu score is:  2.662713998735496

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 12  2  4 12  9  9  9  9]] [['9', '8', '7', '<s>', '9', '7', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.69649546  -0.09028485
  -0.12299585  -0.04698679  -0.07230132  -0.05671079   0.47406043]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5  8  9 12  9  9  9  9]] [['5', '8', '5', '3', '2', '7', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -28.5925009   -0.79737572
  -0.53217701  -1.31065241  -0.88385829  -0.63839066   4.03298912]
350  r_total and score:  4041.762278497014 2.888699991091513
Current Bleu score is:  2.888699991091513

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 12  2 10 12  9  9  9  9]] [['8', '8', '7', '<s>', '8', '7', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.15344488 -0.02464422 -0.0166192
  0.00234435 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  2 11  9 12  9  9  9  9]] [['5', '8', '<s>', '0', '2', '7', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097 -12.60327059  -0.06691772  -0.16480582
  -0.1111393   -0.08027338  -0.06079792  -0.0476879    0.39863571]
351  r_total and score:  3765.8324666635754 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 12 12 12 12 12 12 12 12 12]] [['2', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 13  2  4 12 12 12 12 12]] [['8', '8', '1', '<s>', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.15344488 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  2  2  9  9 12  9  9  9  9]] [['5', '<s>', '<s>', '2', '2', '7', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.1827983  -0.04964382 -0.0166192  -0.01200367 -0.00909141
 -0.007131   -0.00574628 -0.00473096  0.04913271]
352  r_total and score:  2941.6191799000276 1.6184240868724502
Current Bleu score is:  1.6184240868724502

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 12 12 12 12 12 12 12 12 12]] [['2', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 13  2  4 12 12 12 12 12]] [['8', '8', '1', '<s>', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.15344488 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  2 11  9  8  9  9  9  9]] [['5', '8', '<s>', '0', '2', '3', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097 -12.60327059  -0.06691772  -0.16480582
  -0.04847488  -0.08883709  -0.06728396  -0.05277534   0.44116294]
353  r_total and score:  3774.245563182751 2.224836575198833
Current Bleu score is:  2.224836575198833

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  2 12  2 10 12 12 12 12 12]] [['8', '<s>', '7', '<s>', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.71791485 -0.02796267 -0.0820684  -0.01200367 -0.00909141
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 2 2 9 9 8 9 9 9 9]] [['5', '<s>', '<s>', '2', '2', '3', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.1827983  -0.04964382 -0.0166192  -0.01200367  0.00353645
 -0.00848024 -0.00683352 -0.00562609  0.05842896]
354  r_total and score:  3440.9396765606352 2.142229386898003
Current Bleu score is:  2.142229386898003

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  2 13  2  2 12  8  9  9  9]] [['1', '<s>', '1', '<s>', '<s>', '7', '3', '2', '2', '2']] 

Reward:  [ 0.00091578  0.03427052 -0.00497254 -0.01459405 -0.00501939 -0.00102185
 -0.0008413   0.03643164 -0.00336999  0.04179882]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5  9  9 12  9  9  9  9]] [['5', '8', '5', '2', '2', '7', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
355  r_total and score:  5086.0470247444755 3.5630724534666594
Current Bleu score is:  3.5630724534666594

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 13  2  2 13  9  9  9  9]] [['8', '8', '1', '<s>', '<s>', '1', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.15344488 -0.05326709 -0.00909141
  0.00414762 -0.00683352 -0.00562609  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5  9  2 12  9  9  9  9]] [['5', '8', '5', '2', '<s>', '7', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -2.45698774
  -0.82252282  -0.59408945  -0.44995495  -0.35292995   2.95023436]
356  r_total and score:  6891.669107620929 4.249496508482307
Current Bleu score is:  4.249496508482307

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2  8 10 10 10 10 10 10 10 10]] [['<s>', '3', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  2 13  2  2  4 12  8  8 12]] [['1', '<s>', '1', '<s>', '<s>', '9', '7', '3', '3', '7']] 

Reward:  [ 0.00091578  0.03427052 -0.00497254 -0.01459405 -0.00501939  0.04326335
 -0.00473096 -0.00396389 -0.00336999  0.04179882]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  2  2  9  9 12  8  8  8  8]] [['5', '<s>', '<s>', '2', '2', '7', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.1827983  -0.04964382 -0.0166192  -0.01200367 -0.00909141
  0.00414762 -0.00683352 -0.00562609  0.05842896]
357  r_total and score:  5288.953816974864 3.5807846656567968
Current Bleu score is:  3.5807846656567968

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5  8 10 10 10 10 10 10 10 10]] [['5', '3', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  2 13  2  2 13 12 12 12 12]] [['1', '<s>', '1', '<s>', '<s>', '1', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.03427052 -0.00497254 -0.01459405 -0.00501939 -0.00102185
 -0.0008413  -0.00070489 -0.00059928  0.007433  ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  2  2  2 13 12  8  8  8  8]] [['5', '<s>', '<s>', '<s>', '1', '7', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.1827983  -0.04964382 -0.03771428 -0.007131   -0.00574628
  0.0045653  -0.00471389 -0.00400762  0.04970745]
358  r_total and score:  3894.590680512482 2.0795649880165885
Current Bleu score is:  2.0795649880165885

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12  9  9  9  9  9  9  9  9]] [['<s>', '7', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 13  2  2 13 12 12 12 12]] [['1', '8', '1', '<s>', '<s>', '1', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.05326709 -0.00909141
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  2  9  2 13  9  9  9  9]] [['5', '8', '<s>', '2', '<s>', '1', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097 -12.60327059  -0.06691772  -0.35621849
  -0.06079792  -0.0476879   -0.03842768  -0.03163782   0.3285702 ]
359  r_total and score:  3917.9805638286357 1.9221317957887885
Current Bleu score is:  1.9221317957887885

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 9 9 9 9 9 9 9 9 9]] [['<s>', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 13  2  2 13  4 10 10 10]] [['1', '8', '1', '<s>', '<s>', '1', '9', '8', '8', '8']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.05326709 -0.00909141
  0.00414762  0.28931946 -0.03163782  0.3285702 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  2  9  2 13  9  9  9  9]] [['5', '8', '<s>', '2', '<s>', '1', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097 -12.60327059  -0.06691772  -0.35621849
  -0.06079792  -0.0476879   -0.03842768  -0.03163782   0.3285702 ]
360  r_total and score:  4566.421010853413 2.404236814542051
Current Bleu score is:  2.404236814542051

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 9 9 9 9 9 9 9 9 9]] [['4', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9  2  4 13  9  9  9  9]] [['1', '8', '2', '<s>', '9', '1', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.69649546e+00
 -9.02848457e-02 -1.22995850e-01 -8.88370936e-02 -6.72839587e-02
 -5.27753378e-02  4.41162936e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  2  9  9 12  9  9  9  9]] [['5', '8', '<s>', '2', '2', '7', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097 -12.60327059  -0.06691772  -0.16480582
  -0.1111393   -0.08027338  -0.06079792  -0.0476879    0.39863571]
361  r_total and score:  4879.48491573351 3.015694315383916
Current Bleu score is:  3.015694315383916

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  7  9  2  2 12  9  9  9  9]] [['1', '4', '2', '<s>', '<s>', '7', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.15344488 -0.05326709 -0.00909141
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  2  9  9 12  9  9  9  9]] [['5', '8', '<s>', '2', '2', '7', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097 -12.60327059  -0.06691772  -0.16480582
  -0.1111393   -0.08027338  -0.06079792  -0.0476879    0.39863571]
362  r_total and score:  4276.255037142747 2.05054189127863
Current Bleu score is:  2.05054189127863

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 9 9 9 9 9 9 9 9 9]] [['<s>', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  7  9  2  2 12  9  9  9  9]] [['9', '4', '2', '<s>', '<s>', '7', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.20245757 -0.0633456  -0.01081157
 -0.00848024 -0.00683352 -0.00562609  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  2  9  9 12  9  9  9  9]] [['4', '4', '<s>', '2', '2', '7', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.16351292 -0.01000653 -0.02464422 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]
363  r_total and score:  3505.7097435736996 2.1731405090029186
Current Bleu score is:  2.1731405090029186
EPOCH %d 12
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 9 9 9 9 9 9 9 9 9]] [['4', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  2  2 13  9  9  9  9]] [['9', '8', '2', '<s>', '<s>', '1', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -44.95228086  -2.63631177
  -0.44995495  -0.35292995  -0.28439668  -0.2341461    2.43169158]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  2 11  8 12  9  9  9  9]] [['4', '8', '<s>', '0', '3', '7', '2', '2', '2', '2']] 

Reward:  [ 0.33689735  0.09107039 -0.26254192 -0.01189984 -0.01605517 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]
364  r_total and score:  5008.364765748569 3.5167869438292256
Current Bleu score is:  3.5167869438292256

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 9 9 9 9 9 9 9 9 9]] [['<s>', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  2  2 13  9  9  9  9]] [['9', '8', '2', '<s>', '<s>', '1', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -44.95228086  -2.63631177
  -0.44995495  -0.35292995  -0.28439668  -0.2341461    2.43169158]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  2 11  8 13  9  9  9  9]] [['5', '8', '<s>', '0', '3', '1', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097 -12.60327059  -0.06691772  -0.09028485
  -0.12299585  -0.08883709  -0.06728396  -0.05277534   0.44116294]
365  r_total and score:  4426.28256208671 1.9033770479196601
Current Bleu score is:  1.9033770479196601

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  2  2 13  9  9  9  9]] [['9', '8', '2', '<s>', '<s>', '1', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -44.95228086  -2.63631177
  -0.44995495  -0.35292995  -0.28439668  -0.2341461    2.43169158]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  2 11  8 13  9  9  9  9]] [['5', '8', '<s>', '0', '3', '1', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097 -12.60327059  -0.06691772  -0.09028485
  -0.12299585  -0.08883709  -0.06728396  -0.05277534   0.44116294]
366  r_total and score:  4564.412686772043 3.0129777156399986
Current Bleu score is:  3.0129777156399986

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 2 11  9  2  2 13  9  9  9  9]] [['<s>', '0', '2', '<s>', '<s>', '1', '2', '2', '2', '2']] 

Reward:  [ 0.01412722  0.02105908  0.13471813 -0.0820684  -0.02822608 -0.00574628
 -0.00473096 -0.00396389 -0.00336999  0.04179882]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  8 13  9  9  9  9]] [['5', '8', '5', '0', '3', '1', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.22865179
  -0.53217701  -1.31065241  -0.88385829  -0.63839066   4.03298912]
367  r_total and score:  4762.951987029905 3.318886258718782
Current Bleu score is:  3.318886258718782

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  2  4 13  9  9  9  9]] [['9', '8', '2', '<s>', '9', '1', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -44.95228086  -0.83419297
  -0.88385829  -0.63839066  -0.48350806  -0.37924792   3.17023314]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  4 13  9  9  9  9]] [['5', '8', '5', '0', '9', '1', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
368  r_total and score:  5975.342785817464 4.286437794426879
Current Bleu score is:  4.286437794426879

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  2  4 12  9  9  9  9]] [['9', '8', '2', '<s>', '9', '7', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -44.95228086  -0.83419297
  -0.88385829  -0.63839066  -0.48350806  -0.37924792   3.17023314]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  2 11  8 12  9  9  9  9]] [['5', '8', '<s>', '0', '3', '7', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097 -12.60327059  -0.06691772  -0.09028485
  -0.12299585  -0.08883709  -0.06728396  -0.05277534   0.44116294]
369  r_total and score:  5279.1921721139 3.147411747715343
Current Bleu score is:  3.147411747715343

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 7 9 9 9 9 9 9 9 9]] [['5', '4', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  9  2  2  4  9  9  9  9]] [['7', '8', '2', '<s>', '<s>', '9', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.69649546e+00
 -3.56218488e-01 -1.31832600e-02 -5.27753378e-02 -4.25272231e-02
 -3.50130082e-02  3.63622705e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  2 11  9  4  7  7  7  7]] [['5', '8', '<s>', '0', '2', '9', '4', '4', '4', '4']] 

Reward:  [  0.33689735  13.19663097 -12.60327059  -0.06691772  -0.16480582
  -0.1111393   -0.02617268  -0.06728396  -0.05277534   0.44116294]
370  r_total and score:  4670.664778239229 3.493997487438328
Current Bleu score is:  3.493997487438328

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  9 10  9  9  9  9  9]] [['9', '8', '2', '2', '8', '2', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -1.38393724
  -2.01953311  -1.2196995   -0.82252282  -0.59408945   3.75311927]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  9 11  9  4  9  9  9  9]] [['5', '8', '2', '0', '2', '9', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.06691772  -0.16480582  -0.1111393   -0.08027338   0.50712153]
371  r_total and score:  5479.20324673874 4.012059379862798
Current Bleu score is:  4.012059379862798

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  9  9 10  4  9  9  9  9]] [['6', '8', '2', '2', '8', '9', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -1.80776574e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  9 11  9  4  9  9  9  9]] [['2', '8', '2', '0', '2', '9', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
372  r_total and score:  5186.186368647435 3.8001278668996736
Current Bleu score is:  3.8001278668996736

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  8  9 10  4  9  9  9  9]] [['6', '8', '3', '2', '8', '9', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.03214713
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  9 11  8  4  9  9  9  9]] [['5', '8', '2', '0', '3', '9', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.09827947e+01 -1.52021115e+00
 -1.02300788e-03 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
373  r_total and score:  4172.310798950319 1.7807056813217215
Current Bleu score is:  1.7807056813217215

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 10  9  9  9  9  9  9  9  9]] [['2', '8', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  8  9 10  4  9  9  9  9]] [['6', '8', '3', '2', '8', '9', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.03214713
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  9 11  9  4  9  9  9  9]] [['2', '8', '2', '0', '2', '9', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
374  r_total and score:  2044.154901959074 1.2359309170224468
Current Bleu score is:  1.2359309170224468

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 10 13 11  9 11 11 11 11 11]] [['4', '8', '1', '0', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  8  9  4 10  9  9  9  9]] [['8', '8', '3', '2', '9', '8', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.04723938 -0.01169815  0.73183599
  4.21428875 -0.82252282 -0.59408945  3.75311927]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10 12  9  5  4  9  9  9  9]] [['4', '8', '7', '2', '5', '9', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
375  r_total and score:  1791.6505194835765 1.2673146860638715
Current Bleu score is:  1.2673146860638715

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 10  7  9  9  9  9  9  9  9]] [['4', '8', '4', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  8  9  4  4  9  9  9  9]] [['7', '8', '3', '2', '9', '9', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.01169815 -0.04103261
 -0.03485219 -0.0235031  -0.01697575  0.10724315]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  9 11 10  4  9  9  9  9]] [['4', '8', '2', '0', '8', '9', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
376  r_total and score:  1691.4517992073136 1.3512001548070343
Current Bleu score is:  1.3512001548070343

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12  9  9  9  9  9  9  9]] [['4', '7', '7', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  9  9 10  4  9  9  9  9]] [['7', '8', '2', '2', '8', '9', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -1.80776574e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  9  9  5 12 12  9  9  9]] [['4', '8', '2', '2', '5', '7', '7', '2', '2', '2']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
377  r_total and score:  2277.734787424273 2.2290472692583148
Current Bleu score is:  2.2290472692583148

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12  9  9  9  9  9  9  9  9]] [['4', '7', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  9  9  4  4  9  9  9  9]] [['7', '8', '2', '2', '9', '9', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -2.30743334e-01 -1.95988249e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10 12  9  9  4 12  9  9  9]] [['4', '8', '7', '2', '2', '9', '7', '2', '2', '2']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
378  r_total and score:  3537.47915791505 2.898044272867765
Current Bleu score is:  2.898044272867765

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  9  2  4  4  9  9  9  9]] [['7', '8', '2', '<s>', '9', '9', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.69649546e+00
 -9.02848457e-02 -7.45209700e-02 -9.54616696e-02 -7.23013189e-02
 -5.67107911e-02  4.74060426e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  2  9  9  4  9  9  9  9]] [['5', '8', '<s>', '2', '2', '9', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097 -12.60327059  -0.06691772  -0.16480582
  -0.1111393   -0.08027338  -0.06079792  -0.0476879    0.39863571]
379  r_total and score:  3062.289652831832 2.6040940849656287
Current Bleu score is:  2.6040940849656287

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  9  9  4  4  9  9  9  9]] [['7', '8', '2', '2', '9', '9', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -2.30743334e-01 -1.95988249e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  9 13 10  4  9  9  9  9]] [['5', '8', '2', '1', '8', '9', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.09827947e+01 -1.52021115e+00
 -1.02300788e-03 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
380  r_total and score:  2551.8507553332965 1.9443333238082536
Current Bleu score is:  1.9443333238082536

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  9  9  4  4  9  9  9  9]] [['7', '8', '2', '2', '9', '9', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -2.30743334e-01 -1.95988249e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  9 13 10  4  8  8  8  8]] [['5', '8', '2', '1', '8', '9', '3', '3', '3', '3']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.09827947e+01 -1.52021115e+00
 -1.02300788e-03 -7.40566266e-02 -1.24740945e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]
381  r_total and score:  2896.536910867673 2.0968950027976216
Current Bleu score is:  2.0968950027976216

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  9  9  4  4  9  9  9  9]] [['7', '8', '2', '2', '9', '9', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -2.30743334e-01 -1.95988249e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  9 13 10  4  9  9  9  9]] [['5', '8', '2', '1', '8', '9', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.09827947e+01 -1.52021115e+00
 -1.02300788e-03 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
382  r_total and score:  2515.683384696846 1.872311713729663
Current Bleu score is:  1.872311713729663

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  9  9  4  4  9  9  9  9]] [['7', '8', '2', '2', '9', '9', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -2.30743334e-01 -1.95988249e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  9 13 10  4  9  9  9  9]] [['2', '8', '2', '1', '8', '9', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
383  r_total and score:  2421.811256144361 2.6123912225481076
Current Bleu score is:  2.6123912225481076

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  9  9 10  4  9  9  9  9]] [['7', '8', '2', '2', '8', '9', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -1.80776574e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  9 13 10  4  9  9  9  9]] [['2', '8', '2', '1', '8', '9', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
384  r_total and score:  4303.958968621499 3.418385463190382
Current Bleu score is:  3.418385463190382

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10 12  9 10  4  9  9  9  9]] [['7', '8', '7', '2', '8', '9', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.03214713
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  9 13 10  4  9  9  9  9]] [['2', '8', '2', '1', '8', '9', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
385  r_total and score:  2716.1337981317693 1.6202697257523957
Current Bleu score is:  1.6202697257523957

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 12 12 12 12 12 12 12 12 12]] [['2', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10 12  9 10  4 12 12 12 12]] [['7', '8', '7', '2', '8', '9', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.03214713
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  9 11 10  4 12 12 12 12]] [['2', '8', '2', '0', '8', '9', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
386  r_total and score:  3185.0290687974502 1.4678995259990841
Current Bleu score is:  1.4678995259990841

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10 12  9  4  4  9  9  9  9]] [['7', '8', '7', '2', '9', '9', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.01169815 -0.04103261
 -0.03485219 -0.0235031  -0.01697575  0.10724315]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  9 11  6  4  9  9  9  9]] [['2', '8', '2', '0', '6', '9', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
387  r_total and score:  2677.322703920475 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 12  9  4  9  9  9  9  9]] [['1', '8', '7', '2', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  9 11  6  4  9  9  9  9]] [['2', '8', '2', '0', '6', '9', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
388  r_total and score:  2406.2974926142765 1.6430100038297182
Current Bleu score is:  1.6430100038297182

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9  9  4  9  9  9  9  9]] [['1', '8', '2', '2', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  9 11  6  4  9  9  9  9]] [['2', '8', '2', '0', '6', '9', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
389  r_total and score:  4099.18707340927 2.6514377729939413
Current Bleu score is:  2.6514377729939413

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  9  4  9  9  9  9  9]] [['9', '8', '2', '2', '9', '2', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -0.75688136
  -2.17012956  -1.31065241  -0.88385829  -0.63839066   4.03298912]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  9 11  9  4  9  9  9  9]] [['2', '8', '2', '0', '2', '9', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
390  r_total and score:  4886.105529399946 3.760445691892067
Current Bleu score is:  3.760445691892067

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9  9  4  9  9  9  9  9]] [['1', '8', '2', '2', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  9 11  9  4  9  9  9  9]] [['2', '8', '2', '0', '2', '9', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
391  r_total and score:  5472.029267988804 4.010263167042132
Current Bleu score is:  4.010263167042132

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  9  4  9  9  9  9  9]] [['9', '8', '2', '2', '9', '2', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -0.75688136
  -2.17012956  -1.31065241  -0.88385829  -0.63839066   4.03298912]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  9 11  9  4  9  9  9  9]] [['2', '8', '2', '0', '2', '9', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
392  r_total and score:  4845.289923017595 3.615274369161777
Current Bleu score is:  3.615274369161777

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  9  5  4  9  9  9  9  9]] [['8', '8', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [  0.91578194  -0.41684774   3.06090127   6.23306592  57.0811291
 -16.06075568  -9.69991313  -6.54128323  -4.7246195   29.84745896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  9  4  9  9  9  9]] [['5', '8', '5', '0', '2', '9', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
393  r_total and score:  5105.717390193488 4.623348272616752
Current Bleu score is:  4.623348272616752

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 12  5  4  9  9  9  9  9]] [['8', '8', '7', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.04723938  1.02212848 -0.23074333
 -0.19598825 -0.13216764 -0.09546167  0.60307254]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  9  4  9  9  9  9]] [['5', '8', '5', '0', '2', '9', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
394  r_total and score:  4193.031273305055 3.683941589438977
Current Bleu score is:  3.683941589438977

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 12  2  4  9  9  9  9  9]] [['8', '8', '7', '<s>', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.15344488 -0.00488055 -0.00862019
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2 10  2 11  8  4  9  9  9  9]] [['<s>', '8', '<s>', '0', '3', '9', '2', '2', '2', '2']] 

Reward:  [ 0.01012259  0.14397645 -0.04964382 -0.0166192   0.00234435 -0.01081157
 -0.00848024 -0.00683352 -0.00562609  0.05842896]
395  r_total and score:  3609.137015597386 2.2447146236116846
Current Bleu score is:  2.2447146236116846

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 12  2  6  9  9  9  9  9]] [['8', '8', '7', '<s>', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.15344488 -0.02464422  0.
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2 10  2 11  8  4  9  9  9  9]] [['<s>', '8', '<s>', '0', '3', '9', '2', '2', '2', '2']] 

Reward:  [ 0.01012259  0.14397645 -0.04964382 -0.0166192   0.00234435 -0.01081157
 -0.00848024 -0.00683352 -0.00562609  0.05842896]
396  r_total and score:  4289.464269983623 2.855777453459647
Current Bleu score is:  2.855777453459647

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 8 8 8 8 8 8 8 8 8]] [['2', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  8  2  2  8  8  8  8  8]] [['8', '8', '3', '<s>', '<s>', '3', '3', '3', '3', '3']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.15344488 -0.05326709 -0.00909141
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  5 11  9  9  8  8  8  8]] [['2', '8', '5', '0', '2', '2', '3', '3', '3', '3']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.52021115e+00
 -1.00264689e-01 -6.69177162e-02 -9.02848457e-02 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
397  r_total and score:  4278.265069725125 3.2956238382966747
Current Bleu score is:  3.2956238382966747
EPOCH %d 13
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  8  2  6  9  9  9  9  9]] [['3', '8', '3', '<s>', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.02464422  0.
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2  7  2 11 13  4  9  9  9  9]] [['<s>', '4', '<s>', '0', '1', '9', '2', '2', '2', '2']] 

Reward:  [ 0.01012259  0.14397645 -0.04964382 -0.0166192  -0.01200367 -0.00909141
 -0.007131   -0.00574628 -0.00473096  0.04913271]
398  r_total and score:  3654.301575748245 2.8204523198147955
Current Bleu score is:  2.8204523198147955

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 9 9 9 9 9 9 9 9 9]] [['<s>', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  2  2  9  9  9  9  9]] [['3', '8', '2', '<s>', '<s>', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.69649546e+00
 -3.56218488e-01 -6.07979199e-02 -4.76879010e-02 -3.84276840e-02
 -3.16378243e-02  3.28570204e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2  7  2  8 11  9  9  9  9  9]] [['<s>', '4', '<s>', '3', '0', '2', '2', '2', '2', '2']] 

Reward:  [ 0.01012259  0.14397645 -0.04964382  0.         -0.01427485 -0.01081157
 -0.00848024 -0.00683352 -0.00562609  0.05842896]
399  r_total and score:  3836.0639542810345 2.770386383973249
Current Bleu score is:  2.770386383973249

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  8  2  6  9  9  9  9  9]] [['3', '8', '3', '<s>', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.02464422  0.
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  7  2  8 11  9  9  9  9  9]] [['2', '4', '<s>', '3', '0', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.16351292  0.01442    -0.02930708 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
400  r_total and score:  3423.8340037278012 1.900475069237923
Current Bleu score is:  1.900475069237923

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 9 9 9 9 9 9 9 9 9]] [['<s>', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  8  2  2  9  9  9  9  9]] [['3', '8', '3', '<s>', '<s>', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.05326709  0.00353645
 -0.00848024 -0.00683352 -0.00562609  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2 10  2  8  8  9  9  9  9  9]] [['<s>', '8', '<s>', '3', '3', '2', '2', '2', '2', '2']] 

Reward:  [ 0.01012259  0.14397645 -0.04964382  0.         -0.01427485 -0.01081157
 -0.00848024 -0.00683352 -0.00562609  0.05842896]
401  r_total and score:  2528.1854545854862 1.3765837433333699
Current Bleu score is:  1.3765837433333699

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 9 9 9 9 9 9 9 9 9]] [['<s>', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  6  8  2  6  9  9  9  9  9]] [['8', '6', '3', '<s>', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.15344488 -0.02464422  0.
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[2 6 2 8 9 9 9 9 9 9]] [['<s>', '6', '<s>', '3', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.01012259  0.01728052 -0.00882806  0.06926097 -0.01200367 -0.00909141
 -0.007131   -0.00574628 -0.00473096  0.04913271]
402  r_total and score:  2578.9753938781123 1.678911275483288
Current Bleu score is:  1.678911275483288

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 7 7 7 7 7 7 7 7 7]] [['<s>', '4', '4', '4', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  6 12  2  6 12  7  7  7  7]] [['8', '6', '7', '<s>', '6', '7', '4', '4', '4', '4']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.15344488 -0.02464422 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 6 5 8 9 7 7 7 7 7]] [['5', '6', '5', '3', '2', '4', '4', '4', '4', '4']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.00049958
 -0.03485219 -0.0235031  -0.01697575  0.10724315]
403  r_total and score:  1524.7737056388082 1.1295541353722454
Current Bleu score is:  1.1295541353722454

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 7 7 7 7 7 7 7 7 7]] [['<s>', '4', '4', '4', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  6  8  2  2  8  7  7  7  7]] [['8', '6', '3', '<s>', '<s>', '3', '4', '4', '4', '4']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.15344488 -0.05326709 -0.00909141
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[2 6 2 8 8 7 7 7 7 7]] [['<s>', '6', '<s>', '3', '3', '4', '4', '4', '4', '4']] 

Reward:  [ 0.01012259  0.01728052 -0.00882806  0.06926097 -0.01200367  0.00353645
 -0.00848024 -0.00683352 -0.00562609  0.05842896]
404  r_total and score:  1719.383102438795 1.1454211874741842
Current Bleu score is:  1.1454211874741842

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 7 7 7 7 7 7 7 7 7]] [['<s>', '4', '4', '4', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 6 8 2 2 8 7 7 7 7]] [['3', '6', '3', '<s>', '<s>', '3', '4', '4', '4', '4']] 

Reward:  [ 0.00091578  0.0148619   0.01247675 -0.00529694 -0.00947238 -0.00161671
 -0.00126809 -0.00102185 -0.0008413   0.00873717]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2  6  2 11  8  7  7  7  7  7]] [['<s>', '6', '<s>', '0', '3', '4', '4', '4', '4', '4']] 

Reward:  [ 0.01012259  0.01728052 -0.00882806 -0.00295536  0.06021266  0.00353645
 -0.00848024 -0.00683352 -0.00562609  0.05842896]
405  r_total and score:  1902.4602416192884 1.517504261342224
Current Bleu score is:  1.517504261342224

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 8 8 8 8 8 8 8 8 8]] [['5', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 6 8 5 2 8 8 8 8 8]] [['3', '6', '3', '5', '<s>', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.16961266 -0.09341186 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2  6  5 11  8  8  8  8  8  8]] [['<s>', '6', '5', '0', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.01012259  0.01728052  0.11170286 -0.01000653 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
406  r_total and score:  1695.319750126935 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  6  8  2  2  9  9  9  9  9]] [['0', '6', '3', '<s>', '<s>', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.01247675 -0.00529694 -0.00947238  0.05325584
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  6  5 11  8  9  9  9  9  9]] [['5', '6', '5', '0', '3', '2', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
407  r_total and score:  1541.6592343573554 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  6 13  2  6  9  9  9  9  9]] [['0', '6', '1', '<s>', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.01247675 -0.00529694 -0.00438243  0.06926097
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  6  5  8 12  9  9  9  9  9]] [['5', '6', '5', '3', '7', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
408  r_total and score:  1825.2343012377382 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 9 9 9 9 9 9 9 9 9]] [['3', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  6  8  2  2  9  9  9  9  9]] [['8', '6', '3', '<s>', '<s>', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.15344488 -0.05326709  0.00353645
 -0.00848024 -0.00683352 -0.00562609  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 6 8 8 6 9 9 9 9 9]] [['3', '6', '3', '3', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
409  r_total and score:  1540.4505480567107 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 9 9 9 9 9 9 9 9 9]] [['3', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  6  9  2  6  9  9  9  9  9]] [['8', '6', '2', '<s>', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.20245757 -0.02930708 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 6 8 8 6 9 9 9 9 9]] [['3', '6', '3', '3', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
410  r_total and score:  1405.0751143905225 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 9 9 9 9 9 9 9 9 9]] [['3', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 6 8 8 6 9 9 9 9 9]] [['3', '6', '3', '3', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254  0.09888569
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 6 8 8 6 9 9 9 9 9]] [['3', '6', '3', '3', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
411  r_total and score:  1057.6601264516405 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 9 9 9 9 9 9 9 9 9]] [['3', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 6 9 8 6 9 9 9 9 9]] [['3', '6', '2', '3', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 6 8 8 6 9 9 9 9 9]] [['3', '6', '3', '3', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
412  r_total and score:  934.8259861810876 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 9 9 9 9 9 9 9 9 9]] [['3', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 6 9 8 6 9 9 9 9 9]] [['3', '6', '2', '3', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 6 8 8 9 9 9 9 9 9]] [['3', '6', '3', '3', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
413  r_total and score:  1172.8036583941034 0.8055718664079086
Current Bleu score is:  0.8055718664079086

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 9 9 9 9 9 9 9 9 9]] [['3', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 6 9 5 6 9 9 9 9 9]] [['3', '6', '2', '5', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01  1.04067266e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8  6  5 11  9  9  9  9  9  9]] [['3', '6', '5', '0', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
414  r_total and score:  1169.7634427812438 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 9 9 9 9 9 9 9 9 9]] [['3', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  8  6  9  9  9  9  9]] [['3', '8', '2', '3', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8  6  5 11  9  9  9  9  9  9]] [['3', '6', '5', '0', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
415  r_total and score:  1203.9267282142794 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9 12 10  9  9  9  9  9]] [['3', '8', '2', '7', '8', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10  5 11  4  9  9  9  9  9]] [['7', '8', '5', '0', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.52021115e+00
 -1.00264689e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
416  r_total and score:  1885.7105984482284 1.3306805702620677
Current Bleu score is:  1.3306805702620677

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 9 9 9 9 9 9 9 9 9]] [['3', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  9 12  4  9  9  9  9  9]] [['8', '8', '2', '7', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774  3.06090127 -2.23661849 -0.06578356 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8  6 12 11  9  9  9  9  9  9]] [['3', '6', '7', '0', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
417  r_total and score:  1634.455385371369 1.1591012925820345
Current Bleu score is:  1.1591012925820345

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  9 12  4  9  9  9  9  9]] [['8', '8', '2', '7', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774  3.06090127 -2.23661849 -0.06578356 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  6 12  4  9  9  9  9  9  9]] [['7', '6', '7', '9', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
418  r_total and score:  2180.869570893437 1.139019954351849
Current Bleu score is:  1.139019954351849

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  9 12  4  9  9  9  9  9]] [['8', '8', '2', '7', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774  3.06090127 -2.23661849 -0.06578356 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2 12 12  4  9  9  9  9  9  9]] [['<s>', '7', '7', '9', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.01012259  0.01728052 -0.00266619 -0.00177944 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]
419  r_total and score:  2159.67294600319 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 9 9 9 9 9 9 9 9 9]] [['<s>', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  6  9 12  4  9  9  9  9  9]] [['8', '6', '2', '7', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2 13  2 11  9  9  9  9  9  9]] [['<s>', '1', '<s>', '0', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.01012259  0.01728052 -0.00882806 -0.00295536 -0.00213459 -0.00161671
 -0.00126809 -0.00102185 -0.0008413   0.00873717]
420  r_total and score:  1622.6228827863852 0.8357395580721756
Current Bleu score is:  0.8357395580721756

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  6 13 12  4  9  9  9  9  9]] [['8', '6', '1', '7', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.03214713
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  6 12  4  9  9  9  9  9  9]] [['7', '6', '7', '9', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
421  r_total and score:  1450.325806252512 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 13 12  4  9  9  9  9  9]] [['8', '8', '1', '7', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.03214713
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  6 12  4  9  9  9  9  9  9]] [['7', '6', '7', '9', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
422  r_total and score:  1313.8656509102882 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  9 12 10  9  9  9  9  9]] [['8', '8', '2', '7', '8', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774  3.06090127 -2.23661849 -0.18699762 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  6 12  4  9  9  9  9  9  9]] [['7', '6', '7', '9', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
423  r_total and score:  1654.8974175512037 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  9 12 10  7  9  9  9  9]] [['8', '8', '2', '7', '8', '4', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774  3.06090127 -2.23661849 -0.18699762 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  4  6  9  9  9  9  9]] [['7', '8', '7', '9', '6', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
424  r_total and score:  2480.3194076442273 2.061399937217602
Current Bleu score is:  2.061399937217602

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 11 12 10 11 11 11 11 11]] [['8', '8', '0', '7', '8', '0', '0', '0', '0', '0']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  4  6 11 11 11 11 11]] [['7', '8', '7', '9', '6', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
425  r_total and score:  2480.008177413971 1.539362465953209
Current Bleu score is:  1.539362465953209

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 11 12 10  5 11 11 11 11]] [['8', '8', '0', '7', '8', '5', '0', '0', '0', '0']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.01637845
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 11  9 11 11 11 11 11]] [['7', '8', '7', '0', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
426  r_total and score:  2331.6173552562523 1.1833237421784648
Current Bleu score is:  1.1833237421784648

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 11 12 10 11 11 11 11 11]] [['3', '8', '0', '7', '8', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 11  9 11 11 11 11 11]] [['7', '8', '7', '0', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
427  r_total and score:  2888.2151166570407 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 11 12 10 11 11 11 11 11]] [['3', '8', '0', '7', '8', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10 12 11  9 11 11 11 11 11]] [['3', '8', '7', '0', '2', '0', '0', '0', '0', '0']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.06691772  -0.16480582  -0.1111393   -0.08027338   0.50712153]
428  r_total and score:  1578.9377166240447 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  8  5 10  5  5 11 11 11]] [['3', '8', '3', '5', '8', '5', '5', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  5 11  9  5  5  5  5  5]] [['3', '8', '5', '0', '2', '5', '5', '5', '5', '5']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -9.85473391e+00 -2.32255063e+00
 -1.31955752e-01 -3.34086660e-03 -2.33070620e-01 -1.57174700e-01
 -1.13523697e-01  7.17178151e-01]
429  r_total and score:  2804.217265953926 1.267278129436687
Current Bleu score is:  1.267278129436687

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  8  5 10  5  8  8  8  8]] [['3', '8', '3', '5', '8', '5', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8  8  5 11  9  5  5  5  5  5]] [['3', '3', '5', '0', '2', '5', '5', '5', '5', '5']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
430  r_total and score:  1736.6980814630608 1.1040374995624413
Current Bleu score is:  1.1040374995624413
EPOCH %d 14
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  9  5  4  5  9  9  9  9]] [['5', '8', '2', '5', '9', '5', '2', '2', '2', '2']] 

Reward:  [  0.91578194  -0.21018242   3.36939485   5.71790702  57.0811291
 -16.06075568  -9.69991313  -6.54128323  -4.7246195   29.84745896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10  5  4  4  5  5  5  5  5]] [['7', '8', '5', '9', '9', '5', '5', '5', '5', '5']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.52021115e+00
 -1.00264689e-01  2.51850546e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
431  r_total and score:  3687.6174125480356 1.9240010196605708
Current Bleu score is:  1.9240010196605708

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 11 11 11 11 11 11 11 11 11]] [['5', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  9  5  4  5 11 11 11 11]] [['5', '8', '2', '5', '9', '5', '0', '0', '0', '0']] 

Reward:  [  0.91578194  -0.21018242   3.36939485   5.71790702  57.0811291
 -16.06075568  -9.69991313  -6.54128323  -4.7246195   29.84745896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  5  4  8  5  5  5  5  5]] [['4', '8', '5', '9', '3', '5', '5', '5', '5', '5']] 

Reward:  [ 0.33689735  0.09107039  2.49189332 -1.77940052 -0.03419142 -0.02067652
 -0.20723234 -0.13975027 -0.10093843  0.63767157]
432  r_total and score:  2834.2377540217863 1.9357740551657503
Current Bleu score is:  1.9357740551657503

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 9 9 9 9 9 9 9 9 9]] [['3', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  5 10  5  9  9  9  9]] [['3', '8', '2', '5', '8', '5', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  5  4  9  5  5  9  9  9]] [['3', '8', '5', '9', '2', '5', '5', '2', '2', '2']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -9.85473391e+00 -2.32255063e+00
 -1.31955752e-01 -3.34086660e-03 -2.33070620e-01 -1.57174700e-01
 -1.13523697e-01  7.17178151e-01]
433  r_total and score:  4467.218336010225 3.2056716725178296
Current Bleu score is:  3.2056716725178296

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 9 9 9 9 9 9 9 9 9]] [['3', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  5 10  5  9  9  9  9]] [['3', '8', '2', '5', '8', '5', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  5  4  9  5  9  9  9  9]] [['3', '8', '5', '9', '2', '5', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -9.85473391e+00 -2.32255063e+00
 -1.31955752e-01 -3.34086660e-03 -2.33070620e-01 -1.57174700e-01
 -1.13523697e-01  7.17178151e-01]
434  r_total and score:  3355.0084772833425 2.4496491992005702
Current Bleu score is:  2.4496491992005702

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  5  4  9  9  9  9  9]] [['3', '8', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
  5.70811291e+01 -1.60607557e+01 -9.69991313e+00 -6.54128323e+00
 -4.72461950e+00  2.98474590e+01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  5  4  8  9  9  9  9  9]] [['2', '8', '5', '9', '3', '2', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.52021115e+00
 -1.02300788e-03 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
435  r_total and score:  4273.570875058524 3.095637415403065
Current Bleu score is:  3.095637415403065

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  9  5 10  5  9  9  9  9]] [['8', '8', '2', '5', '8', '5', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774  3.06090127  6.23306592 -1.38393724 -2.01953311
 -1.2196995  -0.82252282 -0.59408945  3.75311927]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  5  4  8  9  9  9  9  9]] [['2', '8', '5', '9', '3', '2', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.52021115e+00
 -1.02300788e-03 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
436  r_total and score:  3738.714859775173 2.5909028660275935
Current Bleu score is:  2.5909028660275935

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 11  5 10  9 11 11 11 11]] [['3', '8', '0', '5', '8', '2', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534   0.75339124
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  5  4  8 11 11 11 11 11]] [['4', '8', '5', '9', '3', '0', '0', '0', '0', '0']] 

Reward:  [ 0.33689735  0.09107039  2.49189332 -1.77940052 -0.03419142 -0.07957902
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
437  r_total and score:  2584.7351385052916 2.253336193935001
Current Bleu score is:  2.253336193935001

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  5 10  9  9  9  9  9]] [['3', '8', '2', '5', '8', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10  5  4  8 11  9  9  9  9]] [['7', '8', '5', '9', '3', '0', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.52021115e+00
 -1.02300788e-03 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
438  r_total and score:  3711.3585416807127 3.0804578975254113
Current Bleu score is:  3.0804578975254113

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  5  4  9  9  9  9  9]] [['3', '8', '2', '5', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
  5.70811291e+01 -1.60607557e+01 -9.69991313e+00 -6.54128323e+00
 -4.72461950e+00  2.98474590e+01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5  8  8 11  9  9  9  9]] [['5', '8', '5', '3', '3', '0', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -28.5925009   -0.79737572
  -0.53217701  -1.31065241  -0.88385829  -0.63839066   4.03298912]
439  r_total and score:  3380.084684533548 3.0152384395831255
Current Bleu score is:  3.0152384395831255

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  5  9  9  9  9  9  9]] [['3', '8', '2', '5', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10  5  8  8 11  9  9  9  9]] [['7', '8', '5', '3', '3', '0', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.41027304e+00
 -1.10961119e-01 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
440  r_total and score:  3912.9262267285103 2.938776191255617
Current Bleu score is:  2.938776191255617

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  5  9  9  9  9  9  9]] [['3', '8', '2', '5', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10  5  8  9 11  9  9  9  9]] [['7', '8', '5', '3', '2', '0', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.41027304e+00
 -1.10961119e-01 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
441  r_total and score:  4273.602266967711 3.1329110199466905
Current Bleu score is:  3.1329110199466905

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9 12  9  9  9  9  9  9]] [['3', '8', '2', '7', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  8  9  9  9  9  9  9]] [['7', '8', '7', '3', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
442  r_total and score:  2848.2862298247205 1.5146484407768186
Current Bleu score is:  1.5146484407768186

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  5  9  9  9  9  9  9]] [['3', '8', '2', '5', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  8  9  9  9  9  9  9]] [['7', '8', '7', '3', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
443  r_total and score:  3753.025750688701 2.6522237856278044
Current Bleu score is:  2.6522237856278044

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9 12  9  9  9  9  9  9]] [['3', '8', '2', '7', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  8  9  9  9  9  9  9]] [['7', '8', '7', '3', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
444  r_total and score:  3677.96394820667 2.6641612050954495
Current Bleu score is:  2.6641612050954495

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  5  9 12  9  9  9  9]] [['3', '8', '2', '5', '2', '7', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  8  9  9  9  9  9  9]] [['7', '8', '7', '3', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
445  r_total and score:  2988.9447123436375 2.6280174214251257
Current Bleu score is:  2.6280174214251257

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  8  8  8  8  8  8  8  8  8]] [['7', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  5  9 12  8  8  8  8]] [['3', '8', '2', '5', '2', '7', '3', '3', '3', '3']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  5  8  9  8  8  8  8  8]] [['3', '8', '5', '3', '2', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 13.19663097 -9.85473391 -2.32255063 -0.13195575 -0.08806867
 -0.21689665 -0.14626754 -0.1056457   0.66740947]
446  r_total and score:  2366.878576356087 1.8448702492369584
Current Bleu score is:  1.8448702492369584

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  8  8  8  8  8  8  8  8  8]] [['7', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  5  9 12  8  8  8  8]] [['3', '8', '2', '5', '2', '7', '3', '3', '3', '3']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10  5  8  9  9  8  8  8  8]] [['7', '8', '5', '3', '2', '2', '3', '3', '3', '3']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.41027304e+00
 -1.10961119e-01 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
447  r_total and score:  2051.1015379076193 2.1069900017060044
Current Bleu score is:  2.1069900017060044

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 11 12  9  5 11 11 11 11]] [['3', '8', '0', '7', '2', '5', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446  0.75339124
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  8  9 11 11 11 11 11]] [['7', '8', '7', '3', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
448  r_total and score:  1451.2756354767832 0.9917130333855674
Current Bleu score is:  0.9917130333855674

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 11 12  9  5  9  9  9  9]] [['3', '8', '0', '7', '2', '5', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446  0.75339124
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  8  9  9  9  9  9  9]] [['7', '8', '7', '3', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
449  r_total and score:  1643.4417448733263 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9 12  9  5  9  9  9  9]] [['3', '8', '2', '7', '2', '5', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01  0.00000000e+00 -2.16896651e-01 -1.46267540e-01
 -1.05645704e-01  6.67409472e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  8  9  9  9  9  9  9]] [['7', '8', '7', '3', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
450  r_total and score:  2139.9217607018236 1.3514514240238096
Current Bleu score is:  1.3514514240238096

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  4  9 12  9  9  9  9  9  9]] [['3', '9', '2', '7', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  8  9  9  9  9  9  9]] [['7', '9', '7', '3', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
451  r_total and score:  2048.380530412582 1.4946389866843168
Current Bleu score is:  1.4946389866843168

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9 12  9  9  9  9  9  9]] [['3', '8', '2', '7', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  8  9  9  9  9  9  9]] [['7', '8', '7', '3', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
452  r_total and score:  2205.947710393869 1.5103638757812843
Current Bleu score is:  1.5103638757812843

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9 12  9  5  9  9  9  9]] [['3', '8', '2', '7', '2', '5', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01  0.00000000e+00 -2.16896651e-01 -1.46267540e-01
 -1.05645704e-01  6.67409472e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  8  9  9  9  9  9  9]] [['7', '8', '7', '3', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
453  r_total and score:  2160.356107493634 1.4419549446055935
Current Bleu score is:  1.4419549446055935

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  4  9 12  4  9  9  9  9  9]] [['3', '9', '2', '7', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4  5  8  9  9  9  9  9  9]] [['7', '9', '5', '3', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
454  r_total and score:  1962.2608855985975 1.209336208242089
Current Bleu score is:  1.209336208242089

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 11 11 12  9  5 11 11 11 11]] [['7', '0', '0', '7', '2', '5', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813  0.6934356
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 11  5  8  9 11 11 11 11 11]] [['7', '0', '5', '3', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
455  r_total and score:  563.7145574338164 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10 11 12  9  5 11 11 11 11]] [['7', '8', '0', '7', '2', '5', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446  0.75339124
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  8  9 11 11 11 11 11]] [['7', '8', '7', '3', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
456  r_total and score:  695.3838476864391 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 11 12  4  5 11 11 11 11]] [['0', '8', '0', '7', '9', '5', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.03214713
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  8  4 11 11 11 11 11]] [['7', '9', '7', '3', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
457  r_total and score:  785.2083934638345 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 10 11 12  4  5 11 11 11 11]] [['2', '8', '0', '7', '9', '5', '0', '0', '0', '0']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.04103261
 -0.03485219 -0.0235031  -0.01697575  0.10724315]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  8  4 11 11 11 11 11]] [['7', '8', '7', '3', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
458  r_total and score:  1498.8539298271526 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 11  5  5  5 11 11 11 11]] [['8', '8', '0', '5', '5', '5', '0', '0', '0', '0']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  4 11 11 11 11 11]] [['5', '8', '5', '0', '9', '0', '0', '0', '0', '0']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
459  r_total and score:  2389.7658081702825 1.3253594886002367
Current Bleu score is:  1.3253594886002367

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 11 12  5  5  9  9  9  9]] [['0', '8', '0', '7', '5', '5', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.01605517 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 11  4  9  9  9  9  9]] [['5', '8', '5', '0', '9', '2', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
460  r_total and score:  3254.47149707248 2.246220647049727
Current Bleu score is:  2.246220647049727

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 11 11 11 11 11 11 11 11 11]] [['5', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 11  5  5  5 11 11 11 11]] [['0', '8', '0', '5', '5', '5', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5 11  4 11 11 11 11 11]] [['5', '5', '5', '0', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
461  r_total and score:  2927.9004722314985 1.8609326906281407
Current Bleu score is:  1.8609326906281407

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 11 12  5  5 11 11 11 11]] [['8', '8', '0', '7', '5', '5', '0', '0', '0', '0']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5 11  4 11 11 11 11 11]] [['5', '5', '5', '0', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
462  r_total and score:  3069.208302261885 2.1580613932869817
Current Bleu score is:  2.1580613932869817

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 11  5  4  5  9  9  9  9]] [['0', '8', '0', '5', '9', '5', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -2.16389877e-01 -4.72393767e-02
  1.02212848e+00 -3.01990637e-01 -1.24740945e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5 11  4  9  9  9  9  9]] [['5', '5', '5', '0', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
463  r_total and score:  3326.6118995337774 2.652768995432023
Current Bleu score is:  2.652768995432023
EPOCH %d 15
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  9  5  5  5  9  9  9  9]] [['0', '8', '2', '5', '5', '5', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5 11  4  9  9  9  9  9]] [['5', '5', '5', '0', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
464  r_total and score:  3123.271106363825 2.032403971154438
Current Bleu score is:  2.032403971154438

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 13 11 12  4 11 11 11 11 11]] [['3', '1', '0', '7', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  5  8  8 12 11 11 11 11 11]] [['0', '5', '3', '3', '7', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
465  r_total and score:  1868.441506475102 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 11 11 11 11 11 11 11 11 11]] [['3', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 13 11  8  4  5 11 11 11 11]] [['0', '1', '0', '3', '9', '5', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.01637845
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8  5  8  8 12  9 11 11 11 11]] [['3', '5', '3', '3', '7', '2', '0', '0', '0', '0']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
466  r_total and score:  1683.3371253657806 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  5 11 12  5  5 11 11 11 11]] [['0', '5', '0', '7', '5', '5', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  5  8  8  6  5 11 11 11 11]] [['0', '5', '3', '3', '6', '5', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.07181768 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
467  r_total and score:  1190.9975807162168 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 11  8  4  5 11 11 11 11]] [['0', '8', '0', '3', '9', '5', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.03214713
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8  5  8  8  6  5 11 11 11 11]] [['3', '5', '3', '3', '6', '5', '0', '0', '0', '0']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
468  r_total and score:  1015.9684204357175 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 10 11  8  5  5 11 11 11 11]] [['2', '8', '0', '3', '5', '5', '0', '0', '0', '0']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8  5  8  8  6  5 11 11 11 11]] [['3', '5', '3', '3', '6', '5', '0', '0', '0', '0']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
469  r_total and score:  822.3678170721614 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 11 11 11 11 11 11 11 11 11]] [['3', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 11  8  5  9 11 11 11 11]] [['0', '8', '0', '3', '5', '2', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.03214713
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  5  8 11  9  5 11 11 11 11]] [['4', '5', '3', '0', '2', '5', '0', '0', '0', '0']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.08918036 -0.01973199 -0.00049958
 -0.03485219 -0.0235031  -0.01697575  0.10724315]
470  r_total and score:  581.0640423897314 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  9  8  4  9  9  9  9  9]] [['8', '8', '2', '3', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774  3.06090127 -2.23661849 -0.06578356 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10  8 10  9  9  9  9  9  9]] [['8', '8', '3', '8', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164  0.84847443 -0.11096112 -0.07405663
 -0.18238762 -0.12299585 -0.08883709  0.56122223]
471  r_total and score:  1920.2854682829447 0.9620910363093474
Current Bleu score is:  0.9620910363093474

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  8  4  9  9  9  9  9]] [['9', '8', '2', '3', '9', '2', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -0.75688136
  -2.17012956  -1.31065241  -0.88385829  -0.63839066   4.03298912]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  8  6  9  9  9  9  9]] [['3', '8', '3', '3', '6', '2', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.06691772  -0.16480582  -0.1111393   -0.08027338   0.50712153]
472  r_total and score:  2218.849915799943 1.7201146465678525
Current Bleu score is:  1.7201146465678525

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  9  8  4  9  9  9  9  9]] [['8', '8', '2', '3', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774  3.06090127 -2.23661849 -0.06578356 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  8  6  9  9  9  9  9]] [['3', '8', '3', '3', '6', '2', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.06691772  -0.16480582  -0.1111393   -0.08027338   0.50712153]
473  r_total and score:  1679.2553068506381 1.0260478123152532
Current Bleu score is:  1.0260478123152532

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  9 12  4  5  9  9  9  9]] [['8', '8', '2', '7', '9', '5', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774  3.06090127 -2.23661849 -0.06578356 -0.23074333
 -0.19598825 -0.13216764 -0.09546167  0.60307254]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10  8  8 12  9  9  9  9  9]] [['0', '8', '3', '3', '7', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
474  r_total and score:  1870.7876159587136 0.9982375335402836
Current Bleu score is:  0.9982375335402836

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 11  9  8  9  9  9  9  9  9]] [['8', '0', '2', '3', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 11  7  8 12  9  9  9  9  9]] [['4', '0', '4', '3', '7', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703  0.82807057 -0.10026469 -0.06691772
 -0.16480582 -0.1111393  -0.08027338  0.50712153]
475  r_total and score:  1321.1670913514513 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 9 9 9 9 9 9 9 9 9]] [['3', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 11  9  8  4  9  9  9  9  9]] [['9', '0', '2', '3', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 11  7  4 12  9  9  9  9  9]] [['4', '0', '4', '9', '7', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
476  r_total and score:  1854.8098678626964 0.8501282748765469
Current Bleu score is:  0.8501282748765469

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 9 9 9 9 9 9 9 9 9]] [['3', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 11  9  8 10  9  9  9  9  9]] [['9', '0', '2', '3', '8', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.01169815  0.73183599
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 11  8  8 12  9  9  9  9  9]] [['3', '0', '3', '3', '7', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
477  r_total and score:  1516.9164330505748 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 9 9 9 9 9 9 9 9 9]] [['3', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 11  9  8  4  9  9  9  9  9]] [['9', '0', '2', '3', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  8 12  9  9  9  9  9]] [['3', '8', '3', '3', '7', '2', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.06691772  -0.16480582  -0.1111393   -0.08027338   0.50712153]
478  r_total and score:  2049.4653890231366 1.4395478994855702
Current Bleu score is:  1.4395478994855702

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 11 11 11 11 11 11 11 11 11]] [['3', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 11  8  4  9  9 11 11 11]] [['9', '8', '0', '3', '9', '2', '2', '0', '0', '0']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.06578356
  -0.23074333  -0.19598825  -0.13216764  -0.09546167   0.60307254]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  8 12 11 11 11 11 11]] [['3', '8', '3', '3', '7', '0', '0', '0', '0', '0']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.06691772  -0.16480582  -0.1111393   -0.08027338   0.50712153]
479  r_total and score:  1170.2552723966787 1.032935112271602
Current Bleu score is:  1.032935112271602

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 12 12 12 12 12 12 12 12]] [['7', '0', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 11  8  4  5  5  9  9  9]] [['9', '8', '0', '3', '9', '5', '5', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.06578356
  -0.23074333  -0.19598825  -0.09209185  -0.10093843   0.63767157]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  8 12 11 12 11 11 11]] [['3', '8', '3', '3', '7', '0', '7', '0', '0', '0']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.06691772  -0.16480582  -0.1111393   -0.08027338   0.50712153]
480  r_total and score:  1738.1154330442125 1.0057902882381509
Current Bleu score is:  1.0057902882381509

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  7 12 10  5  5  5  7  7]] [['9', '8', '4', '7', '8', '5', '5', '5', '4', '4']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.18699762
  -0.18077657  -0.18238762  -0.12299585  -0.08883709   0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  8 10 12  7 12 12 12]] [['3', '8', '3', '3', '8', '7', '4', '7', '7', '7']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.09827947e+01 -1.52021115e+00
 -1.02300788e-03 -7.40566266e-02 -1.24740945e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]
481  r_total and score:  2016.6974544963618 0.9580975629740308
Current Bleu score is:  0.9580975629740308

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  8 10  5  5  9  9  9]] [['9', '8', '2', '3', '8', '5', '5', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -1.38393724
  -1.54307367  -1.31065241  -0.88385829  -0.63839066   4.03298912]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  8 10  9  5  9  9  9]] [['3', '8', '3', '3', '8', '2', '5', '2', '2', '2']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.09827947e+01 -1.52021115e+00
 -1.02300788e-03 -7.40566266e-02 -1.24740945e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]
482  r_total and score:  2949.2432249807257 2.122566347235487
Current Bleu score is:  2.122566347235487

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8  9 12 12 12 12 12 12 12 12]] [['3', '2', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 10  9  8  9  5  5  9  9  9]] [['2', '8', '2', '3', '2', '5', '5', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.21018242  2.85423596 -2.23661849 -0.18699762  0.
 -0.21689665 -0.14626754 -0.1056457   0.66740947]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  8 10  9  9  9  9  9]] [['3', '8', '3', '3', '8', '2', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.09827947e+01 -1.52021115e+00
 -1.02300788e-03 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
483  r_total and score:  3161.301612156664 2.1620945932497184
Current Bleu score is:  2.1620945932497184

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 10 12  8  4  5  5  5  5  5]] [['2', '8', '7', '3', '9', '5', '5', '5', '5', '5']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.04103261
 -0.03485219 -0.0235031  -0.01697575  0.10724315]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  8 12  5  5  5  5  5]] [['7', '8', '7', '3', '7', '5', '5', '5', '5', '5']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986  0.00447861
 -0.02218243 -0.0235031  -0.01697575  0.10724315]
484  r_total and score:  2620.3636420967614 1.1655492076964002
Current Bleu score is:  1.1655492076964002

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 10 12 12  4  5  5  5  5  5]] [['2', '8', '7', '7', '9', '5', '5', '5', '5', '5']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.04103261
 -0.03485219 -0.0235031  -0.01697575  0.10724315]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  8 12  9  9  5  5  5]] [['7', '8', '7', '3', '7', '2', '2', '5', '5', '5']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.00862019 -0.00835556  0.10724315]
485  r_total and score:  3098.702572848092 1.696040204689457
Current Bleu score is:  1.696040204689457

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 11 12  5  4  5  9  9  9  9]] [['2', '0', '7', '5', '9', '5', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.04723938  1.02212848 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  8  8 12 12 12 12 12]] [['7', '8', '7', '3', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
486  r_total and score:  3190.687061776834 1.606462151753786
Current Bleu score is:  1.606462151753786

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10 12 12  4  5  5  5  5  5]] [['5', '8', '7', '7', '9', '5', '5', '5', '5', '5']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  8  8 12 12 12 12 12]] [['7', '8', '7', '3', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
487  r_total and score:  2826.285137948746 1.6264468765014832
Current Bleu score is:  1.6264468765014832

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 11 12  4  9  9  9  9  9]] [['8', '8', '0', '7', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.03214713
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10  7  8 12 12 12 12 12 12]] [['7', '8', '4', '3', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -4.75455349e-02  8.85387179e-01
 -1.10961119e-01 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
488  r_total and score:  3530.3378142467645 2.2869043287154986
Current Bleu score is:  2.2869043287154986

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 11  8  4  5  9 11 11 11]] [['9', '8', '0', '3', '9', '5', '2', '0', '0', '0']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.06578356
  -0.23074333  -0.14832983  -0.13975027  -0.10093843   0.63767157]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  7  8 12 11 11 11 11 11]] [['4', '8', '4', '3', '7', '0', '0', '0', '0', '0']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438  0.88538718 -0.11096112 -0.07405663
 -0.18238762 -0.12299585 -0.08883709  0.56122223]
489  r_total and score:  3074.128707718683 1.9982864896453865
Current Bleu score is:  1.9982864896453865

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 11 11 11 11 11 11 11 11 11]] [['3', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 11  8  9  5 11 11 11 11]] [['9', '8', '0', '3', '2', '5', '0', '0', '0', '0']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.06578356
  -0.03648626  -0.23307062  -0.1571747   -0.1135237    0.71717815]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  8 12 11 11 11 11 11]] [['3', '8', '3', '3', '7', '0', '0', '0', '0', '0']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.06691772  -0.16480582  -0.1111393   -0.08027338   0.50712153]
490  r_total and score:  3761.096224004956 2.4111562281471954
Current Bleu score is:  2.4111562281471954

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  7 12  5  5 12 12 12 12]] [['5', '8', '4', '7', '5', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  7  8  9 12 12 12 12 12]] [['4', '8', '4', '3', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438  0.88538718 -0.11096112 -0.07405663
 -0.18238762 -0.12299585 -0.08883709  0.56122223]
491  r_total and score:  3992.5416932363764 3.2104177805196703
Current Bleu score is:  3.2104177805196703

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  7  7  5  5 12 12 12 12]] [['5', '8', '4', '4', '5', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  7  8  9  9 12 12 12 12]] [['4', '8', '4', '3', '2', '2', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438  0.88538718 -0.11096112 -0.07405663
 -0.18238762 -0.12299585 -0.08883709  0.56122223]
492  r_total and score:  3798.4677964008956 3.087079357822295
Current Bleu score is:  3.087079357822295

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  7  7  5  5 12 12 12 12]] [['5', '8', '4', '4', '5', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  5  5  8  5 12 12 12 12]] [['4', '8', '5', '5', '3', '5', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039  2.49189332 -1.69435646 -0.05576742 -0.08414457
 -0.20723234 -0.13975027 -0.10093843  0.63767157]
493  r_total and score:  3270.637180763459 2.3543833598228363
Current Bleu score is:  2.3543833598228363

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7  9  9 12 12 12 12 12 12 12]] [['4', '2', '2', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  9  7  5  5  9  9  9  9]] [['5', '8', '2', '4', '5', '5', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.21018242  3.36939485 -2.61061406 -0.20694689 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  5  5  8  5  5  9  9  9]] [['4', '8', '5', '5', '3', '5', '5', '2', '2', '2']] 

Reward:  [ 0.33689735  0.09107039  2.49189332 -1.69435646 -0.05576742 -0.08414457
 -0.20723234 -0.13975027 -0.10093843  0.63767157]
494  r_total and score:  3680.8636109971617 3.291763185380687
Current Bleu score is:  3.291763185380687

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10 12  7  5  5 12 12 12 12]] [['5', '8', '7', '4', '5', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  5  5  8  5  5  5  5  5]] [['4', '8', '5', '5', '3', '5', '5', '5', '5', '5']] 

Reward:  [ 0.33689735  0.09107039  2.49189332 -1.69435646 -0.05576742 -0.08414457
 -0.20723234 -0.13975027 -0.10093843  0.63767157]
495  r_total and score:  4118.960299616938 3.584882513867555
Current Bleu score is:  3.584882513867555

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 9 9 9 9 9 9 9 9 9]] [['4', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  9  7  5  5  9  9  9  9]] [['5', '8', '2', '4', '5', '5', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.21018242  3.36939485 -2.61061406 -0.20694689 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  5  7  8  5  5  5  5  5]] [['4', '8', '5', '4', '3', '5', '5', '5', '5', '5']] 

Reward:  [  0.33689735   0.09107039   2.49189332   4.70685822  47.12510607
  -1.02332876 -10.2564094   -6.91656491  -4.99567689  31.55984539]
496  r_total and score:  4678.606974557899 3.7962068355049334
Current Bleu score is:  3.7962068355049334

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 9 9 9 9 9 9 9 9 9]] [['4', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  9  5  5  5  9  9  9  9]] [['5', '8', '2', '5', '5', '5', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.21018242  3.36939485  5.71790702 -1.38393724 -2.01953311
 -1.2196995  -0.82252282 -0.59408945  3.75311927]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  4  5  8  8  5 12  9  9  9]] [['4', '9', '5', '3', '3', '5', '7', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.00049958
 -0.03485219 -0.0235031  -0.01697575  0.10724315]
497  r_total and score:  3691.45536776117 2.9604387622743578
Current Bleu score is:  2.9604387622743578
EPOCH %d 16
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 9 9 9 9 9 9 9 9 9]] [['4', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  9  8  5  5  9  9  9  9]] [['5', '8', '2', '3', '5', '5', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.21018242  3.36939485 -2.61061406 -0.20694689 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  5  8  8  5 12  9  9  9]] [['4', '8', '5', '3', '3', '5', '7', '2', '2', '2']] 

Reward:  [ 0.33689735  0.09107039  2.49189332 -1.69435646 -0.11923548 -0.02067652
 -0.20723234 -0.13975027 -0.10093843  0.63767157]
498  r_total and score:  2486.2011694803978 2.394963916195815
Current Bleu score is:  2.394963916195815

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 9 9 9 9 9 9 9 9 9]] [['4', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  8  5  5  9  9  9  9]] [['4', '8', '2', '3', '5', '5', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  5  8 12  5  9  9  9  9]] [['3', '8', '5', '3', '7', '5', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -9.85473391e+00 -2.32255063e+00
 -1.31955752e-01 -3.34086660e-03 -2.33070620e-01 -1.57174700e-01
 -1.13523697e-01  7.17178151e-01]
499  r_total and score:  3265.4576484250106 2.550687522970337
Current Bleu score is:  2.550687522970337

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 12 12 12 12 12 12 12 12 12]] [['3', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 12  8  5  5  5  5 12 12]] [['4', '8', '7', '3', '5', '5', '5', '5', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  5  8 12  5  5  5  5  5]] [['3', '8', '5', '3', '7', '5', '5', '5', '5', '5']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -9.85473391e+00 -2.32255063e+00
 -1.31955752e-01 -3.34086660e-03 -2.33070620e-01 -1.57174700e-01
 -1.13523697e-01  7.17178151e-01]
500  r_total and score:  2177.5354931573343 1.1623643271945887
Current Bleu score is:  1.1623643271945887

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 12 12 12 12 12 12 12 12 12]] [['3', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  7  8  5  5 12 12 12 12]] [['5', '8', '4', '3', '5', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  5  8  8  5  5  5  5  5]] [['3', '8', '5', '3', '3', '5', '5', '5', '5', '5']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -9.85473391e+00 -2.32255063e+00
 -1.31955752e-01 -3.34086660e-03 -2.33070620e-01 -1.57174700e-01
 -1.13523697e-01  7.17178151e-01]
501  r_total and score:  2008.8984250522224 1.5663768647015721
Current Bleu score is:  1.5663768647015721

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 10 10 10 10 10 10 10 10 10]] [['4', '8', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 10  8  5  5 10 10 10 10]] [['3', '8', '8', '3', '5', '5', '8', '8', '8', '8']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  5  8  8  5  5  5  5  5]] [['3', '8', '5', '3', '3', '5', '5', '5', '5', '5']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -9.85473391e+00 -2.32255063e+00
 -1.31955752e-01 -3.34086660e-03 -2.33070620e-01 -1.57174700e-01
 -1.13523697e-01  7.17178151e-01]
502  r_total and score:  1721.1670799982512 1.305167751545033
Current Bleu score is:  1.305167751545033

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 11 11 11 11 11 11 11 11 11]] [['4', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 11  8  4  5  5 10 10 10]] [['3', '8', '0', '3', '9', '5', '5', '8', '8', '8']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.03214713
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  8  8  8 11 11  6  6  6]] [['4', '8', '3', '3', '3', '0', '0', '6', '6', '6']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.08918036 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
503  r_total and score:  2292.399442468994 2.0159618667374635
Current Bleu score is:  2.0159618667374635

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 12  7  5  5 12 12 12 12]] [['0', '8', '7', '4', '5', '5', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  8  8  8  6 10 10 10 10]] [['4', '8', '3', '3', '3', '6', '8', '8', '8', '8']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.08918036 -0.01973199 -0.01316934
 -0.02218243 -0.0235031  -0.01697575  0.10724315]
504  r_total and score:  3188.339472109571 2.7316233213704963
Current Bleu score is:  2.7316233213704963

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 12 12 12 12 12 12 12 12 12]] [['3', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 12  7  5  5 12 12 12 12]] [['1', '8', '7', '4', '5', '5', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  7  8  5  5  5  5  5]] [['3', '8', '3', '4', '3', '5', '5', '5', '5', '5']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.09827947e+01 -1.41027304e+00
  8.38274963e-02 -3.34086660e-03 -1.76394894e-01 -1.66192011e-01
 -1.20036695e-01  7.58323567e-01]
505  r_total and score:  2599.911388424577 2.0593640177851156
Current Bleu score is:  2.0593640177851156

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 12 12 12 12 12 12 12 12 12]] [['3', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 12  7  5  5 12 12 12 12]] [['0', '8', '7', '4', '5', '5', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  7  8  5  5  5  5  5]] [['3', '8', '3', '4', '3', '5', '5', '5', '5', '5']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.09827947e+01 -1.41027304e+00
  8.38274963e-02 -3.34086660e-03 -1.76394894e-01 -1.66192011e-01
 -1.20036695e-01  7.58323567e-01]
506  r_total and score:  3000.1189271275407 2.4503246452878757
Current Bleu score is:  2.4503246452878757

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 12 12 12 12 12 12 12 12 12]] [['3', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 12  8  5  5  5  5  5  5]] [['9', '8', '7', '3', '5', '5', '5', '5', '5', '5']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.06578356
  -0.30199064  -0.18238762  -0.12299585  -0.08883709   0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 10  5  2  2  5  5  5  5  5]] [['6', '8', '5', '<s>', '<s>', '5', '5', '5', '5', '5']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.68739356e+00
 -3.56218488e-01 -1.31832600e-02 -5.27753378e-02 -4.25272231e-02
 -3.50130082e-02  3.63622705e-01]
507  r_total and score:  2608.456515217939 1.693202161496536
Current Bleu score is:  1.693202161496536

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 12 12 12 12 12 12 12 12 12]] [['3', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 12  5  5  5 12 12 12 12]] [['1', '8', '7', '5', '5', '5', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 10  6  8  8  5 12 12 12 12]] [['6', '8', '6', '3', '3', '5', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
508  r_total and score:  3043.4163631719885 2.1910005948402587
Current Bleu score is:  2.1910005948402587

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 4 9 5 5 5 9 9 9 9]] [['3', '9', '2', '5', '5', '5', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -1.42950658e-01  1.10839677e+00
 -2.06946887e-01 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 10  8  8  8  5  9  9  9  9]] [['6', '8', '3', '3', '3', '5', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.07181768 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
509  r_total and score:  2509.387854796649 1.2110503673395132
Current Bleu score is:  1.2110503673395132

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 11 12 12 12 12 12 12 12 12]] [['3', '0', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  4 11  8  5  5 12 12 12 12]] [['3', '9', '0', '3', '5', '5', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 10  8  8  4  5 11 11 11 11]] [['6', '8', '3', '3', '9', '5', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.07181768 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
510  r_total and score:  2302.1210453472436 1.569288911664016
Current Bleu score is:  1.569288911664016

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8  9 12 12 12 12 12 12 12 12]] [['3', '2', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  8  4  5 12 12 12 12]] [['3', '8', '2', '3', '9', '5', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -2.30743334e-01 -1.95988249e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  2 12  5  9  9  9  9]] [['3', '8', '3', '<s>', '7', '5', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.68739356  -0.16480582
  -0.04847488  -0.08883709  -0.06728396  -0.05277534   0.44116294]
511  r_total and score:  3562.2728530649783 1.9663476258882204
Current Bleu score is:  1.9663476258882204

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9  9 12 12 12 12 12 12 12 12]] [['2', '2', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  4  9  7  5  5 12 12 12 12]] [['3', '9', '2', '4', '5', '5', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[6 5 5 8 4 5 9 9 9 9]] [['6', '5', '5', '3', '9', '5', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
512  r_total and score:  3494.493421760536 2.205638193307206
Current Bleu score is:  2.205638193307206

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 12  5  5  5 12 12 12 12]] [['0', '8', '7', '5', '5', '5', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  5  2  8  5 12 12 12 12]] [['3', '8', '5', '<s>', '3', '5', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 13.19663097 -9.85473391 -2.54257505 -0.21689665 -0.08862087
 -0.1135237  -0.08598124 -0.06744088  0.56375603]
513  r_total and score:  3876.4414735600635 2.686264909039674
Current Bleu score is:  2.686264909039674

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  5  5  5 12 12 12 12]] [['9', '8', '2', '5', '5', '5', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407  29.02869589  26.5383664  -11.00604781
 -16.06075568  -9.69991313  -6.54128323  -4.7246195   29.84745896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8  5  5  8  4  5 12 12 12 12]] [['3', '5', '5', '3', '9', '5', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.08918036 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
514  r_total and score:  4536.062490625999 3.2493032092002023
Current Bleu score is:  3.2493032092002023

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  8  5  5  5 12 12 12 12]] [['8', '8', '3', '5', '5', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  5 12  5 12 12 12 12]] [['3', '8', '3', '5', '7', '5', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.09827947e+01 -1.41027304e+00
 -1.10961119e-01 -2.80932275e-03 -1.95988249e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]
515  r_total and score:  4528.796571087949 3.6357873241679255
Current Bleu score is:  3.6357873241679255

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  8  5  4  5 12 12 12 12]] [['8', '8', '3', '5', '9', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.04723938  1.02212848 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  5 12  5 12 12 12 12]] [['3', '8', '3', '5', '7', '5', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.09827947e+01 -1.41027304e+00
 -1.10961119e-01 -2.80932275e-03 -1.95988249e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]
516  r_total and score:  4429.255875637548 3.522682204632861
Current Bleu score is:  3.522682204632861

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  8  5  4  5 12 12 12 12]] [['8', '8', '3', '5', '9', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.04723938  1.02212848 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  5 12  5 12 12 12 12]] [['3', '8', '3', '5', '7', '5', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.09827947e+01 -1.41027304e+00
 -1.10961119e-01 -2.80932275e-03 -1.95988249e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]
517  r_total and score:  5046.33060484982 3.9038904860628683
Current Bleu score is:  3.9038904860628683

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  8  5  4  5  8  8  8  8]] [['8', '8', '3', '5', '9', '5', '3', '3', '3', '3']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.04723938  1.02212848 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  5  8  7  8  8  8  8]] [['3', '8', '3', '5', '3', '4', '3', '3', '3', '3']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.09827947e+01 -1.41027304e+00
 -1.10961119e-01 -2.80932275e-03 -3.88135487e-02 -1.57174700e-01
 -1.13523697e-01  7.17178151e-01]
518  r_total and score:  2916.53617704884 2.3011743005481162
Current Bleu score is:  2.3011743005481162

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 11  5  4  7 12 12 12 12]] [['8', '8', '0', '5', '9', '4', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.04723938  1.02212848 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  5 12  7 12 12 12 12]] [['3', '8', '3', '5', '7', '4', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.09827947e+01 -1.41027304e+00
 -1.10961119e-01 -2.80932275e-03 -1.95988249e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]
519  r_total and score:  3958.409631542486 2.3128166762794313
Current Bleu score is:  2.3128166762794313

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 11 11 11 11 11 11 11 11 11]] [['5', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 11  5  4  7 11 11 11 11]] [['3', '8', '0', '5', '9', '4', '0', '0', '0', '0']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -2.16389877e-01 -4.72393767e-02
  1.02212848e+00 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  5 13  8 11 11 11 11]] [['3', '8', '3', '5', '1', '3', '0', '0', '0', '0']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.41027304  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
520  r_total and score:  4282.2081545077535 2.750575380198168
Current Bleu score is:  2.750575380198168

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 12 12 12 12 12 12 12 12 12]] [['3', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 12  8  4  8 12 12 12 12]] [['3', '8', '7', '3', '9', '3', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8 10  4  8 12 12 12 12]] [['3', '8', '3', '8', '9', '3', '7', '7', '7', '7']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.41027304  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
521  r_total and score:  5086.136072551188 3.2233366161166326
Current Bleu score is:  3.2233366161166326

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 12 12 12 12 12 12 12 12 12]] [['3', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 11  8  4  8 12 12 12 12]] [['3', '8', '0', '3', '9', '3', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  8  7  8 12 12 12 12]] [['3', '8', '3', '3', '4', '3', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.09827947e+01 -1.52021115e+00
 -1.02300788e-03  1.06719948e-01 -2.16896651e-01 -1.46267540e-01
 -1.05645704e-01  6.67409472e-01]
522  r_total and score:  4265.010251040779 2.956181580621955
Current Bleu score is:  2.956181580621955

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 12 12 12 12 12 12 12 12 12]] [['3', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  8  4  8 12 12 12 12]] [['9', '8', '2', '3', '9', '3', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -0.75688136
  -2.17012956  -1.31065241  -0.88385829  -0.63839066   4.03298912]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  8 12  8 12 12 12 12]] [['3', '8', '3', '3', '7', '3', '7', '7', '7', '7']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.06691772  -0.16480582  -0.1111393   -0.08027338   0.50712153]
523  r_total and score:  4263.781682126035 2.8844681049602263
Current Bleu score is:  2.8844681049602263

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 10  7  4 10 12 12 12 12]] [['9', '8', '8', '4', '9', '8', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.06578356
  -0.30199064  -0.18238762  -0.12299585  -0.08883709   0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  7  8  4 10 12 12 12 12]] [['3', '8', '4', '3', '9', '8', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.06136673e+01 -1.56361727e+00
 -1.31955752e-01 -3.34086660e-03 -2.33070620e-01 -1.57174700e-01
 -1.13523697e-01  7.17178151e-01]
524  r_total and score:  3070.2678461173828 2.7486067731484467
Current Bleu score is:  2.7486067731484467

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 10 10 10 10 10 10 10 10 10]] [['3', '8', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 10  7  4 10 10 10 10 10]] [['9', '8', '8', '4', '9', '8', '8', '8', '8', '8']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.06578356
  -0.30199064  -0.18238762  -0.12299585  -0.08883709   0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  7  8  8 10 10 10 10 10]] [['3', '8', '4', '3', '3', '8', '8', '8', '8', '8']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.06136673e+01 -1.56361727e+00
 -1.31955752e-01 -3.34086660e-03 -2.33070620e-01 -1.57174700e-01
 -1.13523697e-01  7.17178151e-01]
525  r_total and score:  3244.79372622368 1.5900697213973978
Current Bleu score is:  1.5900697213973978

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 9 9 9 9 9 9 9 9 9]] [['3', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 10  7  4 10  9  9  9  9]] [['9', '8', '8', '4', '9', '8', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.06578356
  -0.30199064   4.59979528  -0.88385829  -0.63839066   4.03298912]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  7  8 13 10  9  9  9  9]] [['3', '8', '4', '3', '1', '8', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.06136673e+01 -1.56361727e+00
 -1.31955752e-01 -3.34086660e-03 -2.33070620e-01 -1.57174700e-01
 -1.13523697e-01  7.17178151e-01]
526  r_total and score:  3233.819822493402 1.8331111407842104
Current Bleu score is:  1.8331111407842104

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 9 9 9 9 9 9 9 9 9]] [['3', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  8  4 10  9  9  9  9]] [['9', '8', '2', '3', '9', '8', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -0.75688136
  -2.17012956  -1.31065241  -0.88385829  -0.63839066   4.03298912]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  8 10 10  9  9  9  9]] [['3', '8', '3', '3', '8', '8', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.09827947e+01 -1.52021115e+00
 -1.02300788e-03 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
527  r_total and score:  3723.7256539681257 2.5780926955645067
Current Bleu score is:  2.5780926955645067

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 9 9 9 9 9 9 9 9 9]] [['3', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  8  4 10  9  9  9  9]] [['9', '8', '2', '3', '9', '8', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -0.75688136
  -2.17012956  -1.31065241  -0.88385829  -0.63839066   4.03298912]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  8 10 10  9  9  9  9]] [['3', '8', '3', '3', '8', '8', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.09827947e+01 -1.52021115e+00
 -1.02300788e-03 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
528  r_total and score:  3127.209573393195 1.6334116149553142
Current Bleu score is:  1.6334116149553142

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  8  9  9  8  9  9  9  9]] [['9', '8', '3', '2', '2', '3', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.09545516  -0.20694689
  -0.30199064  -0.18238762  -0.12299585  -0.08883709   0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  9  9  8  8  9  9  9  9]] [['2', '8', '2', '2', '3', '3', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
529  r_total and score:  2648.710766980673 1.3173777035185474
Current Bleu score is:  1.3173777035185474

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 10  8  9  4  5  8  8  8  8]] [['2', '8', '3', '2', '9', '5', '3', '3', '3', '3']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.04103261
 -0.03485219 -0.0235031  -0.01697575  0.10724315]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  5  9  8  5  8  8  8  8]] [['3', '8', '5', '2', '3', '5', '3', '3', '3', '3']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -9.85473391e+00 -2.32255063e+00
 -1.31955752e-01 -3.34086660e-03 -2.33070620e-01 -1.57174700e-01
 -1.13523697e-01  7.17178151e-01]
530  r_total and score:  2007.0139878681553 1.24315832009267
Current Bleu score is:  1.24315832009267
EPOCH %d 17
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 5 9 4 5 9 9 9 9]] [['9', '9', '5', '2', '9', '5', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.21018242 -0.29810008 -0.12767311 -0.03954518 -0.05770696
 -0.03485219 -0.0235031  -0.01697575  0.10724315]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  9  9  8  5  9  9  9  9]] [['2', '8', '2', '2', '3', '5', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
531  r_total and score:  2523.124477392327 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 8 8 8 8 8 8 8 8 8]] [['2', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  5  9  4  8  8  8  8  8]] [['9', '8', '5', '2', '9', '3', '3', '3', '3', '3']] 

Reward:  [  0.91578194  21.39723407 -18.23802164  -2.50141532  -0.14485884
  -0.34312761  -0.20723234  -0.13975027  -0.10093843   0.63767157]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  7  9  8  5  9  9  9  9]] [['2', '8', '4', '2', '3', '5', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -4.99576080e-04 -3.48521867e-02 -2.35030996e-02
 -1.69757522e-02  1.07243147e-01]
532  r_total and score:  2319.783650994904 1.8113079843504218
Current Bleu score is:  1.8113079843504218

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 8 8 8 8 8 8 8 8 8]] [['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  8  9  4  8  8  8  8  8]] [['9', '8', '3', '2', '9', '3', '3', '3', '3', '3']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.09545516  -0.11318016
  -0.32451006  -0.19598825  -0.13216764  -0.09546167   0.60307254]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  9  9  5  8  8  8  8]] [['3', '8', '3', '2', '2', '5', '3', '3', '3', '3']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
   0.02518505  -0.18238762  -0.12299585  -0.08883709   0.56122223]
533  r_total and score:  2736.4281194347204 1.563592862414755
Current Bleu score is:  1.563592862414755

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 8 8 8 8 8 8 8 8 8]] [['2', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  4  9  9  8  8  8  8  8]] [['5', '8', '9', '2', '2', '3', '3', '3', '3', '3']] 

Reward:  [ 0.91578194 -0.21018242 -0.29810008 -0.12767311 -0.03954518 -0.05770696
 -0.03485219 -0.0235031  -0.01697575  0.10724315]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  5  9  9  5  5  8  8  8]] [['2', '8', '5', '2', '2', '5', '5', '3', '3', '3']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.52021115e+00
 -1.00264689e-01  2.51850546e-02 -1.82387617e-01 -7.45209700e-02
 -9.54616696e-02  6.03072536e-01]
534  r_total and score:  2923.57408143137 1.7201731210515283
Current Bleu score is:  1.7201731210515283

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 4 4 4 4 4 4 4 4 4]] [['3', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 4 8 9 4 4 4 4 4]] [['9', '9', '9', '3', '2', '9', '9', '9', '9', '9']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  4  4  8 13  4  4  4  4  4]] [['9', '9', '9', '3', '1', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
535  r_total and score:  3034.080231787555 1.525293632952348
Current Bleu score is:  1.525293632952348

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  4 12  7  9 12  5  5  5  5]] [['9', '9', '7', '4', '2', '7', '5', '5', '5', '5']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.05370237
 -0.02218243 -0.0235031  -0.01697575  0.10724315]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  8  9  5  5  5  5  5]] [['7', '9', '7', '3', '2', '5', '5', '5', '5', '5']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307  0.01442
 -0.01605517 -0.0218721  -0.01579772  0.09980099]
536  r_total and score:  3322.8086917653727 1.4236330582360581
Current Bleu score is:  1.4236330582360581

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 12 12 12 12 12 12 12 12 12]] [['3', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  5  7 12 12 12 12 12 12]] [['9', '8', '5', '4', '7', '7', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.23802164  -2.61061406  -0.20694689
  -0.30199064  -0.18238762  -0.12299585  -0.08883709   0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 12  8  9  5 12 12 12 12]] [['5', '8', '7', '3', '2', '5', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.09827947e+01 -1.41027304e+00
 -1.10961119e-01 -2.80932275e-03 -1.95988249e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]
537  r_total and score:  2823.1568120065526 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 5 5 5 5 5 5 5 5 5]] [['5', '5', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 4 5 7 4 5 5 5 5 5]] [['3', '9', '5', '4', '9', '5', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 12  8 12  5  5  5  5  5]] [['5', '8', '7', '3', '7', '5', '5', '5', '5', '5']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.09827947e+01 -1.41027304e+00
 -1.10961119e-01 -2.80932275e-03 -1.95988249e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]
538  r_total and score:  2467.00979799903 1.2479951820007718
Current Bleu score is:  1.2479951820007718

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  5  7  4 12 12 12 12 12]] [['9', '8', '5', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.23802164  -2.61061406  -0.11318016
  -0.32451006  -0.19598825  -0.13216764  -0.09546167   0.60307254]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  7  8  9 12 12 12 12 12]] [['5', '8', '4', '3', '2', '7', '7', '7', '7', '7']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.46248227  -0.14179568
  -0.09463594  -0.23307062  -0.1571747   -0.1135237    0.71717815]
539  r_total and score:  2942.579857593818 1.3489778656366305
Current Bleu score is:  1.3489778656366305

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  5  7  4 12 12 12 12 12]] [['9', '8', '5', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.23802164  -2.61061406  -0.11318016
  -0.32451006  -0.19598825  -0.13216764  -0.09546167   0.60307254]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 12  8  4 12 12 12 12 12]] [['5', '8', '7', '3', '9', '7', '7', '7', '7', '7']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.41027304  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
540  r_total and score:  2539.5175924511714 1.166882228879006
Current Bleu score is:  1.166882228879006

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 5 5 5 5 5 5 5 5 5]] [['5', '5', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  5  7  4  5  5  5  5  5]] [['3', '8', '5', '4', '9', '5', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  7  8  9  5  5  5  5  5]] [['5', '8', '4', '3', '2', '5', '5', '5', '5', '5']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.46248227  -0.14179568
  -0.02458866  -0.24644218  -0.16619201  -0.12003669   0.75832357]
541  r_total and score:  3111.10072521275 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  5  7  9  5  9  9  9  9]] [['9', '8', '5', '4', '2', '5', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407 -18.23802164  -2.61061406  -0.11318016
  -0.13025299  -0.23307062  -0.1571747   -0.1135237    0.71717815]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5  8  9  5  9  9  9  9]] [['5', '8', '5', '3', '2', '5', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -28.5925009   -0.79737572
  -0.53217701  -1.31065241  -0.88385829  -0.63839066   4.03298912]
542  r_total and score:  2608.3998195412064 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[9 8 9 7 9 9 9 9 9 9]] [['2', '3', '2', '4', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 4 9 8 9 9 9 9 9 9]] [['5', '9', '2', '3', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
543  r_total and score:  2929.665574897452 1.3175946093797735
Current Bleu score is:  1.3175946093797735

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 9 9 9 9 9 9 9 9 9]] [['4', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 13  9  7  9  9  9  9  9  9]] [['2', '1', '2', '4', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[7 4 7 8 9 9 9 9 9 9]] [['4', '9', '4', '3', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703  0.82807057 -0.10026469 -0.06691772
 -0.16480582 -0.1111393  -0.08027338  0.50712153]
544  r_total and score:  2603.104551193804 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 9 9 9 9 9 9 9 9 9]] [['4', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 13  9  7  9  9  9  9  9  9]] [['2', '1', '2', '4', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  4  9  8  9 10  9  9  9  9]] [['5', '9', '2', '3', '2', '8', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.01919618 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
545  r_total and score:  2800.8816638697745 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 13 10  7  9 12 12 12 12 12]] [['2', '1', '8', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  4  7  8  9 10 12 12 12 12]] [['4', '9', '4', '3', '2', '8', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703  0.82807057 -0.10026469  0.02518505
 -0.18238762 -0.12299585 -0.08883709  0.56122223]
546  r_total and score:  2398.351684485259 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 13 10  7  9 12 12 12 12 12]] [['2', '1', '8', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  4 12  8  9 10 12 12 12 12]] [['5', '9', '7', '3', '2', '8', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.01919618 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
547  r_total and score:  2085.1563198030376 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 10 10 10 10 10 10 10 10 10]] [['7', '8', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 13 10  5  4 10 10 10 10 10]] [['2', '1', '8', '5', '9', '8', '8', '8', '8', '8']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.09557581  1.09079242 -0.13025299
 -0.23307062 -0.1571747  -0.1135237   0.71717815]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10  5  8 13 10 10 10 10 10]] [['8', '8', '5', '3', '1', '8', '8', '8', '8', '8']] 

Reward:  [ 0.33689735  0.09107039  2.49189332 -1.69435646 -0.11923548 -0.07957902
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
548  r_total and score:  1766.3694639342252 1.2479234024484085
Current Bleu score is:  1.2479234024484085

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9 12  4  9  9  9  9  9]] [['3', '8', '2', '7', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  5  8  9 10  9  9  9  9]] [['2', '8', '5', '3', '2', '8', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.41027304e+00
 -1.10961119e-01 -2.80932275e-03 -1.95988249e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]
549  r_total and score:  3302.1670923137417 1.95007765256438
Current Bleu score is:  1.95007765256438

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11  9  9  9  9  9  9  9  9  9]] [['0', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 10 10 11  9  9  9  9  9  9]] [['2', '8', '8', '0', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 11  8  9 10  9  9  9  9]] [['8', '8', '0', '3', '2', '8', '2', '2', '2', '2']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
550  r_total and score:  1815.6370559676334 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 10 12  9  9  9  9  9  9]] [['3', '8', '8', '7', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10  9  8  9 10  9  9  9  9]] [['8', '8', '2', '3', '2', '8', '2', '2', '2', '2']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
551  r_total and score:  2474.083282441689 1.154176636071863
Current Bleu score is:  1.154176636071863

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 9 9 9 9 9 9 9 9 9]] [['4', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 4 9 7 9 9 9 9 9 9]] [['3', '9', '2', '4', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10  9  8  9  9  9  9  9  9]] [['2', '8', '2', '3', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
552  r_total and score:  2859.739817329573 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 9 9 9 9 9 9 9 9 9]] [['4', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 4 9 7 9 9 9 9 9 9]] [['3', '9', '2', '4', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  4  7  8  9 10  9  9  9  9]] [['2', '9', '4', '3', '2', '8', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
 -1.00264689e-01  2.51850546e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
553  r_total and score:  2106.8696886686575 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 10 10 10 10 10 10 10 10 10]] [['0', '8', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  4 10 11  9 10 10 10 10 10]] [['3', '9', '8', '0', '2', '8', '8', '8', '8', '8']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  4 10  8  9 10 10 10 10 10]] [['8', '9', '8', '3', '2', '8', '8', '8', '8', '8']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
554  r_total and score:  1516.6802596700406 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 10 10 10 10 10 10 10 10 10]] [['0', '8', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 13 10 11  9 10 10 10 10 10]] [['3', '1', '8', '0', '2', '8', '8', '8', '8', '8']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  7 11  8  9 10 10 10 10 10]] [['8', '4', '0', '3', '2', '8', '8', '8', '8', '8']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.05226761 -0.01973199 -0.00049958
 -0.03485219 -0.0235031  -0.01697575  0.10724315]
555  r_total and score:  1073.2774280390458 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11  9  9  9  9  9  9  9  9  9]] [['0', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 10 11  4 10  9  9  9  9]] [['3', '8', '8', '0', '9', '8', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -2.16389877e-01 -8.46772381e-02
  4.18445938e-03  6.61288471e-01  4.30639152e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  7 11  8  4 10  9  9  9  9]] [['8', '4', '0', '3', '9', '8', '2', '2', '2', '2']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.05226761 -0.01973199 -0.00049958
 -0.03485219 -0.0235031  -0.01697575  0.10724315]
556  r_total and score:  1555.3875444074606 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 11 12  7  9 12 12 12 12 12]] [['3', '0', '7', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  8  4 10 12 12 12 12]] [['7', '8', '7', '3', '9', '8', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
557  r_total and score:  1853.0682145399505 0.7369114978991912
Current Bleu score is:  0.7369114978991912

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11  9  9  9  9  9  9  9  9  9]] [['0', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 11  9  7  9  9  9  9  9  9]] [['3', '0', '2', '4', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10 11  8  4 10  9  9  9  9]] [['2', '8', '0', '3', '9', '8', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
558  r_total and score:  1799.091476974228 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 12  2  9 12 12 12 12 12]] [['3', '8', '7', '<s>', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  8  4 12 12 12 12 12]] [['7', '8', '7', '3', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
559  r_total and score:  1393.8805964418773 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 11 12  7  9 12 12 12 12 12]] [['3', '0', '7', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10  5  8  2 10 12 12 12 12]] [['7', '8', '5', '3', '<s>', '8', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.41027304e+00
 -3.67405362e-01 -7.45209700e-02 -9.54616696e-02 -7.23013189e-02
 -5.67107911e-02  4.74060426e-01]
560  r_total and score:  2355.4199306512305 0.9564648397972634
Current Bleu score is:  0.9564648397972634

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 11  9  7 10 12 12 12 12 12]] [['3', '0', '2', '4', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  7  5  8  2  6 12 12 12 12]] [['7', '4', '5', '3', '<s>', '6', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.05226761 -0.06533494 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]
561  r_total and score:  2205.1092642589297 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  7 12  7  9 12 12 12 12 12]] [['3', '4', '7', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  7 12  8  2  6 12 12 12 12]] [['7', '4', '7', '3', '<s>', '6', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.05903678 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
562  r_total and score:  1513.7426462835429 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 11 11 11 11 11 11 11 11 11]] [['0', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  7 11 11  9 11 11 11 11 11]] [['3', '4', '0', '0', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  7 11  8  9 11 11 11 11 11]] [['0', '4', '0', '3', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
563  r_total and score:  1707.5394995602421 0.792095931948616
Current Bleu score is:  0.792095931948616
EPOCH %d 18
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 11 11 11 11 11 11 11 11 11]] [['0', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  7 11  7  9 10 11 11 11 11]] [['3', '4', '0', '4', '2', '8', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.01637845
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  7 11  8  9 10 11 11 11 11]] [['0', '4', '0', '3', '2', '8', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
564  r_total and score:  1837.8599997655356 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 11 11 11 11 11 11 11 11 11]] [['0', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  7 11  7  9 10 11 11 11 11]] [['5', '4', '0', '4', '2', '8', '0', '0', '0', '0']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.03214713
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  7 11  8  9 10 11 11 11 11]] [['0', '4', '0', '3', '2', '8', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
565  r_total and score:  1920.2823986863284 0.9935198728875967
Current Bleu score is:  0.9935198728875967

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 11 11 11 11 11 11 11 11 11]] [['0', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  7 11 11  9 11 11 11 11 11]] [['3', '4', '0', '0', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  7 11  8  9 10 11 11 11 11]] [['0', '4', '0', '3', '2', '8', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
566  r_total and score:  2044.7872366383192 1.252615588501784
Current Bleu score is:  1.252615588501784

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 11 11 11 11 11 11 11 11 11]] [['0', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 11  7  9 11 11 11 11 11]] [['3', '8', '0', '4', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 11  8  9 10 11 11 11 11]] [['0', '8', '0', '3', '2', '8', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
567  r_total and score:  2347.691841352377 1.684315884494388
Current Bleu score is:  1.684315884494388

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 11 11 11 11 11 11 11 11 11]] [['0', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 11 11  9 10 11 11 11 11]] [['3', '8', '0', '0', '2', '8', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 11  2  8 10 11 11 11 11]] [['0', '8', '0', '<s>', '3', '8', '0', '0', '0', '0']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -7.33524136e-02
 -4.88054536e-03  5.25840427e-01 -8.88370936e-02 -6.72839587e-02
 -5.27753378e-02  4.41162936e-01]
568  r_total and score:  2506.570319213269 1.962844556213153
Current Bleu score is:  1.962844556213153

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 11 11 11 11 11 11 11 11 11]] [['0', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  7 11 11  4  5 11 11 11 11]] [['3', '4', '0', '0', '9', '5', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.01637845
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10  5  8  9  5 11 11 11 11]] [['0', '8', '5', '3', '2', '5', '0', '0', '0', '0']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.41027304e+00
 -1.10961119e-01 -2.80932275e-03 -1.95988249e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]
569  r_total and score:  2081.8075909982663 0.9295258951325607
Current Bleu score is:  0.9295258951325607

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 11 11 11 11 11 11 11 11 11]] [['0', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  7 11 11  4  5 11 11 11 11]] [['3', '4', '0', '0', '9', '5', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.01637845
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  7  5  8  2  5 11 11 11 11]] [['0', '4', '5', '3', '<s>', '5', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.05226761 -0.06533494 -0.01325191
 -0.01697575 -0.01285719 -0.01008476  0.08430119]
570  r_total and score:  2100.9070228403575 1.230961506068993
Current Bleu score is:  1.230961506068993

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 11 11 11 11 11 11 11 11 11]] [['0', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  7 11 11  5  5 11 11 11 11]] [['3', '4', '0', '0', '5', '5', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  7 11  8  5 11 11 11 11 11]] [['0', '4', '0', '3', '5', '0', '0', '0', '0', '0']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -1.91961772e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
571  r_total and score:  1850.3776261102341 1.1468111630762334
Current Bleu score is:  1.1468111630762334

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 11 11 11 11 11 11 11 11 11]] [['0', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9  7 11 11  5  5 11 11 11 11]] [['2', '4', '0', '0', '5', '5', '0', '0', '0', '0']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  7 11  8  5 11 11 11 11 11]] [['0', '4', '0', '3', '5', '0', '0', '0', '0', '0']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -1.91961772e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
572  r_total and score:  1856.0824442267947 1.1513595362104614
Current Bleu score is:  1.1513595362104614

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  7 12 12  5 12 12 12 12 12]] [['3', '4', '7', '7', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  5  5  8  5 12 12 12 12 12]] [['7', '5', '5', '3', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
573  r_total and score:  2564.0814409651016 1.566102521801677
Current Bleu score is:  1.566102521801677

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  7 12  8  7 12 12 12 12 12]] [['1', '4', '7', '3', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  7  8  8  5  9 12 12 12 12]] [['7', '4', '3', '3', '5', '2', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.52021115e+00
 -1.02300788e-03 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
574  r_total and score:  2022.4236104780487 1.4064153172108331
Current Bleu score is:  1.4064153172108331

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 12 12 12 12 12 12 12 12 12]] [['2', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  7 12 13  9  9 12 12 12 12]] [['1', '4', '7', '1', '2', '2', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  7 13  8  5  5 12 12 12 12]] [['7', '4', '1', '3', '5', '5', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -1.91961772e-02
 -1.81919385e-04 -4.99576080e-04 -3.48521867e-02 -2.35030996e-02
 -1.69757522e-02  1.07243147e-01]
575  r_total and score:  2302.4899517993936 1.2753620692127052
Current Bleu score is:  1.2753620692127052

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  7 12  7 10  5 12 12 12 12]] [['3', '4', '7', '4', '8', '5', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.01637845
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  7  7  8  9  5 12 12 12 12]] [['7', '4', '4', '3', '2', '5', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01  8.28070568e-01
 -1.00264689e-01  2.51850546e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
576  r_total and score:  1442.1147478389923 1.1787469335602767
Current Bleu score is:  1.1787469335602767

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  7 12 13  9  5 12 12 12 12]] [['1', '4', '7', '1', '2', '5', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813  0.6934356
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  7 13  9  9  5 12 12 12 12]] [['7', '4', '1', '2', '2', '5', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307  0.01442
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
577  r_total and score:  1894.445438099413 1.1360417905667162
Current Bleu score is:  1.1360417905667162

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  7 12  2  9 10 12 12 12 12]] [['0', '4', '7', '<s>', '2', '8', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675 -0.00529694  0.08149774  0.
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  7  9  9  8 10 12 12 12 12]] [['7', '4', '2', '2', '3', '8', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -4.83528130e-02
  1.13267726e-02  7.90016974e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
578  r_total and score:  1627.9975313279133 1.2110503673395132
Current Bleu score is:  1.2110503673395132

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 12 12 12 12 12 12 12 12 12]] [['2', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9  7 12  2  7 10 12 12 12 12]] [['2', '4', '7', '<s>', '4', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.15344488 -0.02464422  0.
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  7  2  5  8 10 12 12 12 12]] [['7', '4', '<s>', '5', '3', '8', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.63512916e-01  1.44200010e-02
 -1.60551682e-02  5.61063395e-01 -9.54616696e-02 -7.23013189e-02
 -5.67107911e-02  4.74060426e-01]
579  r_total and score:  2424.672957419238 1.8043736085467283
Current Bleu score is:  1.8043736085467283

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 10 12  2  7 10 12 12 12 12]] [['2', '8', '7', '<s>', '4', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.20245757 -0.02930708 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  7  2  5  8 10 12 12 12 12]] [['7', '4', '<s>', '5', '3', '8', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.63512916e-01  1.44200010e-02
 -1.60551682e-02  5.61063395e-01 -9.54616696e-02 -7.23013189e-02
 -5.67107911e-02  4.74060426e-01]
580  r_total and score:  2576.789217475369 2.192458179698456
Current Bleu score is:  2.192458179698456

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 12  2  7 10 12 12 12 12]] [['3', '8', '7', '<s>', '4', '8', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.02464422 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  7  7  5  8 10 12 12 12 12]] [['7', '4', '4', '5', '3', '8', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -1.91961772e-02
 -1.81919385e-04  8.43616334e-01 -1.95988249e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]
581  r_total and score:  3320.9058472718075 2.3769196767752923
Current Bleu score is:  2.3769196767752923

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 11 11 11 11 11 11 11 11 11]] [['5', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 11  2 10  9 11 11 11 11]] [['0', '8', '0', '<s>', '8', '2', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.02464422  0.48293968
 -0.08027338 -0.06079792 -0.0476879   0.39863571]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  7  7  5  8 10 11 11 11 11]] [['5', '4', '4', '5', '3', '8', '0', '0', '0', '0']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.41027304  -0.03419142
   0.18472533  -0.24644218  -0.16619201  -0.12003669   0.75832357]
582  r_total and score:  3012.2034146291144 1.855039697924444
Current Bleu score is:  1.855039697924444

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 10  9  7 10  9  9  9  9  9]] [['2', '8', '2', '4', '8', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.21018242  2.85423596 -2.23661849 -0.18699762 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  7  5  5  8  9  9  9  9  9]] [['7', '4', '5', '5', '3', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.05226761 -0.00608019 -0.01415137
 -0.03485219 -0.0235031  -0.01697575  0.10724315]
583  r_total and score:  4034.098611137163 2.957503978499661
Current Bleu score is:  2.957503978499661

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 10  9  5 10  9  9  9  9  9]] [['2', '8', '2', '5', '8', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.21018242  2.85423596  6.23306592 -1.38393724 -2.01953311
 -1.2196995  -0.82252282 -0.59408945  3.75311927]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[9 7 5 8 5 9 9 9 9 9]] [['2', '4', '5', '3', '5', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.05226761 -0.00608019 -0.01415137
 -0.03485219 -0.0235031  -0.01697575  0.10724315]
584  r_total and score:  3961.185352492081 2.8926152106846383
Current Bleu score is:  2.8926152106846383

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 10  9  7  5  9  9  9  9  9]] [['2', '8', '2', '4', '5', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.21018242  2.85423596 -2.23661849 -0.06578356 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  9  7  8 13  9  9  9  9  9]] [['2', '2', '4', '3', '1', '2', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
 -1.00264689e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
585  r_total and score:  3325.4951143900066 1.705642599076722
Current Bleu score is:  1.705642599076722

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 10  9  7  5  9  9  9  9  9]] [['2', '8', '2', '4', '5', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.21018242  2.85423596 -2.23661849 -0.06578356 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[9 7 7 5 7 9 9 9 9 9]] [['2', '4', '4', '5', '4', '2', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -1.91961772e-02
  7.47002056e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
586  r_total and score:  3415.537864204608 2.0183471787081837
Current Bleu score is:  2.0183471787081837

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 5 5 5 5 5 5 5 5 5]] [['5', '5', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  5  7  5  9  5  5  5  5]] [['3', '8', '5', '4', '5', '2', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.03214713
  0.60315075 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5  8 13  9  5  5  5  5]] [['5', '5', '5', '3', '1', '2', '5', '5', '5', '5']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
587  r_total and score:  2168.4953983816795 0.844419656681402
Current Bleu score is:  0.844419656681402

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  5  7 10  9  9  9  9  9]] [['5', '8', '5', '4', '8', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534   0.75339124
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5  8 13 10  9  9  9  9]] [['5', '5', '5', '3', '1', '8', '2', '2', '2', '2']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.05226761 -0.01973199 -0.00049958
 -0.03485219 -0.0235031  -0.01697575  0.10724315]
588  r_total and score:  2248.0726798944556 1.7590285293971886
Current Bleu score is:  1.7590285293971886

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  7  5  7 10 10 12 12 12 12]] [['5', '4', '5', '4', '8', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5  7  7 10 12 12 12 12]] [['5', '5', '5', '4', '4', '8', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438  0.88538718 -0.11096112 -0.00280932
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
589  r_total and score:  1950.5239272513084 1.5984975100104708
Current Bleu score is:  1.5984975100104708

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 12 12 12 12 12 12 12 12 12]] [['3', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  8  7 10 10  9  9  9  9]] [['3', '8', '3', '4', '8', '8', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
  0.56943476 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5  8 13 10  9  9  9  9]] [['5', '5', '5', '3', '1', '8', '2', '2', '2', '2']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.05226761 -0.01973199 -0.00049958
 -0.03485219 -0.0235031  -0.01697575  0.10724315]
590  r_total and score:  1591.9059957356678 1.5090448455330177
Current Bleu score is:  1.5090448455330177

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 9 9 9 9 9 9 9 9 9]] [['3', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  7 10 10  9  9  9  9]] [['3', '8', '2', '4', '8', '8', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  7  8 13 10  9  9  9  9]] [['3', '8', '4', '3', '1', '8', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.06136673e+01 -1.56361727e+00
 -1.31955752e-01 -3.34086660e-03 -2.33070620e-01 -1.57174700e-01
 -1.13523697e-01  7.17178151e-01]
591  r_total and score:  2632.4760082590005 1.8998713759382317
Current Bleu score is:  1.8998713759382317

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 9 9 9 9 9 9 9 9 9]] [['3', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  7 10  9  9  9  9  9]] [['3', '8', '2', '4', '8', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 5 5 8 8 9 9 9 9 9]] [['3', '5', '5', '3', '3', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.08918036 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
592  r_total and score:  2456.5918094356575 1.8368472420588329
Current Bleu score is:  1.8368472420588329

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 9 9 9 9 9 9 9 9 9]] [['3', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  7  4  9  9  9  9  9]] [['3', '8', '2', '4', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 4 5 8 8 9 9 9 9 9]] [['3', '9', '5', '3', '3', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
593  r_total and score:  3811.8567686841434 2.8425347156605083
Current Bleu score is:  2.8425347156605083

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  9  2  4 10  9  9  9  9]] [['5', '8', '2', '<s>', '9', '8', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-01 -2.10182424e-01  3.36939485e+00 -3.11955158e+00
 -1.24740945e-01 -1.11022302e-16  3.20228727e+00 -4.83508061e-01
 -3.79247917e-01  3.17023314e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  4  2 13  8  9  9  9  9  9]] [['5', '9', '<s>', '1', '3', '2', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.16351292 -0.01000653 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
594  r_total and score:  3634.3369934032817 2.429653597463982
Current Bleu score is:  2.429653597463982

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  9  2  4  9  9  9  9  9]] [['5', '8', '2', '<s>', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.21018242  3.36939485 -3.11955158 -0.12474094 -0.13216764
 -0.09546167 -0.07230132 -0.05671079  0.47406043]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  4  2 13  8  9  9  9  9  9]] [['2', '9', '<s>', '1', '3', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01516728 -0.00177944  0.08149774 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]
595  r_total and score:  3835.355977278087 2.8244729320443605
Current Bleu score is:  2.8244729320443605

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  9  2  4  9  9  9  9  9]] [['5', '8', '2', '<s>', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.21018242  3.36939485 -3.11955158 -0.12474094 -0.13216764
 -0.09546167 -0.07230132 -0.05671079  0.47406043]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[9 5 5 8 8 9 9 9 9 9]] [['2', '5', '5', '3', '3', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
596  r_total and score:  3605.686285126814 3.056544027145955
Current Bleu score is:  3.056544027145955

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9 13  4  9  9  9  9  9]] [['1', '8', '2', '1', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[9 5 8 8 8 9 9 9 9 9]] [['2', '5', '3', '3', '3', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
597  r_total and score:  3069.6145483305368 2.0608306011678685
Current Bleu score is:  2.0608306011678685
EPOCH %d 19
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[9 9 9 9 9 9 9 9 9 9]] [['2', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  2  4 10  9  9  9  9]] [['4', '8', '2', '<s>', '9', '8', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.69649546e+00
 -9.02848457e-02  0.00000000e+00  2.98006409e+00 -4.49954951e-01
 -3.52929955e-01  2.95023436e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[9 2 8 8 8 5 9 9 9 9]] [['2', '<s>', '3', '3', '3', '5', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.02706622  0.11170286 -0.01000653 -0.02464422  0.
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
598  r_total and score:  2284.4811265968365 1.0923529186302035
Current Bleu score is:  1.0923529186302035

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 12 12 12 12 12 12 12 12 12]] [['3', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  7  4 10 12 12 12 12]] [['4', '8', '2', '4', '9', '8', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -1.21214063e-01 -2.16896651e-01 -1.46267540e-01
 -1.05645704e-01  6.67409472e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  2  8  8  8  5 12 12 12 12]] [['2', '<s>', '3', '3', '3', '5', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.02706622  0.11170286 -0.01000653 -0.02464422  0.
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
599  r_total and score:  2267.1577320967676 1.690180291130913
Current Bleu score is:  1.690180291130913

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 11  7 12 10 11 11 11 11]] [['1', '8', '0', '4', '7', '8', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  2 12  8  8  2 11 11 11 11]] [['0', '<s>', '7', '3', '3', '<s>', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.02706622 -0.00266619  0.10436252 -0.02464422 -0.03771428
 -0.007131   -0.00574628 -0.00473096  0.04913271]
600  r_total and score:  2760.736774070454 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 11 11 11 11 11 11 11 11 11]] [['5', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 11  5  4 10 11 11 11 11]] [['4', '8', '0', '5', '9', '8', '0', '0', '0', '0']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -2.16389877e-01 -4.72393767e-02
  1.02212848e+00 -1.21214063e-01 -2.16896651e-01 -1.46267540e-01
 -1.05645704e-01  6.67409472e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10  5  7 12  2 11 11 11 11]] [['0', '8', '5', '4', '7', '<s>', '0', '0', '0', '0']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00  5.07598570e+00
 -7.42041723e-01 -2.53746883e+00 -5.94089451e-01 -4.49954951e-01
 -3.52929955e-01  2.95023436e+00]
601  r_total and score:  3077.2940857088197 1.4151333765584262
Current Bleu score is:  1.4151333765584262

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 11 11 11 11 11 11 11 11 11]] [['3', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  8 11  5  4  2 11 11 11 11]] [['4', '3', '0', '5', '9', '<s>', '0', '0', '0', '0']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  1.24767480e-02  1.69612658e-01
  9.38352275e-01 -5.48824457e-01 -8.02733758e-02 -6.07979199e-02
 -4.76879010e-02  3.98635713e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10  8  7  8  2 11 11 11 11]] [['0', '8', '3', '4', '3', '<s>', '0', '0', '0', '0']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -4.75455349e-02 -5.22676090e-02
  8.26693670e-01 -3.79440093e-01 -8.88370936e-02 -6.72839587e-02
 -5.27753378e-02  4.41162936e-01]
602  r_total and score:  2254.8630923970036 1.223324874950367
Current Bleu score is:  1.223324874950367

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  8 12  5  4 10 12 12 12 12]] [['4', '3', '7', '5', '9', '8', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  1.24767480e-02  1.69612658e-01
  9.38352275e-01  0.00000000e+00 -2.16896651e-01 -1.46267540e-01
 -1.05645704e-01  6.67409472e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10  5  7  8  9 12 12 12 12]] [['7', '8', '5', '4', '3', '2', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00  5.07598570e+00
  4.71251061e+01 -3.93855054e+00 -9.69991313e+00 -6.54128323e+00
 -4.72461950e+00  2.98474590e+01]
603  r_total and score:  3843.302809581191 2.4513557099575567
Current Bleu score is:  2.4513557099575567

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  7  5  7  8  9 12 12 12 12]] [['4', '4', '5', '4', '3', '2', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.01637845
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10  5 13  8  9 12 12 12 12]] [['7', '8', '5', '1', '3', '2', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.52021115e+00
 -1.02300788e-03 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
604  r_total and score:  3199.026510088641 1.927016541133597
Current Bleu score is:  1.927016541133597

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 7 5 7 8 9 9 9 9 9]] [['4', '4', '5', '4', '3', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.01637845
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 13  8  9  9  9  9  9]] [['5', '8', '5', '1', '3', '2', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.22865179
  -0.53217701  -1.31065241  -0.88385829  -0.63839066   4.03298912]
605  r_total and score:  3173.8920303285745 1.7615112857932667
Current Bleu score is:  1.7615112857932667

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 9 9 9 9 9 9 9 9 9]] [['4', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  5  7  9  9  9  9  9  9]] [['4', '8', '5', '4', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  7  7 13  9  9  9  9  9  9]] [['5', '4', '4', '1', '2', '2', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.06691772  -0.16480582  -0.1111393   -0.08027338   0.50712153]
606  r_total and score:  1975.203177192507 0.9975917609641416
Current Bleu score is:  0.9975917609641416

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 12  7 10  9 12 12 12 12]] [['4', '8', '7', '4', '8', '2', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267  0.6934356
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  7 13  8  7 12 12 12 12]] [['4', '4', '4', '1', '3', '4', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
607  r_total and score:  2130.0746089956338 1.0303940472388895
Current Bleu score is:  1.0303940472388895

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9 12  4  9  9  9  9  9]] [['4', '8', '2', '7', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  7 12  7  9  7  9  9  9  9]] [['7', '4', '7', '4', '2', '4', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
608  r_total and score:  1205.6906454222838 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 12 12  4  9 12 12 12 12]] [['4', '8', '7', '7', '9', '2', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.03214713
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  7 12  8  8  9 12 12 12 12]] [['7', '4', '7', '3', '3', '2', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
609  r_total and score:  2969.5008895262663 1.3593931427344284
Current Bleu score is:  1.3593931427344284

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  5  5  4  9 12 12 12 12]] [['5', '8', '5', '5', '9', '2', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786   1.02212848 -0.23074333
 -0.19598825 -0.13216764 -0.09546167  0.60307254]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  7  8  9 12 12 12 12]] [['7', '8', '7', '4', '3', '2', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -1.91961772e-02
  8.46243738e-01 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
610  r_total and score:  3500.3567214259015 2.1593378993592207
Current Bleu score is:  2.1593378993592207

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  5  5  4 10 12 12 12 12]] [['5', '8', '5', '5', '9', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786   1.02212848 -0.12121406
 -0.21689665 -0.14626754 -0.1056457   0.66740947]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  7  8  9 12 12 12 12]] [['7', '8', '7', '4', '3', '2', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -1.91961772e-02
  8.46243738e-01 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
611  r_total and score:  3123.9730699330407 1.6478701191299305
Current Bleu score is:  1.6478701191299305

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  5 12  4  9 12 12 12 12]] [['5', '8', '5', '7', '9', '2', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.04103261
 -0.03485219 -0.0235031  -0.01697575  0.10724315]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  8  8 11 12 12 12 12]] [['7', '8', '7', '3', '3', '0', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
612  r_total and score:  2597.874013933134 1.0367786737691371
Current Bleu score is:  1.0367786737691371

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 2 10  9  5  4  2 12 12 12 12]] [['<s>', '8', '2', '5', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 1.41272165e-02  1.83739875e-01  9.38352275e-01  5.25321168e+00
  3.47239306e+01 -1.48442627e+01 -2.80674862e+00 -2.26172356e+00
 -1.86209538e+00  1.93385314e+01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  8 13 11 12 12 12 12]] [['7', '8', '7', '3', '1', '0', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
613  r_total and score:  2913.6008577535576 1.7289099488783635
Current Bleu score is:  1.7289099488783635

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 11 11 11 11 11 11 11 11 11]] [['0', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 2 10 11  5  4 10 11 11 11 11]] [['<s>', '8', '0', '5', '9', '8', '0', '0', '0', '0']] 

Reward:  [ 0.01412722  0.18373987 -0.02796267 -0.01637845  0.6195292   0.
 -0.1056457  -0.08001456 -0.06276081  0.5246341 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 12  8  4 11 11 11 11 11]] [['0', '8', '7', '3', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
614  r_total and score:  2076.233134843487 1.1564584531269029
Current Bleu score is:  1.1564584531269029

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10 11 12  4 10 11 11 11 11]] [['7', '8', '0', '7', '9', '8', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446  0.66128847
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 12  8  4  5 11 11 11 11]] [['0', '8', '7', '3', '9', '5', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
615  r_total and score:  1942.8042678963184 1.07874309745837
Current Bleu score is:  1.07874309745837

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 11 11 11 11 11 11 11 11 11]] [['0', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 2 10  5  5  9  2 11 11 11 11]] [['<s>', '8', '5', '5', '2', '<s>', '0', '0', '0', '0']] 

Reward:  [ 0.01412722  0.18373987  0.00418446 -0.04852557 -0.01605517 -0.04963478
 -0.00938493 -0.00756253 -0.00622629  0.06466228]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 11  8 13 11 11 11 11 11]] [['0', '8', '0', '3', '1', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
616  r_total and score:  1784.2400775181854 1.5589348164381174
Current Bleu score is:  1.5589348164381174

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 11 11 11 11 11 11 11 11 11]] [['0', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10 11 12  9  9 11 11 11 11]] [['7', '8', '0', '7', '2', '2', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 12  5  9  5 11 11 11 11]] [['0', '8', '7', '5', '2', '5', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
617  r_total and score:  1415.1663933274033 0.9536248280156852
Current Bleu score is:  0.9536248280156852

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 11 11 11 11 11 11 11 11 11]] [['0', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 2 10  9 12  9 10 11 11 11 11]] [['<s>', '8', '2', '7', '2', '8', '0', '0', '0', '0']] 

Reward:  [ 0.01412722  0.18373987  0.93835228 -0.27287935 -0.16480582 -0.1111393
 -0.08027338 -0.06079792 -0.0476879   0.39863571]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 11  5  4 11 11 11 11 11]] [['0', '8', '0', '5', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
618  r_total and score:  969.6685240189613 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  9 12 11 11  9  9  9  9]] [['5', '8', '2', '7', '0', '0', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.21018242  3.36939485 -2.61061406 -0.20694689 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 10 12  8  8 11  9  9  9  9]] [['2', '8', '7', '3', '3', '0', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
619  r_total and score:  2050.373101342997 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 12 12 11 11 12 12 12 12]] [['4', '8', '7', '7', '0', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  5  8 11 12 12 12 12]] [['7', '8', '7', '5', '3', '0', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -1.91961772e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
620  r_total and score:  2089.14089006367 1.4948255796647931
Current Bleu score is:  1.4948255796647931

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[2 4 5 5 5 7 9 9 9 9]] [['<s>', '9', '5', '5', '5', '4', '2', '2', '2', '2']] 

Reward:  [ 0.01412722  0.18373987  0.00418446 -0.04852557 -0.02930708 -0.01976367
 -0.00465423 -0.01196497 -0.00938493  0.0784511 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5  5  8 11  9  9  9  9]] [['5', '8', '5', '5', '3', '0', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.22865179
  -0.53217701  -1.31065241  -0.88385829  -0.63839066   4.03298912]
621  r_total and score:  2110.1739475491504 1.352570381772265
Current Bleu score is:  1.352570381772265

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 11 12 12  5 11 12 12 12 12]] [['7', '0', '7', '7', '5', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  5  8 11 12 12 12 12]] [['7', '8', '7', '5', '3', '0', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -1.91961772e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
622  r_total and score:  967.8996970243309 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 11 11 11 11 11 11 11 11 11]] [['4', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 11 11  7 11 11 11 11 11 11]] [['5', '0', '0', '4', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10  7  8  8 11 11 11 11 11]] [['0', '8', '4', '3', '3', '0', '0', '0', '0', '0']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -4.75455349e-02  8.85387179e-01
 -1.10961119e-01 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
623  r_total and score:  974.7323866671055 0.7824646453177204
Current Bleu score is:  0.7824646453177204

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 11 11 11 11 11 11 11 11 11]] [['4', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11 11  7  4 11 11 11 11 11]] [['4', '0', '0', '4', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10  7  8  4 11 11 11 11 11]] [['0', '8', '4', '3', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -4.75455349e-02  8.85387179e-01
 -1.10961119e-01 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
624  r_total and score:  898.1973997274819 0.8658582980547532
Current Bleu score is:  0.8658582980547532

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11 12  7  4 11 12 12 12 12]] [['4', '0', '7', '4', '9', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10  7 11  9 11 12 12 12 12]] [['7', '8', '4', '0', '2', '0', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
625  r_total and score:  2647.7384519136012 1.6134279659994593
Current Bleu score is:  1.6134279659994593

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 2 10 13  2  5  2 12 12 12 12]] [['<s>', '8', '1', '<s>', '5', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.01412722  0.18373987 -0.02796267 -0.0820684   0.00234435 -0.02612533
 -0.00562609 -0.00471389 -0.00400762  0.04970745]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 13  4  8 12 12 12 12 12]] [['7', '8', '1', '9', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
626  r_total and score:  3139.342989976605 2.1247105604118155
Current Bleu score is:  2.1247105604118155

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 13 12 12 12 12 12 12 12 12]] [['1', '1', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 2 10  5  2  4  2 13 13 13 13]] [['<s>', '8', '5', '<s>', '9', '<s>', '1', '1', '1', '1']] 

Reward:  [ 0.01412722  0.18373987  0.00418446 -0.09759632 -0.00465423 -0.02891243
 -0.00622629 -0.00521678 -0.00443516  0.05501034]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13  4  8 13 13 13 13 13]] [['1', '8', '1', '9', '3', '1', '1', '1', '1', '1']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
627  r_total and score:  2418.680308544152 1.379940704750035
Current Bleu score is:  1.379940704750035

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  5 12  4 12 12 12 12 12]] [['5', '8', '5', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13  4  4 12 12 12 12 12]] [['1', '8', '1', '9', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
628  r_total and score:  1503.8373872496686 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 13 12 12 12 12 12 12 12 12]] [['1', '1', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  5 13  9 13 12 12 12 12]] [['5', '8', '5', '1', '2', '1', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13  4  4 13 13 13 13 13]] [['1', '8', '1', '9', '9', '1', '1', '1', '1', '1']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
629  r_total and score:  2340.116809947007 1.2353393264658914
Current Bleu score is:  1.2353393264658914

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  5  7  9 12 12 12 12 12]] [['5', '8', '5', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13  7  8 12 12 12 12 12]] [['1', '8', '1', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -1.91961772e-02
  8.46243738e-01 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
630  r_total and score:  2797.024229818494 1.1177144134739336
Current Bleu score is:  1.1177144134739336
EPOCH %d 20
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  5 12 12 12 12 12 12 12 12]] [['1', '5', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        2.18606798 -1.68574677 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10 13 13 11  5  5  5  5  5]] [['5', '8', '1', '1', '0', '5', '5', '5', '5', '5']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13  7 11 13  5  5  5  5]] [['1', '8', '1', '4', '0', '1', '5', '5', '5', '5']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.01605517 -0.01325191 -0.01697575  0.10724315]
631  r_total and score:  1876.228927568008 1.1246826503806981
Current Bleu score is:  1.1246826503806981

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  8  8  8  8  8  8  8  8  8]] [['1', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 11  5 13 11  5  8  8  8  8]] [['9', '0', '5', '1', '0', '5', '3', '3', '3', '3']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 11 13  8 11  5  8  8  8  8]] [['1', '0', '1', '3', '0', '5', '3', '3', '3', '3']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307  0.01442
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
632  r_total and score:  1822.9083465780081 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 5 8 8 8 8 8 8 8 8]] [['4', '5', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        2.18606798 -1.68574677 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 11  5  7  4  5  8  8  8  8]] [['3', '0', '5', '4', '9', '5', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  7  8 11  5  5  5  5  5]] [['5', '0', '4', '3', '0', '5', '5', '5', '5', '5']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553  0.88538718 -0.11096112 -0.00280932
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
633  r_total and score:  1568.9327477957386 1.1758896389792066
Current Bleu score is:  1.1758896389792066

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 10 10 10 10 10 10 10 10 10]] [['4', '8', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 11 10 13  4 10 10 10 10 10]] [['9', '0', '8', '1', '9', '8', '8', '8', '8', '8']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.01169815  0.73183599
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10  7  8 11 10 10 10 10 10]] [['8', '8', '4', '3', '0', '8', '8', '8', '8', '8']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164  0.9335185  -0.11923548 -0.07957902
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
634  r_total and score:  1676.0031974408325 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 8 8 8 8 8 8 8 8 8]] [['4', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 11  8  7 11  8  8  8  8  8]] [['3', '0', '3', '4', '0', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  7  8 11  8  8  8  8  8]] [['3', '8', '4', '3', '0', '3', '3', '3', '3', '3']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.56361727  -0.13195575
  -0.08806867  -0.21689665  -0.14626754  -0.1056457    0.66740947]
635  r_total and score:  1209.5470467262476 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 11 11 11 11 11 11 11 11 11]] [['1', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 11 11 13  4 11 11 11 11 11]] [['5', '0', '0', '1', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 13  8  6 11 11 11 11 11]] [['0', '8', '1', '3', '6', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
636  r_total and score:  1409.6535502587508 1.2755025267696876
Current Bleu score is:  1.2755025267696876

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  8  8  8  8  8  8  8  8  8]] [['1', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 11  8 13  6  8  8  8  8  8]] [['9', '0', '3', '1', '6', '3', '3', '3', '3', '3']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 11 13  8  6  8  8  8  8  8]] [['3', '0', '1', '3', '6', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
637  r_total and score:  1232.9130648089545 1.5401624460553964
Current Bleu score is:  1.5401624460553964

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  8  8  8  8  8  8  8  8  8]] [['7', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 11  8 13  4  8  8  8  8  8]] [['3', '0', '3', '1', '9', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 13  8  6  8  8  8  8  8]] [['7', '8', '1', '3', '6', '3', '3', '3', '3', '3']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
638  r_total and score:  1630.0430818430848 1.623920479038311
Current Bleu score is:  1.623920479038311

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  8 12 12 12 12 12 12 12 12]] [['1', '3', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 2 10  8 13  6  8 12 12 12 12]] [['<s>', '8', '3', '1', '6', '3', '7', '7', '7', '7']] 

Reward:  [ 0.01412722  0.18373987 -0.02796267 -0.04080498 -0.02464422 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 13  8  6  8  8  8  8  8]] [['7', '8', '1', '3', '6', '3', '3', '3', '3', '3']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
639  r_total and score:  2159.3644189544007 1.3239857600836482
Current Bleu score is:  1.3239857600836482

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  4 13  6 12 12 12 12 12]] [['5', '8', '9', '1', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.29810008 -0.1470917  -0.03680094 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  9  9 12 12 12 12 12]] [['7', '8', '7', '2', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
640  r_total and score:  3051.6749337583087 2.340042527060647
Current Bleu score is:  2.340042527060647

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 12 13  4 12 12 12 12 12]] [['1', '8', '7', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 13  9  6 12 12 12 12 12]] [['7', '8', '1', '2', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
641  r_total and score:  3480.7004793481046 2.557442122548271
Current Bleu score is:  2.557442122548271

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  8 13  4  8 12 12 12 12]] [['5', '8', '3', '1', '9', '3', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 13  9  6  8  8  8  8  8]] [['7', '8', '1', '2', '6', '3', '3', '3', '3', '3']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307  0.01442
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
642  r_total and score:  2570.2693064028736 1.5732495780955889
Current Bleu score is:  1.5732495780955889

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  8  8  8  8  8  8  8  8  8]] [['1', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  8 13  9  8  8  8  8  8]] [['5', '8', '3', '1', '2', '3', '3', '3', '3', '3']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 13  9  9  8  8  8  8  8]] [['7', '8', '1', '2', '2', '3', '3', '3', '3', '3']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307  0.01442
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
643  r_total and score:  2534.5173485909877 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  8  8  8  8  8  8  8  8  8]] [['7', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  4  8 13  9  8  8  8  8  8]] [['5', '9', '3', '1', '2', '3', '3', '3', '3', '3']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.06578356
  -0.30199064  -0.18238762  -0.12299585  -0.08883709   0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 13  8  6  8  8  8  8  8]] [['7', '8', '1', '3', '6', '3', '3', '3', '3', '3']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
644  r_total and score:  2903.328772585092 1.4484011803349524
Current Bleu score is:  1.4484011803349524

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  8  8  8  8  8  8  8  8  8]] [['7', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  4  8 13  4  8  8  8  8  8]] [['3', '9', '3', '1', '9', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10 13  8  6  8  8  8  8  8]] [['3', '8', '1', '3', '6', '3', '3', '3', '3', '3']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.06691772  -0.16480582  -0.1111393   -0.08027338   0.50712153]
645  r_total and score:  1673.01504098569 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  8  8  8  8  8  8  8  8  8]] [['7', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  4  8 13  4  8  8  8  8  8]] [['9', '9', '3', '1', '9', '3', '3', '3', '3', '3']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10 13  8 11  8  8  8  8  8]] [['3', '8', '1', '3', '0', '3', '3', '3', '3', '3']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.06691772  -0.16480582  -0.1111393   -0.08027338   0.50712153]
646  r_total and score:  1618.3309204742804 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  8  8  8  8  8  8  8  8  8]] [['7', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  4  8 13  4  8  8  8  8  8]] [['9', '9', '3', '1', '9', '3', '3', '3', '3', '3']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10 13  8 11  8  8  8  8  8]] [['3', '8', '1', '3', '0', '3', '3', '3', '3', '3']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.06691772  -0.16480582  -0.1111393   -0.08027338   0.50712153]
647  r_total and score:  2059.190748968777 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  8  8  8  8  8  8  8  8  8]] [['1', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  4 13  4  8  8  8  8  8]] [['9', '8', '9', '1', '9', '3', '3', '3', '3', '3']] 

Reward:  [  0.91578194  21.39723407 -18.23802164  -2.61061406  -0.20694689
  -0.30199064  -0.18238762  -0.12299585  -0.08883709   0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10 13  7 11  8  8  8  8  8]] [['3', '8', '1', '4', '0', '3', '3', '3', '3', '3']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.41027304  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
648  r_total and score:  2220.335638349856 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  8  8  8  8  8  8  8  8  8]] [['1', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  4 13  4  8  8  8  8  8]] [['5', '8', '9', '1', '9', '3', '3', '3', '3', '3']] 

Reward:  [ 0.91578194 -0.21018242 -0.29810008 -0.1470917  -0.0201266  -0.05770696
 -0.03485219 -0.0235031  -0.01697575  0.10724315]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10 13  7 11  8  8  8  8  8]] [['3', '8', '1', '4', '0', '3', '3', '3', '3', '3']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.41027304  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
649  r_total and score:  2699.216909344275 1.3290460511723952
Current Bleu score is:  1.3290460511723952

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  4 13  9 12 12 12 12 12]] [['5', '8', '9', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.29810008 -0.1470917  -0.0201266  -0.05770696
 -0.03485219 -0.0235031  -0.01697575  0.10724315]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  5 13  7  9 12 12 12 12 12]] [['7', '5', '1', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
650  r_total and score:  2260.533472506223 1.1838622286623854
Current Bleu score is:  1.1838622286623854

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 13  9 12 12 12 12 12]] [['1', '8', '9', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  5 12  8  9  4 12 12 12 12]] [['7', '5', '7', '3', '2', '9', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
651  r_total and score:  2771.6866098065 1.9693549094580942
Current Bleu score is:  1.9693549094580942

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 13  9  4 12 12 12 12]] [['1', '8', '9', '1', '2', '9', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.04103261
 -0.03485219 -0.0235031  -0.01697575  0.10724315]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  5 13  7  9  4  4  4  4  4]] [['1', '5', '1', '4', '2', '9', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
652  r_total and score:  1847.1195704696854 1.0447806939448308
Current Bleu score is:  1.0447806939448308

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 13  4 12 12 12 12 12]] [['1', '8', '9', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  4 13  8  9  4 12 12 12 12]] [['5', '9', '1', '3', '2', '9', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
653  r_total and score:  2179.9939527373313 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 10 12 12 12 12 12 12 12 12]] [['1', '8', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 13  4 11 10 10 10 10]] [['1', '8', '9', '1', '9', '0', '8', '8', '8', '8']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10 13 11 11 13 10 10 10 10]] [['5', '8', '1', '0', '0', '1', '8', '8', '8', '8']] 

Reward:  [  0.33689735  13.19663097 -10.98279474  -1.52021115  -0.10026469
  -0.06691772  -0.09028485  -0.12299585  -0.08883709   0.56122223]
654  r_total and score:  2335.567045507769 1.2323685490691854
Current Bleu score is:  1.2323685490691854

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 10 10 10 10 10 10 10 10 10]] [['5', '8', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 10 13  4 10 10 10 10 10]] [['1', '8', '8', '1', '9', '8', '8', '8', '8', '8']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446  0.66128847
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 13 11  9 10 10 10 10 10]] [['8', '8', '1', '0', '2', '8', '8', '8', '8', '8']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
655  r_total and score:  2532.327607499388 1.0193001064038998
Current Bleu score is:  1.0193001064038998

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 10 10 10 10 10 10 10 10 10]] [['4', '8', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 10 13  9 10 10 10 10 10]] [['1', '8', '8', '1', '2', '8', '8', '8', '8', '8']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 13  8 11 10 10 10 10 10]] [['8', '8', '1', '3', '0', '8', '8', '8', '8', '8']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
656  r_total and score:  2710.9722127938235 1.3891565892601532
Current Bleu score is:  1.3891565892601532

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 10  8  8  8  8  8  8  8  8]] [['1', '8', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 13  9 10 10 10 10 10]] [['1', '8', '9', '1', '2', '8', '8', '8', '8', '8']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  8 13  8  4 10 10 10 10 10]] [['9', '3', '1', '3', '9', '8', '8', '8', '8', '8']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307  0.01442
 -0.01605517 -0.0218721  -0.01579772  0.09980099]
657  r_total and score:  2013.541298386214 0.9279779698703022
Current Bleu score is:  0.9279779698703022

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  8  4 13  9 12 12 12 12 12]] [['1', '3', '9', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  8 13 11  9  4 12 12 12 12]] [['9', '3', '1', '0', '2', '9', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
658  r_total and score:  2023.813396038242 1.2451865539049614
Current Bleu score is:  1.2451865539049614

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  8  8 12 12 12 12 12 12 12]] [['1', '3', '3', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  8  8 13  4  8  8  8  8  8]] [['1', '3', '3', '1', '9', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8  8  8 11 11  8  8  8  8  8]] [['3', '3', '3', '0', '0', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
659  r_total and score:  1855.623591495668 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 12 13  4 12 12 12 12 12]] [['1', '9', '7', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8  4 13 11 11 12 12 12 12 12]] [['3', '9', '1', '0', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
660  r_total and score:  2523.5355868061315 1.2643616997405869
Current Bleu score is:  1.2643616997405869

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  9 12 13  4 12 12 12 12 12]] [['3', '2', '7', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 13 11  9 12 12 12 12 12]] [['7', '9', '1', '0', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
661  r_total and score:  2703.4534481455416 1.1345736021389456
Current Bleu score is:  1.1345736021389456

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  9  5 13  9 12 12 12 12 12]] [['3', '2', '5', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  4 13 11  8 13 12 12 12 12]] [['5', '9', '1', '0', '3', '1', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
662  r_total and score:  1589.3952392790789 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  5  5  5  5  5  5  5  5  5]] [['1', '5', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 0.05        2.18606798 -1.68574677 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4  5 13  4  5  5  5  5  5]] [['1', '9', '5', '1', '9', '5', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13 11 13  5  5  5  5  5]] [['1', '9', '1', '0', '1', '5', '5', '5', '5', '5']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619  0.10436252
 -0.00488055 -0.01976367 -0.01427485  0.09018038]
663  r_total and score:  1524.0084333610866 0.0
Current Bleu score is:  0.0
EPOCH %d 21
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  5  5  5  5  5  5  5  5  5]] [['1', '5', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 0.05        2.18606798 -1.68574677 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4  4 13 11  5  5  5  5  5]] [['1', '9', '9', '1', '0', '5', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.03214713
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13 11 13  7  5  5  5  5]] [['1', '9', '1', '0', '1', '4', '5', '5', '5', '5']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619  0.10436252
 -0.00488055 -0.00862019 -0.01579772  0.09980099]
664  r_total and score:  1981.945169706224 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4  5 13  9 12 12 12 12 12]] [['1', '9', '5', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13 11  8  6 12 12 12 12]] [['1', '9', '1', '0', '3', '6', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
665  r_total and score:  2405.1595555143986 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4 12 13  9 12 12 12 12 12]] [['4', '9', '7', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  4 13 11  8  6 12 12 12 12]] [['5', '9', '1', '0', '3', '6', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
666  r_total and score:  2682.5586490144938 1.3253594886002364
Current Bleu score is:  1.3253594886002364

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  9 12 13  9 12 12 12 12 12]] [['4', '2', '7', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12 11  8  9 12 12 12 12]] [['7', '9', '7', '0', '3', '2', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
667  r_total and score:  3146.0748945863875 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  8 10 13  9 10 12 12 12 12]] [['4', '3', '8', '1', '2', '8', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  4  7 11  8  9 10 10 10 10]] [['4', '9', '4', '0', '3', '2', '8', '8', '8', '8']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.01605517 -0.01325191 -0.01697575  0.10724315]
668  r_total and score:  2935.291724328394 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  8 10 13  4 12 12 12 12 12]] [['4', '3', '8', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13 11 11 12 12 12 12 12]] [['1', '9', '1', '0', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
669  r_total and score:  2210.480806385681 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 10 10 12 12 12 12 12 12 12]] [['4', '8', '8', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  8 10 13  4 10 10 10 10 10]] [['4', '3', '8', '1', '9', '8', '8', '8', '8', '8']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446  0.66128847
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  4  7 11  8 10 10 10 10 10]] [['4', '9', '4', '0', '3', '8', '8', '8', '8', '8']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.01132677  0.79001697
 -0.12474094 -0.13216764 -0.09546167  0.60307254]
670  r_total and score:  2644.690850043738 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7  5 12 12 12 12 12 12 12 12]] [['4', '5', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        2.18606798 -1.68574677 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  8  5 13  4  5  5  5  5  5]] [['4', '3', '5', '1', '9', '5', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[7 4 7 8 9 5 5 5 5 5]] [['4', '9', '4', '3', '2', '5', '5', '5', '5', '5']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703  0.82807057 -0.10026469  0.02518505
 -0.12474094 -0.13216764 -0.09546167  0.60307254]
671  r_total and score:  2438.2292576737864 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 10 13 10 10 12 12 12 12]] [['1', '9', '8', '1', '8', '8', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  4  7  7  8 10 10 10 12 10]] [['4', '9', '4', '4', '3', '8', '8', '8', '7', '8']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.77615869  5.4591733
 -0.83419297 -0.88385829 -0.63839066  4.03298912]
672  r_total and score:  2140.250216712626 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 5 5 5 5 5 5 5 5 5]] [['5', '5', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4  5 13  7  5  5  5  5  5]] [['1', '9', '5', '1', '4', '5', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 4 5 7 7 7 5 5 5 5]] [['5', '9', '5', '4', '4', '4', '5', '5', '5', '5']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553  0.88538718 -0.11096112 -0.07405663
 -0.18238762 -0.12299585 -0.08883709  0.56122223]
673  r_total and score:  2847.995104797569 1.637361085311026
Current Bleu score is:  1.637361085311026

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7  6 12 12 12 12 12 12 12 12]] [['4', '6', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4  6 13  4  6  6  6  6  6]] [['4', '9', '6', '1', '9', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 4 6 7 8 6 6 6 6 6]] [['5', '9', '6', '4', '3', '6', '6', '6', '6', '6']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.01919618  0.84624374 -0.07405663
 -0.18238762 -0.12299585 -0.08883709  0.56122223]
674  r_total and score:  2590.3128932406566 2.211199177799681
Current Bleu score is:  2.211199177799681

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 6 6 6 6 6 6 6 6 6]] [['5', '6', '6', '6', '6', '6', '6', '6', '6', '6']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4  6 13  4  6  6  6  6  6]] [['4', '9', '6', '1', '9', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[6 4 6 7 8 7 6 6 6 6]] [['6', '9', '6', '4', '3', '4', '6', '6', '6', '6']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
675  r_total and score:  2170.451061462794 1.2262541100788726
Current Bleu score is:  1.2262541100788726

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 6 6 6 6 6 6 6 6 6]] [['4', '6', '6', '6', '6', '6', '6', '6', '6', '6']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4  6 13 10  6  6  6  6  6]] [['4', '9', '6', '1', '8', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 4 7 7 8 7 6 6 6 6]] [['5', '9', '4', '4', '3', '4', '6', '6', '6', '6']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768  0.84624374 -0.07405663
 -0.18238762 -0.12299585 -0.08883709  0.56122223]
676  r_total and score:  2231.722606019031 1.7053201224403236
Current Bleu score is:  1.7053201224403236

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 6 6 6 6 6 6 6 6 6]] [['4', '6', '6', '6', '6', '6', '6', '6', '6', '6']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  5  6 13  4  6  6  6  6  6]] [['4', '5', '6', '1', '9', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  4 13 11 11  7  6  6  6  6]] [['5', '9', '1', '0', '0', '4', '6', '6', '6', '6']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307  0.01442
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
677  r_total and score:  2596.908862673494 2.099301082489974
Current Bleu score is:  2.099301082489974

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 6 6 6 6 6 6 6 6 6]] [['4', '6', '6', '6', '6', '6', '6', '6', '6', '6']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4  6  7 11  6  6  6  6  6]] [['4', '9', '6', '4', '0', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  4  7 11 11  7  6  6  6  6]] [['6', '9', '4', '0', '0', '4', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
678  r_total and score:  2929.894704712514 1.6985585954492681
Current Bleu score is:  1.6985585954492681

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 6 6 6 6 6 6 6 6 6]] [['4', '6', '6', '6', '6', '6', '6', '6', '6', '6']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 4 6 7 5 6 6 6 6 6]] [['4', '9', '6', '4', '5', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 10  7 11  8  6  6  6  6  6]] [['6', '8', '4', '0', '3', '6', '6', '6', '6', '6']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
679  r_total and score:  2484.145594149642 1.1829081565472537
Current Bleu score is:  1.1829081565472537

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  6  6  6  6  6  6  6  6  6]] [['1', '6', '6', '6', '6', '6', '6', '6', '6', '6']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4  6 13  4  6  6  6  6  6]] [['1', '9', '6', '1', '9', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 10 13 11 11  6  6  6  6  6]] [['6', '8', '1', '0', '0', '6', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
680  r_total and score:  1464.090870158385 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 6 6 6 6 6 6 6 6 6]] [['4', '6', '6', '6', '6', '6', '6', '6', '6', '6']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 4 6 7 4 6 6 6 6 6]] [['4', '9', '6', '4', '9', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 10  7  7  9  7  6  6  6  6]] [['6', '8', '4', '4', '2', '4', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
681  r_total and score:  1873.4521529701153 1.1211883770430873
Current Bleu score is:  1.1211883770430873

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 6 6 6 6 6 6 6 6 6]] [['4', '6', '6', '6', '6', '6', '6', '6', '6', '6']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 4 6 7 4 6 6 6 6 6]] [['4', '9', '6', '4', '9', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 10  5  7  9  7  6  6  6  6]] [['6', '8', '5', '4', '2', '4', '6', '6', '6', '6']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00  5.07598570e+00
 -7.42041723e-01 -4.95246511e-01 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]
682  r_total and score:  2152.091666871535 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  6  6  6  6  6  6  6  6  6]] [['7', '6', '6', '6', '6', '6', '6', '6', '6', '6']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 4 6 7 4 6 6 6 6 6]] [['4', '9', '6', '4', '9', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  4  7 11 11  6  6  6  6  6]] [['5', '9', '4', '0', '0', '6', '6', '6', '6', '6']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
683  r_total and score:  1537.1584543350714 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5  6 12 12 12 12 12 12 12 12]] [['5', '6', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 4 6 7 4 6 6 6 6 6]] [['4', '9', '6', '4', '9', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 10  7 11  8  7  6  6  6  6]] [['6', '8', '4', '0', '3', '4', '6', '6', '6', '6']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
684  r_total and score:  2553.9255918027334 1.2954893991679541
Current Bleu score is:  1.2954893991679541

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4  6  7  4  6  6 12 12 12]] [['4', '9', '6', '4', '9', '6', '6', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  4  7 11  5  7  6  6  6  6]] [['6', '9', '4', '0', '5', '4', '6', '6', '6', '6']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01 -4.83528130e-02
  1.13267726e-02  6.97914203e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
685  r_total and score:  1956.5510668818943 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4  6  7  4 12 12 12 12 12]] [['4', '9', '6', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  4  7 11  5  7 12 12 12 12]] [['6', '9', '4', '0', '5', '4', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01 -4.83528130e-02
  1.13267726e-02  6.97914203e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
686  r_total and score:  2087.273404371999 1.291294039574053
Current Bleu score is:  1.291294039574053

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  6  7  4 12 12 12 12 12]] [['4', '8', '6', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 10  7 11 13  7 12 12 12 12]] [['6', '8', '4', '0', '1', '4', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
687  r_total and score:  2867.1457719617215 1.148848875043173
Current Bleu score is:  1.148848875043173

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  6  7  4 12 12 12 12 12]] [['4', '8', '6', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10  5 10 12  7 12 12 12 12]] [['7', '8', '5', '8', '7', '4', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.19448980e+00
 -1.31955752e-01 -3.34086660e-03 -2.33070620e-01 -1.57174700e-01
 -1.13523697e-01  7.17178151e-01]
688  r_total and score:  2867.565743260362 1.3341249225709144
Current Bleu score is:  1.3341249225709144

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  6  7  4 12 12 12 12 12]] [['4', '8', '6', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 10  5 10  8  7 12 12 12 12]] [['6', '8', '5', '8', '3', '4', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.19448980e+00
 -4.06606766e-02 -2.45886602e-02 -2.46442176e-01 -1.66192011e-01
 -1.20036695e-01  7.58323567e-01]
689  r_total and score:  2326.441913536205 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 12 13  4 12 12 12 12 12]] [['1', '8', '7', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10  5 10 12  6 12 12 12 12]] [['7', '8', '5', '8', '7', '6', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.19448980e+00
 -1.31955752e-01 -8.80686673e-02 -2.16896651e-01 -1.46267540e-01
 -1.05645704e-01  6.67409472e-01]
690  r_total and score:  3648.7240532105607 1.7998477009671785
Current Bleu score is:  1.7998477009671785

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6  6  6 12 12 12 12 12 12 12]] [['6', '6', '6', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 9 6 7 9 6 6 6 6 6]] [['4', '2', '6', '4', '2', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 10 12 10  9  6  6  6  6  6]] [['6', '8', '7', '8', '2', '6', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
691  r_total and score:  2208.2338589219225 0.8878800624136332
Current Bleu score is:  0.8878800624136332

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6 12 12 12 12 12 12 12 12 12]] [['6', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12  4  6 12  9  6 12 12 12 12]] [['7', '9', '6', '7', '2', '6', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  4 12 10  8  6 12 12 12 12]] [['6', '9', '7', '8', '3', '6', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
692  r_total and score:  2029.1735082339874 1.4054414178075114
Current Bleu score is:  1.4054414178075114

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12  4 12 12  9 12 12 12 12 12]] [['7', '9', '7', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12 10  8  6 12 12 12 12]] [['7', '9', '7', '8', '3', '6', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
693  r_total and score:  2087.289724849781 1.4628273927538575
Current Bleu score is:  1.4628273927538575

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  6 12 12 12 12 12 12 12 12]] [['7', '6', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 4 6 7 9 6 6 6 6 6]] [['4', '9', '6', '4', '2', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  4 12 10  8  6  6  6  6  6]] [['6', '9', '7', '8', '3', '6', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
694  r_total and score:  1646.6239639786127 1.3767085138100894
Current Bleu score is:  1.3767085138100894

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 9 6 7 9 6 6 6 6 6]] [['4', '2', '6', '4', '2', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  4 12 10  4  6  6  6  6  6]] [['6', '9', '7', '8', '9', '6', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
695  r_total and score:  1103.4330853585345 0.798359216893685
Current Bleu score is:  0.798359216893685

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 5 5 5 5 5 5 5 5 5]] [['5', '5', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 4 5 7 9 5 5 5 5 5]] [['4', '9', '5', '4', '2', '5', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815  0.73183599
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  4  5 10  8  5  5  5  5  5]] [['5', '9', '5', '8', '3', '5', '5', '5', '5', '5']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553  0.88538718 -0.03419142 -0.07957902
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
696  r_total and score:  1689.5161448404012 1.3175566585866592
Current Bleu score is:  1.3175566585866592

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5  5 12 12 12 12 12 12 12 12]] [['5', '5', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 9 5 7 9 5 5 5 5 5]] [['4', '2', '5', '4', '2', '5', '5', '5', '5', '5']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 4 5 8 4 5 5 5 5 5]] [['5', '9', '5', '3', '9', '5', '5', '5', '5', '5']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
697  r_total and score:  1947.1405792741198 1.2181715079409017
Current Bleu score is:  1.2181715079409017
EPOCH %d 22
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 5 5 5 5 5 5 5 5 5]] [['5', '5', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 4 5 7 4 5 5 5 5 5]] [['4', '9', '5', '4', '9', '5', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 4 5 8 4 5 5 5 5 5]] [['5', '9', '5', '3', '9', '5', '5', '5', '5', '5']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
698  r_total and score:  2293.7298507042206 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 5 5 5 5 5 5 5 5 5]] [['5', '5', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  5  7  9  5  5  5  5  5]] [['4', '8', '5', '4', '2', '5', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815  0.73183599
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 10  8  5  5  5  5  5]] [['5', '8', '5', '8', '3', '5', '5', '5', '5', '5']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -28.5925009   -0.37293925
  -0.56270868  -1.3858462   -0.93456636  -0.67501594   4.2643668 ]
699  r_total and score:  2305.6903987822807 1.3689149955826585
Current Bleu score is:  1.3689149955826585

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  5  7  9  5 12 12 12 12]] [['7', '8', '5', '4', '2', '5', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815  0.73183599
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5  7  8  5  5  5  5  5]] [['5', '8', '5', '4', '3', '5', '5', '5', '5', '5']] 

Reward:  [  0.33689735  13.19663097  23.25441579  23.86512185  21.22000934
  -5.88950674 -14.50475327  -9.7814999   -7.06495402  44.63236138]
700  r_total and score:  2303.680936385023 1.853723137200609
Current Bleu score is:  1.853723137200609

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10 12  7  4 12 12 12 12 12]] [['7', '8', '7', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  7  6 12 12 12 12 12]] [['7', '8', '7', '4', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
701  r_total and score:  2465.194130312274 1.4275281235196668
Current Bleu score is:  1.4275281235196668

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  5  7  4  5 12 12 12 12]] [['5', '8', '5', '4', '9', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5  7  7  5 12 12 12 12]] [['5', '8', '5', '4', '4', '5', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 13.19663097 23.25441579 23.86512185 -5.90124062 -3.93855054
 -9.69991313 -6.54128323 -4.7246195  29.84745896]
702  r_total and score:  2277.478134247015 1.572063561739663
Current Bleu score is:  1.572063561739663

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6  6 12 12 12 12 12 12 12 12]] [['6', '6', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  6  7  9  6  6  6  6  6]] [['7', '8', '6', '4', '2', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  4  6 12  6  6  6  6  6  6]] [['6', '9', '6', '7', '6', '6', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
703  r_total and score:  3293.8239441081887 2.039583110878211
Current Bleu score is:  2.039583110878211

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  6  7  9 12 12 12 12 12]] [['4', '8', '6', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 10  6  7  7  6 12 12 12 12]] [['6', '8', '6', '4', '4', '6', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
704  r_total and score:  1962.9556823015091 1.2564592842847546
Current Bleu score is:  1.2564592842847546

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 12  7  9 12 12 12 12 12]] [['4', '8', '7', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  7  8  6 12 12 12 12]] [['7', '8', '7', '4', '3', '6', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -1.91961772e-02
  8.46243738e-01 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
705  r_total and score:  2165.555883752019 1.806497654140781
Current Bleu score is:  1.806497654140781

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 12  7  9 12 12 12 12 12]] [['4', '8', '7', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  7 13 12 12 12 12 12]] [['7', '8', '7', '4', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
706  r_total and score:  2061.209987873718 1.7415307619657965
Current Bleu score is:  1.7415307619657965

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  9 12  7  9 12 12 12 12 12]] [['4', '2', '7', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  7  7 12 12 12 12 12]] [['7', '8', '7', '4', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
707  r_total and score:  2048.0713994675048 1.5700296166598045
Current Bleu score is:  1.5700296166598045

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  9 12  7  7 12 12 12 12 12]] [['4', '2', '7', '4', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  7  7 12 12 12 12 12]] [['7', '8', '7', '4', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
708  r_total and score:  2276.135947226455 1.8651669220724183
Current Bleu score is:  1.8651669220724183

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  9 12  7  4 12 12 12 12 12]] [['4', '2', '7', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  6 12  7  9 12 12 12 12 12]] [['7', '6', '7', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
709  r_total and score:  1538.927063577281 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  9 12  7  9 12 12 12 12 12]] [['4', '2', '7', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  6 12  7 11  9 12 12 12 12]] [['7', '6', '7', '4', '0', '2', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
710  r_total and score:  1599.48992065503 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12  6 12  7  4  6 12 12 12 12]] [['7', '6', '7', '4', '9', '6', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  6 12  7  6  9 12 12 12 12]] [['7', '6', '7', '4', '6', '2', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
711  r_total and score:  1729.080104337161 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  6 12  7  4 12 12 12 12 12]] [['4', '6', '7', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  6 12  7 11  9 12 12 12 12]] [['7', '6', '7', '4', '0', '2', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
712  r_total and score:  1883.488014288679 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  6  5  7  4 12 12 12 12 12]] [['4', '6', '5', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  6  5  7  7 10 12 12 12 12]] [['5', '6', '5', '4', '4', '8', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553  0.88538718 -0.11096112 -0.00280932
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
713  r_total and score:  1527.500697944 1.319714639741644
Current Bleu score is:  1.319714639741644

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  6  7  4 12 12 12 12 12]] [['4', '8', '6', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  6  6  7  8 12 12 12 12 12]] [['6', '6', '6', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
714  r_total and score:  2126.2324097470773 1.2911327473450205
Current Bleu score is:  1.2911327473450205

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 6 6 6 6 6 6 6 6 6]] [['6', '6', '6', '6', '6', '6', '6', '6', '6', '6']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 6 6 7 4 6 6 6 6 6]] [['4', '6', '6', '4', '9', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[6 6 6 7 8 6 6 6 6 6]] [['6', '6', '6', '4', '3', '6', '6', '6', '6', '6']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
715  r_total and score:  1662.870547336264 0.911613134465346
Current Bleu score is:  0.911613134465346

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5  6 12 12 12 12 12 12 12 12]] [['5', '6', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 6 6 7 4 6 6 6 6 6]] [['4', '6', '6', '4', '9', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[6 6 6 7 8 6 6 6 6 6]] [['6', '6', '6', '4', '3', '6', '6', '6', '6', '6']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
716  r_total and score:  2066.580382425285 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 9 9 9 9 9 9 9 9 9]] [['6', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12  4  9  7  9  9  9  9  9  9]] [['7', '9', '2', '4', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[6 6 6 7 8 9 9 9 9 9]] [['6', '6', '6', '4', '3', '2', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
717  r_total and score:  2633.77136912491 1.5729278335367156
Current Bleu score is:  1.5729278335367156

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  4  9 12  9  9  9  9  9  9]] [['6', '9', '2', '7', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  4 12 12 10  9  9  9  9  9]] [['2', '9', '7', '7', '8', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
718  r_total and score:  2964.815971062985 1.7753547130124887
Current Bleu score is:  1.7753547130124887

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  4  9 12  9  9  9  9  9  9]] [['6', '9', '2', '7', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  4 12  7  4  9  9  9  9  9]] [['2', '9', '7', '4', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
719  r_total and score:  2831.445876837159 1.5122499145855757
Current Bleu score is:  1.5122499145855757

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  4 12 12  9 12 12 12 12 12]] [['6', '9', '7', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12 12  4 12 12 12 12 12]] [['7', '9', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
720  r_total and score:  2868.2911685241456 1.3009811534536897
Current Bleu score is:  1.3009811534536897

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  4  9 12  4  9  9  9  9  9]] [['5', '9', '2', '7', '9', '2', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407 -18.23802164  -2.61061406  -0.11318016
  -0.32451006  -0.19598825  -0.13216764  -0.09546167   0.60307254]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  4 12  7  4  9  9  9  9  9]] [['2', '9', '7', '4', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
721  r_total and score:  2307.82508426657 1.874243428151842
Current Bleu score is:  1.874243428151842

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[6 4 9 7 4 9 9 9 9 9]] [['6', '9', '2', '4', '9', '2', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  4 12  7  6 11  9  9  9  9]] [['2', '9', '7', '4', '6', '0', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
722  r_total and score:  2731.160938961413 1.5033762966158342
Current Bleu score is:  1.5033762966158342

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  4 12 12  4 12 12 12 12 12]] [['6', '9', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12 12  4 13 12 12 12 12]] [['7', '9', '7', '7', '9', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
723  r_total and score:  2016.5640210229144 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  4 12 12  4 12 12 12 12 12]] [['5', '9', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.06578356
  -0.30199064  -0.18238762  -0.12299585  -0.08883709   0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12 12  4 12 12 12 12 12]] [['7', '9', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
724  r_total and score:  2922.1214618391355 1.8312753825822414
Current Bleu score is:  1.8312753825822414

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  4 12 12  4 12 12 12 12 12]] [['6', '9', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7 10 12 12 12 12 12]] [['7', '9', '7', '4', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
725  r_total and score:  2054.858192704955 1.7355982164934864
Current Bleu score is:  1.7355982164934864

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  4 12 12  4 12 12 12 12 12]] [['6', '9', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  4 12 12 12 12 12]] [['7', '9', '7', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
726  r_total and score:  2572.6623543206542 2.2922820049888184
Current Bleu score is:  2.2922820049888184

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  4 12 12  4 12 12 12 12 12]] [['6', '9', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12 12 11 12 12 12 12 12]] [['7', '9', '7', '7', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
727  r_total and score:  3278.8243625150494 2.2795070569547775
Current Bleu score is:  2.2795070569547775

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  4 12 12  4 12 12 12 12 12]] [['6', '9', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  6 12  7  8 12 12 12 12 12]] [['7', '6', '7', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
728  r_total and score:  2748.4695523434357 2.406276723846001
Current Bleu score is:  2.406276723846001

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6 12 13 10 12 12 12 12 12]] [['6', '6', '7', '1', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  6 12  7  8 12 12 12 12 12]] [['7', '6', '7', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
729  r_total and score:  2204.8032248135723 2.006908565729438
Current Bleu score is:  2.006908565729438

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5  9  9 12 12 12 12 12 12 12]] [['5', '2', '2', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  5  2 10  5  5  5  5  5]] [['6', '8', '5', '<s>', '8', '5', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.20245757 -0.02930708 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5  7  8  5  5  5  5  5]] [['5', '8', '5', '4', '3', '5', '5', '5', '5', '5']] 

Reward:  [  0.33689735  13.19663097  23.25441579  23.86512185  21.22000934
  -5.88950674 -14.50475327  -9.7814999   -7.06495402  44.63236138]
730  r_total and score:  3146.6352511052064 2.0959057344502385
Current Bleu score is:  2.0959057344502385
EPOCH %d 23
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5  5 12 12 12 12 12 12 12 12]] [['5', '5', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  5  2  4  5  5  5  5  5]] [['6', '8', '5', '<s>', '9', '5', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.20245757 -0.01605517 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5  2  8  5  5  5  5  5]] [['5', '8', '5', '<s>', '3', '5', '5', '5', '5', '5']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -30.39851307  -0.83419297
  -0.88385829  -0.63839066  -0.48350806  -0.37924792   3.17023314]
731  r_total and score:  3559.9638522694886 2.3590515992150833
Current Bleu score is:  2.3590515992150833

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  5  2 10  7  5  5  5  5]] [['6', '8', '5', '<s>', '8', '4', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.20245757 -0.02930708 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5  2  8  9  5  5  5  5]] [['5', '8', '5', '<s>', '3', '2', '5', '5', '5', '5']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -30.39851307  -0.83419297
  -0.88385829  -0.63839066  -0.48350806  -0.37924792   3.17023314]
732  r_total and score:  3456.1095770990746 2.340528686762876
Current Bleu score is:  2.340528686762876

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5  5  5 12 12 12 12 12 12 12]] [['5', '5', '5', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  5  2 10  5  5  5  5  5]] [['6', '8', '5', '<s>', '8', '5', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.20245757 -0.02930708 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5  2  8  5  5  5  5  5]] [['5', '8', '5', '<s>', '3', '5', '5', '5', '5', '5']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -30.39851307  -0.83419297
  -0.88385829  -0.63839066  -0.48350806  -0.37924792   3.17023314]
733  r_total and score:  3220.422068100461 2.467911267107588
Current Bleu score is:  2.467911267107588

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5  5 12 12 12 12 12 12 12 12]] [['5', '5', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  5  7 10  5  5  5  5  5]] [['6', '8', '5', '4', '8', '5', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5  7 12  5  5  5  5  5]] [['5', '8', '5', '4', '7', '5', '5', '5', '5', '5']] 

Reward:  [ 0.33689735 13.19663097 23.25441579 23.86512185 -5.90124062 -3.93855054
 -9.69991313 -6.54128323 -4.7246195  29.84745896]
734  r_total and score:  3014.7235016408194 2.4444419335360763
Current Bleu score is:  2.4444419335360763

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  5  7 10  5  5  5  5  5]] [['6', '8', '5', '4', '8', '5', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5  7  8  5  5  5  5  5]] [['5', '8', '5', '4', '3', '5', '5', '5', '5', '5']] 

Reward:  [  0.33689735  13.19663097  23.25441579  23.86512185  21.22000934
  -5.88950674 -14.50475327  -9.7814999   -7.06495402  44.63236138]
735  r_total and score:  2873.6335817053096 2.2441102672929296
Current Bleu score is:  2.2441102672929296

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  5 13 10  5  5  5  5  5]] [['8', '8', '5', '1', '8', '5', '5', '5', '5', '5']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 13  6  5  5  5  5  5]] [['5', '8', '5', '1', '6', '5', '5', '5', '5', '5']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
736  r_total and score:  2984.423693465378 2.3605807979737987
Current Bleu score is:  2.3605807979737987

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  5 13 10 12 12 12 12 12]] [['5', '8', '5', '1', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 13 12 12 12 12 12 12]] [['5', '8', '5', '1', '7', '7', '7', '7', '7', '7']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
737  r_total and score:  4067.1533500380983 3.0587456643026467
Current Bleu score is:  3.0587456643026467

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10 12 13  4 12 12 12 12 12]] [['5', '8', '7', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 13  4 12 12 12 12 12]] [['7', '8', '7', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
738  r_total and score:  3049.56404149935 1.7360463377084305
Current Bleu score is:  1.7360463377084305

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10 12 13  4 12 12 12 12 12]] [['5', '8', '7', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 12  8 12 12 12 12 12]] [['7', '8', '7', '7', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
739  r_total and score:  3548.6755357394613 2.621557648359609
Current Bleu score is:  2.621557648359609

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10 13 13  4 12 12 12 12 12]] [['5', '8', '1', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13 13  4 12 12 12 12 12]] [['1', '8', '1', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
740  r_total and score:  2327.828313074646 1.9808224658577518
Current Bleu score is:  1.9808224658577518

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 13 12  4 12 12 12 12 12]] [['1', '8', '1', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13 13 11 12 12 12 12 12]] [['1', '8', '1', '1', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
741  r_total and score:  2187.200548127793 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10 12 12  8 12 12 12 12 12]] [['7', '8', '7', '7', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 12 11 12 12 12 12 12]] [['7', '8', '7', '7', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
742  r_total and score:  2861.357349118074 1.7169015772520757
Current Bleu score is:  1.7169015772520757

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  5  5  7  4 12 12 12 12 12]] [['4', '5', '5', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5  7  8 12 12 12 12 12]] [['5', '8', '5', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [  0.33689735  13.19663097  23.25441579  23.86512185  21.22000934
  -5.88950674 -14.50475327  -9.7814999   -7.06495402  44.63236138]
743  r_total and score:  2406.5318489865617 2.36046011773962
Current Bleu score is:  2.36046011773962

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12  5 12 12  4 12 12 12 12 12]] [['7', '5', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 12 10 12 12 12 12 12]] [['7', '8', '7', '7', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
744  r_total and score:  2144.7352838678867 1.6793336542532808
Current Bleu score is:  1.6793336542532808

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10 12 12  4 12 12 12 12 12]] [['7', '8', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 12 10 12 12 12 12 12]] [['7', '8', '7', '7', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
745  r_total and score:  3308.497337205494 2.2737310940577156
Current Bleu score is:  2.2737310940577156

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10 12 12  4 12 12 12 12 12]] [['7', '8', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 12  4 12 12 12 12 12]] [['7', '8', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
746  r_total and score:  2640.8655023920956 2.362381259820496
Current Bleu score is:  2.362381259820496

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10 12 12  4 12 12 12 12 12]] [['5', '8', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 12  4 12 12 12 12 12]] [['7', '8', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
747  r_total and score:  3735.3719970593706 2.9224338922469886
Current Bleu score is:  2.9224338922469886

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10 12  5  4 12 12 12 12 12]] [['5', '8', '7', '5', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786   1.02212848 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  5 11 12 12 12 12 12]] [['7', '8', '7', '5', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
748  r_total and score:  2220.8686702836135 1.5554816449021158
Current Bleu score is:  1.5554816449021158

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10 12  5  7 12 12 12 12 12]] [['5', '8', '7', '5', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  5 11 12 12 12 12 12]] [['7', '8', '7', '5', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
749  r_total and score:  3632.5790093732176 2.4441396316428357
Current Bleu score is:  2.4441396316428357

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  2 12  5  2  5 12 12 12 12]] [['5', '<s>', '7', '5', '<s>', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.71791485 -0.02796267 -0.04080498 -0.05326709 -0.00909141
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 12  2 12 12 12 12 12]] [['7', '8', '7', '7', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.04964382 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]
750  r_total and score:  2267.8916826144573 1.6872679943776847
Current Bleu score is:  1.6872679943776847

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 12  7  4 12 12 12 12 12]] [['4', '8', '7', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 12  7 12 12 12 12 12]] [['7', '8', '7', '7', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
751  r_total and score:  2425.319180667534 1.8345920539616063
Current Bleu score is:  1.8345920539616063

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2  2 12 12 12 12 12 12 12 12]] [['<s>', '<s>', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606 -0.00455857 -0.00438243 -0.00295536 -0.00213459 -0.00161671
 -0.00126809 -0.00102185 -0.0008413   0.00873717]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 2  4 12  2  2 13 12 12 12 12]] [['<s>', '9', '7', '<s>', '<s>', '1', '7', '7', '7', '7']] 

Reward:  [ 0.01412722  0.18373987 -0.02796267 -0.0820684  -0.02822608 -0.00574628
 -0.00473096 -0.00396389 -0.00336999  0.04179882]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4  5  5 11 12 12 12 12 12]] [['7', '9', '5', '5', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
752  r_total and score:  2671.7533149642627 1.8435574943244613
Current Bleu score is:  1.8435574943244613

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2  2 12 12 12 12 12 12 12 12]] [['<s>', '<s>', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606 -0.00455857 -0.00438243 -0.00295536 -0.00213459 -0.00161671
 -0.00126809 -0.00102185 -0.0008413   0.00873717]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 12  2  2  2 12 12  5 12]] [['4', '8', '7', '<s>', '<s>', '<s>', '7', '7', '5', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.05326709 -0.02196869
 -0.00473096 -0.00396389  0.00453864  0.04970745]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12 12  4 12 12 12 12 12]] [['7', '9', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
753  r_total and score:  1844.5734562162002 1.0679732682288823
Current Bleu score is:  1.0679732682288823

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 5 9 9 9 9 9 9 9 9]] [['4', '5', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        2.18606798 -1.68574677 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 10  9  2  2  2 12 12 12 12]] [['2', '8', '2', '<s>', '<s>', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242  2.85423596 -2.69649546 -0.35621849 -0.1469135
 -0.03163782 -0.02650815 -0.02253649  0.27952556]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  4 12 12  2  9  9  9  9  9]] [['2', '9', '7', '7', '<s>', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00882806 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]
754  r_total and score:  2388.067256439848 1.3317844124141853
Current Bleu score is:  1.3317844124141853

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 12  2  2  2 12 12 12 12]] [['3', '8', '7', '<s>', '<s>', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.05326709 -0.02196869
 -0.00473096 -0.00396389 -0.00336999  0.04179882]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4  9 12  2 12 12 12 12 12]] [['7', '9', '2', '7', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00882806 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]
755  r_total and score:  1920.6221572510392 1.024113689084445
Current Bleu score is:  1.024113689084445

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12  9  9  9  9  9  9  9  9]] [['<s>', '7', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  2  2  2  9  9  9  9]] [['9', '8', '2', '<s>', '<s>', '<s>', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -44.95228086  -2.63631177
  -1.08728159  -0.2341461   -0.19618227  -0.16678871   2.0687206 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  4  9 12  2  9  9  9  9  9]] [['2', '9', '2', '7', '<s>', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00882806 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]
756  r_total and score:  3321.277204118817 2.905471527167345
Current Bleu score is:  2.905471527167345

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 9 9 9 9 9 9 9 9 9]] [['4', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  2  2  2  9  9  9  9]] [['9', '8', '2', '<s>', '<s>', '<s>', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -44.95228086  -2.63631177
  -1.08728159  -0.2341461   -0.19618227  -0.16678871   2.0687206 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[9 8 9 7 2 9 9 9 9 9]] [['2', '3', '2', '4', '<s>', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.05903678 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
757  r_total and score:  2980.913471944706 1.3354702340453963
Current Bleu score is:  1.3354702340453963

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 9 9 9 9 9 9 9 9]] [['<s>', '<s>', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606 -0.00455857 -0.00438243 -0.00295536 -0.00213459 -0.00161671
 -0.00126809 -0.00102185 -0.0008413   0.00873717]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  2  5  7  9  9  9 12]] [['9', '8', '2', '<s>', '5', '4', '2', '2', '2', '7']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -44.95228086  -0.83419297
  -0.88385829  -0.63839066  -0.48350806  -0.37924792   3.17023314]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[9 8 9 2 8 9 9 9 9 9]] [['2', '3', '2', '<s>', '3', '2', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.07335241 -0.02464422 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]
758  r_total and score:  3501.622628204907 1.7967995970994415
Current Bleu score is:  1.7967995970994415

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 9 9 9 9 9 9 9 9 9]] [['4', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  2  2  2  9 12  5 12]] [['9', '8', '2', '<s>', '<s>', '<s>', '2', '7', '5', '7']] 

Reward:  [ 9.15781944e-01  2.13972341e+01  2.90286959e+01 -4.49522809e+01
 -2.63631177e+00 -1.08728159e+00 -2.34146098e-01 -1.96182274e-01
 -1.25243544e-02  2.22298496e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[9 4 9 7 8 9 9 9 9 9]] [['2', '9', '2', '4', '3', '2', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
759  r_total and score:  3683.4353907471254 2.3616237220415903
Current Bleu score is:  2.3616237220415903

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 9 9 9 9 9 9 9 9 9]] [['4', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  2  4  7  9  9  7  9]] [['9', '8', '2', '<s>', '9', '4', '2', '2', '4', '2']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -44.95228086  -0.83419297
  -0.88385829  -0.63839066  -0.48350806  -0.37924792   3.17023314]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  4  9  7  4 13  9  9  9  9]] [['2', '9', '2', '4', '9', '1', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
760  r_total and score:  3423.585347025926 1.9832520172967536
Current Bleu score is:  1.9832520172967536

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 9 9 9 9 9 9 9 9 9]] [['4', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 9 2 2 2 7 7 7 7]] [['9', '9', '2', '<s>', '<s>', '<s>', '4', '4', '4', '4']] 

Reward:  [ 0.91578194 -0.21018242 -0.29810008 -0.23759501 -0.07010343 -0.02891243
 -0.00622629 -0.00521678 -0.00443516  0.05501034]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[9 4 7 7 4 6 9 9 9 9]] [['2', '9', '4', '4', '9', '6', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
761  r_total and score:  2506.432175818991 1.2875224465759376
Current Bleu score is:  1.2875224465759376

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 9 9 9 9 9 9 9 9 9]] [['4', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 9 2 4 7 7 7 7 7]] [['9', '9', '2', '<s>', '9', '4', '4', '4', '4', '4']] 

Reward:  [ 0.91578194 -0.21018242 -0.29810008 -0.23759501 -0.03243361 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  4  9  7  4 11  9  9  9  9]] [['2', '9', '2', '4', '9', '0', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
762  r_total and score:  2913.2100302239273 1.8605169171468319
Current Bleu score is:  1.8605169171468319

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 9 9 9 9 9 9 9 9 9]] [['4', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 4 9 7 4 7 7 7 7 7]] [['9', '9', '2', '4', '9', '4', '4', '4', '4', '4']] 

Reward:  [ 0.91578194 -0.21018242 -0.29810008 -0.1470917  -0.03680094 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  4  9  7  4 13  9  9  9  9]] [['2', '9', '2', '4', '9', '1', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
763  r_total and score:  3173.5997977184315 1.8265472191767353
Current Bleu score is:  1.8265472191767353
EPOCH %d 24
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  4 12  7  4  7 12 12 12 12]] [['9', '9', '7', '4', '9', '4', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  8 13 12 12 12 12]] [['7', '9', '7', '4', '3', '1', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
764  r_total and score:  4598.123222503948 2.668406499686125
Current Bleu score is:  2.668406499686125

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  4  9 13  4 12 12 12 12 12]] [['9', '9', '2', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.29810008 -0.1470917  -0.03680094 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  4 13 12 12 12 12]] [['7', '9', '7', '4', '9', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
765  r_total and score:  3269.035606485192 1.593197533788815
Current Bleu score is:  1.593197533788815

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  8  9  2  4  7 12 12 12 12]] [['3', '3', '2', '<s>', '9', '4', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.15344488 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 12  7 11 11 13 13 13 13]] [['7', '2', '7', '4', '0', '0', '1', '1', '1', '1']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
766  r_total and score:  3201.8014971883786 1.300778366267505
Current Bleu score is:  1.300778366267505

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 7 7 7 7 7 7 7 7 7]] [['4', '4', '4', '4', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[9 4 7 7 4 7 7 7 7 7]] [['2', '9', '4', '4', '9', '4', '4', '4', '4', '4']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  9  7  7  8 11 11 11 11 11]] [['4', '2', '4', '4', '3', '0', '0', '0', '0', '0']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.77615869 -0.06691772
 -0.16480582 -0.1111393  -0.08027338  0.50712153]
767  r_total and score:  2578.8188293804124 1.1286366331581836
Current Bleu score is:  1.1286366331581836

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 7 7 7 7 7 7 7 7 7]] [['4', '4', '4', '4', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 10  7  2  4  7 11 11 11 11]] [['2', '8', '4', '<s>', '9', '4', '0', '0', '0', '0']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.20245757 -0.01605517 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  9  7  7  8 11 11 11 11 11]] [['4', '2', '4', '4', '3', '0', '0', '0', '0', '0']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.77615869 -0.06691772
 -0.16480582 -0.1111393  -0.08027338  0.50712153]
768  r_total and score:  3101.8428652694015 1.2554327337211684
Current Bleu score is:  1.2554327337211684

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 7 7 7 7 7 7 7 7 7]] [['4', '4', '4', '4', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 10  7  7  7  7  7  7  7  7]] [['2', '8', '4', '4', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  9  7  7  4 11 11 11 11 11]] [['4', '2', '4', '4', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
769  r_total and score:  2660.027032350855 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 7 7 7 7 7 7 7 7 7]] [['4', '4', '4', '4', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 10  7  7  4  7  7  7  7  7]] [['2', '8', '4', '4', '9', '4', '4', '4', '4', '4']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  9  7  7  4 11 11 11 11 11]] [['4', '2', '4', '4', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
770  r_total and score:  2636.134511039444 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 7 7 7 7 7 7 7 7 7]] [['4', '4', '4', '4', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[9 9 7 2 4 7 7 7 7 7]] [['2', '2', '4', '<s>', '9', '4', '4', '4', '4', '4']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.15344488 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  9  7  7  4 11 11 11 11 11]] [['4', '2', '4', '4', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
771  r_total and score:  1879.4846248793008 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9  9 12  2 10  7 12 12 12 12]] [['2', '2', '7', '<s>', '8', '4', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.15344488 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 12  7  4 11 11 11 11 11]] [['7', '2', '7', '4', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
772  r_total and score:  3444.0024610644805 2.102836086711681
Current Bleu score is:  2.102836086711681

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9  9 12  2 10 12 12 12 12 12]] [['2', '2', '7', '<s>', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.15344488 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 12  7  8 11 11 11 11 11]] [['7', '2', '7', '4', '3', '0', '0', '0', '0', '0']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
773  r_total and score:  4040.2722150751606 2.878092158800251
Current Bleu score is:  2.878092158800251

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9  4 12  2 10  5 12 12 12 12]] [['2', '9', '7', '<s>', '8', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.20245757 -0.01605517 -0.01325191
 -0.01697575 -0.01285719 -0.01008476  0.08430119]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 12  7 13 13 13 11 11 11]] [['7', '2', '7', '4', '1', '1', '1', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
774  r_total and score:  4872.939980373797 2.1004167225752046
Current Bleu score is:  2.1004167225752046

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  4 12  2 10  5 12 12 12 12]] [['9', '9', '7', '<s>', '8', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.20245757 -0.01605517 -0.01325191
 -0.01697575 -0.01285719 -0.01008476  0.08430119]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 12  7 11  6 12 12 12 12]] [['7', '2', '7', '4', '0', '6', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
775  r_total and score:  4459.344899171635 2.2972457680223393
Current Bleu score is:  2.2972457680223393

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  4  6  5 10  5 12 12 12 12]] [['9', '9', '6', '5', '8', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.09557581 -0.0201266  -0.05770696
 -0.03485219 -0.0235031  -0.01697575  0.10724315]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  9  6  5  8 13  6  6  6  6]] [['6', '2', '6', '5', '3', '1', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
776  r_total and score:  3271.549282745785 2.226963434574866
Current Bleu score is:  2.226963434574866

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  4  6  7 10 12 12 12 12 12]] [['9', '9', '6', '4', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  9  6  5  8 13  6  6  6  6]] [['6', '2', '6', '5', '3', '1', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
777  r_total and score:  2411.299748442815 1.8199657618303546
Current Bleu score is:  1.8199657618303546

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  4 12  7 10 12 12 12 12 12]] [['9', '9', '7', '4', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 12  7  4 13 13 13 13 13]] [['7', '2', '7', '4', '9', '1', '1', '1', '1', '1']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
778  r_total and score:  4076.40539431473 2.523661942778489
Current Bleu score is:  2.523661942778489

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5  5 12 12 12 12 12 12 12 12]] [['5', '5', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  4  5  7 10  5  5  5  5  5]] [['9', '9', '5', '4', '8', '5', '5', '5', '5', '5']] 

Reward:  [ 0.91578194 -0.21018242 -0.29810008 -0.1470917  -0.0201266  -0.05770696
 -0.03485219 -0.0235031  -0.01697575  0.10724315]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  9  5  7 13 13  6  6  6  6]] [['5', '2', '5', '4', '1', '1', '6', '6', '6', '6']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553  0.88538718 -0.11096112 -0.07405663
 -0.18238762 -0.12299585 -0.08883709  0.56122223]
779  r_total and score:  3293.662675021728 1.8988723919812938
Current Bleu score is:  1.8988723919812938

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 12  7 10 12 12 12 12 12]] [['9', '8', '7', '4', '8', '7', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.18699762
  -0.27287935  -0.16480582  -0.1111393   -0.08027338   0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 12  7  4  6  6  6  6  6]] [['7', '2', '7', '4', '9', '6', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
780  r_total and score:  2902.7583992485665 2.5844262305065895
Current Bleu score is:  2.5844262305065895

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  4 12  7 10 12 12 12 12 12]] [['8', '9', '7', '4', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 12  7 13  6  6  6  6  6]] [['7', '2', '7', '4', '1', '6', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
781  r_total and score:  3679.689032655097 2.663665285760514
Current Bleu score is:  2.663665285760514

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11 12  7 13 12 12 12 12 12]] [['0', '0', '7', '4', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 12  7 13  6  6 12 12 12]] [['7', '2', '7', '4', '1', '6', '6', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
782  r_total and score:  2843.047547905077 2.335324851529184
Current Bleu score is:  2.335324851529184

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  4 12  7 10 12 12 12 12 12]] [['0', '9', '7', '4', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 12  7 13  6  6  6  6  6]] [['7', '2', '7', '4', '1', '6', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
783  r_total and score:  2834.274538095374 2.0061794490910807
Current Bleu score is:  2.0061794490910807

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 11 12  7 13 12 12 12 12 12]] [['5', '0', '7', '4', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 12  7 13  6  6  6  6  6]] [['7', '2', '7', '4', '1', '6', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
784  r_total and score:  2841.257943063937 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  4 12  7 11 12 12 12 12 12]] [['5', '9', '7', '4', '0', '7', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.18699762
  -0.27287935  -0.16480582  -0.1111393   -0.08027338   0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7 10  6 12 12 12 12]] [['7', '9', '7', '4', '8', '6', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
785  r_total and score:  2513.676861077806 1.8965425496108808
Current Bleu score is:  1.8965425496108808

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  4 12  5 11 12 12 12 12 12]] [['5', '9', '7', '5', '0', '7', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.18699762
  -0.27287935  -0.16480582  -0.1111393   -0.08027338   0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  8  6  6 12 12 12]] [['7', '9', '7', '4', '3', '6', '6', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
786  r_total and score:  3044.988366835269 1.803537105964176
Current Bleu score is:  1.803537105964176

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  4 12  5 11 12 12 12 12 12]] [['5', '9', '7', '5', '0', '7', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.18699762
  -0.27287935  -0.16480582  -0.1111393   -0.08027338   0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  8  6 12 12 12 12]] [['7', '9', '7', '4', '3', '6', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
787  r_total and score:  2203.9243405222264 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  4 12  5 11 12 12 12 12 12]] [['0', '9', '7', '5', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  8  6 12 12 12 12]] [['7', '9', '7', '4', '3', '6', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
788  r_total and score:  2420.098676261184 1.6661855059617525
Current Bleu score is:  1.6661855059617525

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  4 12  5 11 12 12 12 12 12]] [['9', '9', '7', '5', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.09557581 -0.03680094 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  8 12 12 12 12 12]] [['7', '9', '7', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
789  r_total and score:  3032.8224038766148 2.3275307125501215
Current Bleu score is:  2.3275307125501215

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  4 12  5 11 12 12 12 12 12]] [['8', '9', '7', '5', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.09557581 -0.03680094 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  8 12 12 12 12 12]] [['7', '9', '7', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
790  r_total and score:  2696.472977375864 1.8863247638054965
Current Bleu score is:  1.8863247638054965

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  4  9  5 11 12 12 12 12 12]] [['0', '9', '2', '5', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -1.42950658e-01  1.10839677e+00
 -2.06946887e-01 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  4  9  7  8 12 12 12 12 12]] [['2', '9', '2', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
791  r_total and score:  3416.3805208260615 2.5090774245601244
Current Bleu score is:  2.5090774245601244

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  4  9  2 10  9 12 12 12 12]] [['8', '9', '2', '<s>', '8', '2', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.29810008 -0.23759501 -0.03243361  0.51258852
 -0.08883709 -0.06728396 -0.05277534  0.44116294]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  4  9  7  8 12 12 12 12 12]] [['2', '9', '2', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
792  r_total and score:  2216.436818866494 2.3081717764256786
Current Bleu score is:  2.3081717764256786

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  4  9  2 10  9  9  9  9  9]] [['8', '9', '2', '<s>', '8', '2', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.21018242 -0.29810008 -0.23759501 -0.03243361  0.51258852
 -0.08883709 -0.06728396 -0.05277534  0.44116294]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  4 12  7  8 12  9 12 12 12]] [['2', '9', '7', '4', '3', '7', '2', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
793  r_total and score:  3008.1410494815077 2.563669049754664
Current Bleu score is:  2.563669049754664

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  4 12  2 10 12 12 12 12 12]] [['8', '9', '7', '<s>', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.20245757 -0.02930708 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  8 12 12 12 12 12]] [['7', '9', '7', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
794  r_total and score:  1931.6543191206008 1.8911752842203238
Current Bleu score is:  1.8911752842203238

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4 12  2 10  8 12 12 12 12]] [['4', '9', '7', '<s>', '8', '3', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  8 12 12 12 12 12]] [['7', '9', '7', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
795  r_total and score:  1775.7425023990074 1.6124763957870665
Current Bleu score is:  1.6124763957870665

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4 12  7 10 12 12 12 12 12]] [['4', '9', '7', '4', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  8 12 12 12 12 12]] [['7', '9', '7', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
796  r_total and score:  1963.0759729325919 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 12  7 10 12 12 12 12 12]] [['1', '9', '7', '4', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  8  6  6 12 12 12]] [['7', '9', '7', '4', '3', '6', '6', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
797  r_total and score:  2238.1876964700978 0.0
Current Bleu score is:  0.0
EPOCH %d 25
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4 12  5 11 12 12 12 12 12]] [['4', '9', '7', '5', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  4  6  6  6 12 12]] [['7', '9', '7', '4', '9', '6', '6', '6', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
798  r_total and score:  2634.7350134207077 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 11 11 11 11 11 11 11 11 11]] [['5', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4 11  5  7 11 11 11 11 11]] [['4', '9', '0', '5', '4', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  4 11  7  8  6  6  6  6  6]] [['0', '9', '0', '4', '3', '6', '6', '6', '6', '6']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
799  r_total and score:  2631.785063488736 1.432658395325616
Current Bleu score is:  1.432658395325616

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  4 12  5  4  5 12 12 12 12]] [['5', '9', '7', '5', '9', '5', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.06578356
  -0.30199064  -0.18238762  -0.12299585  -0.08883709   0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  4  6  6  6  6  6]] [['7', '9', '7', '4', '9', '6', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
800  r_total and score:  3099.5239891864308 1.797751194554456
Current Bleu score is:  1.797751194554456

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4 12  5  4  5 12 12 12 12]] [['4', '9', '7', '5', '9', '5', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -2.16389877e-01 -4.72393767e-02
  1.02212848e+00 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  4  6  6  6  6  6]] [['7', '9', '7', '4', '9', '6', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
801  r_total and score:  3962.6697922528347 2.563253858490115
Current Bleu score is:  2.563253858490115

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  4 12  5  4  5 12 12 12 12]] [['5', '9', '7', '5', '9', '5', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.06578356
  -0.30199064  -0.18238762  -0.12299585  -0.08883709   0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  4  6  6  6  6  6]] [['7', '9', '7', '4', '9', '6', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
802  r_total and score:  3500.26732455303 2.4110022836146863
Current Bleu score is:  2.4110022836146863

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 4 9 5 7 5 9 9 9 9]] [['4', '9', '2', '5', '4', '5', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -1.42950658e-01  1.10839677e+00
 -2.06946887e-01 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[9 4 9 7 4 6 6 6 6 6]] [['2', '9', '2', '4', '9', '6', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
803  r_total and score:  1910.9608208316558 1.3038326484026617
Current Bleu score is:  1.3038326484026617

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4 12  7  7  7 12 12 12 12]] [['4', '9', '7', '4', '4', '4', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  4  6  6  6  6  6]] [['7', '9', '7', '4', '9', '6', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
804  r_total and score:  2681.8214385381584 1.229409500002051
Current Bleu score is:  1.229409500002051

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4  9  5  7  5 12 12 12 12]] [['4', '9', '2', '5', '4', '5', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -1.42950658e-01  1.10839677e+00
 -2.06946887e-01 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[9 4 9 7 4 6 6 6 6 6]] [['2', '9', '2', '4', '9', '6', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
805  r_total and score:  2732.5870993480876 1.8747536551593316
Current Bleu score is:  1.8747536551593316

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  4 12  5  7  5 12 12 12 12]] [['9', '9', '7', '5', '4', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.09557581 -0.03680094 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  4  6  6  6  6  6]] [['7', '9', '7', '4', '9', '6', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
806  r_total and score:  4084.1017316017724 2.3342287118930405
Current Bleu score is:  2.3342287118930405

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  9 12  2  4  2 12  5  5  5]] [['9', '2', '7', '<s>', '9', '<s>', '7', '5', '5', '5']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.20245757 -0.01605517 -0.04963478
 -0.00938493 -0.00227637 -0.00669059  0.06948414]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4  5  7  8  6  6  6  6  6]] [['7', '9', '5', '4', '3', '6', '6', '6', '6', '6']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
  5.85415513e+00 -4.95246511e-01 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]
807  r_total and score:  2992.1250719754435 1.7281716100776867
Current Bleu score is:  1.7281716100776867

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  9 12  2  4 12 12 12 12 12]] [['9', '2', '7', '<s>', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.20245757 -0.01605517 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4  8  7  8  6  6  6  6  6]] [['7', '9', '3', '4', '3', '6', '6', '6', '6', '6']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01 -1.91961772e-02
  7.47002056e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
808  r_total and score:  3490.6406226509785 1.3190559295597872
Current Bleu score is:  1.3190559295597872

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  4 12  2  4  7 12 12 12 12]] [['9', '9', '7', '<s>', '9', '4', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.20245757 -0.02930708 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4  5  7  4  6  6  6  6  6]] [['7', '9', '5', '4', '9', '6', '6', '6', '6', '6']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
 -1.00264689e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
809  r_total and score:  3003.412520058097 1.1426820625202088
Current Bleu score is:  1.1426820625202088

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4 12  2  2  2 12 12 12 12]] [['4', '9', '7', '<s>', '<s>', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.05326709 -0.02196869
 -0.00473096 -0.00396389 -0.00336999  0.04179882]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 9 5 7 4 6 6 6 6 6]] [['3', '2', '5', '4', '9', '6', '6', '6', '6', '6']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553  0.88538718 -0.11096112 -0.07405663
 -0.18238762 -0.12299585 -0.08883709  0.56122223]
810  r_total and score:  2874.995509146087 1.7307127989940747
Current Bleu score is:  1.7307127989940747

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  7 10  2  2  2 12 12 12 12]] [['4', '4', '8', '<s>', '<s>', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.15344488 -0.05326709 -0.02196869
 -0.00473096 -0.00396389 -0.00336999  0.04179882]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  7  5  7  8  6  6 12 12 12]] [['8', '4', '5', '4', '3', '6', '6', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164  0.84847443  6.25760695 -0.53217701
 -1.31065241 -0.88385829 -0.63839066  4.03298912]
811  r_total and score:  2287.9956190577004 1.1738709368767293
Current Bleu score is:  1.1738709368767293

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4 12  2  2  2 12 12 12 12]] [['4', '9', '7', '<s>', '<s>', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.05326709 -0.02196869
 -0.00473096 -0.00396389 -0.00336999  0.04179882]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  7  5 11  4  6 12 12 12 12]] [['5', '4', '5', '0', '9', '6', '7', '7', '7', '7']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
812  r_total and score:  2504.8994993250153 1.5385731537278176
Current Bleu score is:  1.5385731537278176

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 9 9 9 9 9 9 9 9 9]] [['<s>', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4  9  2  2  2 12 12 12  5]] [['4', '9', '2', '<s>', '<s>', '<s>', '7', '7', '7', '5']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.20245757 -0.0633456  -0.02612533
 -0.00562609 -0.00471389 -0.00400762  0.04970745]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  4  5 11  4 10 10  9  9  9]] [['5', '9', '5', '0', '9', '8', '8', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986  0.00447861
 -0.02218243 -0.0235031  -0.01697575  0.10724315]
813  r_total and score:  1444.5993496661488 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 9 9 9 9 9 9 9 9 9]] [['<s>', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 4 9 2 4 2 9 9 9 9]] [['4', '9', '2', '<s>', '9', '<s>', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.20245757 -0.01605517 -0.04963478
 -0.00938493 -0.00756253 -0.00622629  0.06466228]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  7  5 11  4 12  9  9  9  9]] [['5', '4', '5', '0', '9', '7', '2', '2', '2', '2']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
814  r_total and score:  2331.2194134900824 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 9 9 9 9 9 9 9 9 9]] [['<s>', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 4 9 2 4 2 9 9 9 9]] [['4', '9', '2', '<s>', '9', '<s>', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.20245757 -0.01605517 -0.04963478
 -0.00938493 -0.00756253 -0.00622629  0.06466228]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  4  5 11  4 10  9  9  9  9]] [['5', '9', '5', '0', '9', '8', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
815  r_total and score:  2450.7794658674384 1.2543973761520595
Current Bleu score is:  1.2543973761520595

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4 12  2  5  2 12 12 12 12]] [['4', '9', '7', '<s>', '5', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.00488055 -0.04485009
 -0.00848024 -0.00683352 -0.00562609  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4  5 11  8 12 12 12 12 12]] [['1', '9', '5', '0', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
816  r_total and score:  3690.67863833592 2.034324473469667
Current Bleu score is:  2.034324473469667

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 4 9 2 5 2 9 9 9 9]] [['4', '9', '2', '<s>', '5', '<s>', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.20245757 -0.01605517 -0.04963478
 -0.00938493 -0.00756253 -0.00622629  0.06466228]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8  4  5  7 10 10  9  9  9  9]] [['3', '9', '5', '4', '8', '8', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553  0.88538718 -0.03419142 -0.02067652
 -0.20723234 -0.13975027 -0.10093843  0.63767157]
817  r_total and score:  3241.8562459636373 1.1814670657764283
Current Bleu score is:  1.1814670657764283

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  4 12  2  5  2 12 12 12 12]] [['3', '9', '7', '<s>', '5', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.00488055 -0.04485009
 -0.00848024 -0.00683352 -0.00562609  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  8  5  7 13 10 12 12 12 12]] [['1', '3', '5', '4', '1', '8', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -4.75455349e-02  8.85387179e-01
 -1.10961119e-01 -2.80932275e-03 -1.95988249e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]
818  r_total and score:  3711.413797214616 1.36136220404475
Current Bleu score is:  1.36136220404475

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  8 12  2  5  2 12 12 12 12]] [['9', '3', '7', '<s>', '5', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.15344488 -0.00488055 -0.04485009
 -0.00848024 -0.00683352 -0.00562609  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  8 13  4 10 10 12 12 12 12]] [['1', '3', '1', '9', '8', '8', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
819  r_total and score:  2425.9847706645423 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 9 9 9 9 9 9 9 9 9]] [['<s>', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 4 9 2 5 2 9 9 9 9]] [['3', '9', '2', '<s>', '5', '<s>', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.20245757 -0.01605517 -0.04963478
 -0.00938493 -0.00756253 -0.00622629  0.06466228]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 8 5 4 4 6 9 9 9 9]] [['5', '3', '5', '9', '9', '6', '2', '2', '2', '2']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.08918036 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
820  r_total and score:  1904.1426439679335 1.7176973603520531
Current Bleu score is:  1.7176973603520531

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  9  9  9  9  9  9  9  9  9]] [['1', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 8 9 2 5 2 9 9 9 9]] [['3', '3', '2', '<s>', '5', '<s>', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.15344488 -0.00488055 -0.04485009
 -0.00848024 -0.00683352 -0.00562609  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  8 13  4 13  6  9  9  9  9]] [['1', '3', '1', '9', '1', '6', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
821  r_total and score:  1521.1899096112536 1.136810685619745
Current Bleu score is:  1.136810685619745

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  9  9  9  9  9  9  9  9  9]] [['1', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  4  9 13 10 13  9  9  9  9]] [['0', '9', '2', '1', '8', '1', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  8 13  4  9  6  9  9  9  9]] [['1', '3', '1', '9', '2', '6', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
822  r_total and score:  1913.7778374172485 1.2012912711269386
Current Bleu score is:  1.2012912711269386

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  9  9  9  9  9  9  9  9  9]] [['1', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  4  9  2  7  2  9  9  9  9]] [['0', '9', '2', '<s>', '4', '<s>', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.20245757 -0.02930708 -0.04485009
 -0.00848024 -0.00683352 -0.00562609  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13  4 13  6  9  9  9  9]] [['1', '9', '1', '9', '1', '6', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
823  r_total and score:  1698.0973358130332 0.9080815503970172
Current Bleu score is:  0.9080815503970172

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 9 9 9 9 9 9 9 9 9]] [['<s>', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4  9  2  5  2  9  9  9  9]] [['1', '9', '2', '<s>', '5', '<s>', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.20245757 -0.01605517 -0.04963478
 -0.00938493 -0.00756253 -0.00622629  0.06466228]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  9 13  4 13  6  9  9  9  9]] [['1', '2', '1', '9', '1', '6', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
824  r_total and score:  2124.2852340389127 1.4488295113533312
Current Bleu score is:  1.4488295113533312

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 9 9 9 9 9 9 9 9 9]] [['4', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  2  5  2  9  9  9  9]] [['9', '8', '2', '<s>', '5', '<s>', '2', '2', '2', '2']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -44.95228086  -0.83419297
  -2.00575701  -0.37924792  -0.30560412  -0.25160636   2.61302266]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4  7  4 13  6  6  6  6  6]] [['1', '9', '4', '9', '1', '6', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
825  r_total and score:  2825.7326048988916 2.1080074414914542
Current Bleu score is:  2.1080074414914542

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 9 9 9 9 9 9 9 9 9]] [['<s>', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4  9  2  5  2  9  9  9  9]] [['1', '9', '2', '<s>', '5', '<s>', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.20245757 -0.01605517 -0.04963478
 -0.00938493 -0.00756253 -0.00622629  0.06466228]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13 13 11  6  6  6  6  6]] [['1', '9', '1', '1', '0', '6', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
826  r_total and score:  2346.2486222906414 1.2371901452648428
Current Bleu score is:  1.2371901452648428

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 9 9 9 9 9 9 9 9 9]] [['4', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4  9  2  5  2  9  9  9  9]] [['1', '9', '2', '<s>', '5', '<s>', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.20245757 -0.01605517 -0.04963478
 -0.00938493 -0.00756253 -0.00622629  0.06466228]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4  7 13 10  6  6  6  6  6]] [['1', '9', '4', '1', '8', '6', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
827  r_total and score:  2796.792490677243 1.9681889455058224
Current Bleu score is:  1.9681889455058224

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  9  9  9  9  9  9  9  9  9]] [['1', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 11  9  2  5  2  9  9  9  9]] [['9', '0', '2', '<s>', '5', '<s>', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.20245757 -0.01605517 -0.04963478
 -0.00938493 -0.00756253 -0.00622629  0.06466228]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13 13 10  6  9  9  9  9]] [['1', '9', '1', '1', '8', '6', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
828  r_total and score:  2095.877068869282 1.1699840020841739
Current Bleu score is:  1.1699840020841739

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 9 9 9 9 9 9 9 9 9]] [['<s>', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 7 9 2 5 2 9 9 9 9]] [['4', '4', '2', '<s>', '5', '<s>', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.15344488 -0.00488055 -0.04485009
 -0.00848024 -0.00683352 -0.00562609  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  7 13  4 10  6  6  6  6  6]] [['1', '4', '1', '9', '8', '6', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
829  r_total and score:  1420.5186237140385 1.1205102696732772
Current Bleu score is:  1.1205102696732772

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 9 9 9 9 9 9 9 9 9]] [['<s>', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 7 9 2 5 2 9 9 9 9]] [['4', '4', '2', '<s>', '5', '<s>', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.15344488 -0.00488055 -0.04485009
 -0.00848024 -0.00683352 -0.00562609  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  7 13  4 10 10  6  6  6  6]] [['1', '4', '1', '9', '8', '8', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
830  r_total and score:  1717.2504898407185 1.209336208242089
Current Bleu score is:  1.209336208242089
EPOCH %d 26
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 9 9 9 9 9 9 9 9 9]] [['<s>', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 7 9 2 7 2 9 9 9 9]] [['4', '4', '2', '<s>', '4', '<s>', '2', '2', '2', '2']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.15344488 -0.02464422 -0.03771428
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  7  5  4  4 10  6  6  6  6]] [['1', '4', '5', '9', '9', '8', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.07181768 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
831  r_total and score:  1901.3888542204495 1.619265920232183
Current Bleu score is:  1.619265920232183

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 9 9 9 9 9 9 9 9 9]] [['<s>', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  7  9  2  5  2  9  9  9  9]] [['8', '4', '2', '<s>', '5', '<s>', '2', '2', '2', '2']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.20245757 -0.01605517 -0.04963478
 -0.00938493 -0.00756253 -0.00622629  0.06466228]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  7  5  4  4 10  6  6  6  6]] [['5', '4', '5', '9', '9', '8', '6', '6', '6', '6']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.06136673e+01 -1.77940052e+00
 -1.10961119e-01 -2.80932275e-03 -1.95988249e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]
832  r_total and score:  2633.456615204325 2.3526825486991347
Current Bleu score is:  2.3526825486991347

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 6 9 9 9 9 9 9 9 9]] [['<s>', '6', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 4 6 2 5 2 6 6 9 6]] [['4', '9', '6', '<s>', '5', '<s>', '6', '6', '2', '6']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.00488055 -0.04485009
 -0.00848024 -0.00683352  0.00060722  0.06466228]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  7  5  4  4 10  6  6  6  6]] [['5', '4', '5', '9', '9', '8', '6', '6', '6', '6']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.06136673e+01 -1.77940052e+00
 -1.10961119e-01 -2.80932275e-03 -1.95988249e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]
833  r_total and score:  1769.850911008619 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2  6 12 12 12 12 12 12 12 12]] [['<s>', '6', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 5 6 2 5 2 6 6 6 6]] [['4', '5', '6', '<s>', '5', '<s>', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.02464422 -0.03771428
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 7 5 4 4 6 6 6 6 6]] [['5', '4', '5', '9', '9', '6', '6', '6', '6', '6']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.77940052  -0.11096112
  -0.07405663  -0.18238762  -0.12299585  -0.08883709   0.56122223]
834  r_total and score:  1783.7149704472915 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  5  6  2  5  2 12 12 12 12]] [['4', '5', '6', '<s>', '5', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.02464422 -0.03771428
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  7  2  4  4 10 12 12 12 12]] [['6', '4', '<s>', '9', '9', '8', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.16351292 -0.01000653 -0.02464422  0.
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
835  r_total and score:  2338.4589779702565 1.2242889826577155
Current Bleu score is:  1.2242889826577155

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  5  6  2  5  2 12 12 12 12]] [['4', '5', '6', '<s>', '5', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.02464422 -0.03771428
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  7  2  4  4  6  6 12 12 12]] [['6', '4', '<s>', '9', '9', '6', '6', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.16351292 -0.01000653 -0.02464422 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]
836  r_total and score:  1765.3061080738694 1.216862569590609
Current Bleu score is:  1.216862569590609

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11 12  2  4  2 12 12 12 12]] [['0', '0', '7', '<s>', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675 -0.00529694  0.08149774 -0.03771428
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  2 11  8  6 12 12 12 12]] [['5', '0', '<s>', '0', '3', '6', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.16351292 -0.01000653 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
837  r_total and score:  2035.6305354413803 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  6 12  2  9  2 12 12 12 12]] [['4', '6', '7', '<s>', '2', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675 -0.00529694  0.08149774 -0.03771428
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  7  2  2 10 11 12 12 12 12]] [['5', '4', '<s>', '<s>', '8', '0', '7', '7', '7', '7']] 

Reward:  [  0.33689735  13.19663097 -12.60327059  -0.34286283  -0.02617268
  -0.06728396  -0.05277534  -0.04252722  -0.03501301   0.3636227 ]
838  r_total and score:  1554.93364068384 1.0009102148424676
Current Bleu score is:  1.0009102148424676

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 12  2  6  2 12 12 12 12]] [['4', '8', '7', '<s>', '6', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.02464422 -0.03771428
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  2  2  8  6 12 12 12 12]] [['4', '4', '<s>', '<s>', '3', '6', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.16351292 -0.05126995  0.00234435 -0.01081157
 -0.00848024 -0.00683352 -0.00562609  0.05842896]
839  r_total and score:  2083.670254501832 1.2027265039143118
Current Bleu score is:  1.2027265039143118

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 12  2  7  2 12 12 12 12]] [['4', '8', '7', '<s>', '4', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.02464422 -0.03771428
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  7  2  2  8  6 12 12 12 12]] [['5', '4', '<s>', '<s>', '3', '6', '7', '7', '7', '7']] 

Reward:  [  0.33689735  13.19663097 -12.60327059  -0.34286283  -0.02617268
  -0.06728396  -0.05277534  -0.04252722  -0.03501301   0.3636227 ]
840  r_total and score:  1898.8449773817208 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  6 12  2  6  2 12 12 12 12]] [['4', '6', '7', '<s>', '6', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675 -0.00529694 -0.00438243 -0.00670665
 -0.00126809 -0.00102185 -0.0008413   0.00873717]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  8  7  8 12 12 12 12 12]] [['4', '4', '3', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846  2.24811469 -1.52021115 -0.10026469 -0.06691772
 -0.16480582 -0.1111393  -0.08027338  0.50712153]
841  r_total and score:  1805.5022819986468 1.1345927060816043
Current Bleu score is:  1.1345927060816043

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  6  8  7  6  7 12 12 12 12]] [['4', '6', '3', '4', '6', '4', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 11  7  7  8  8  8  8  8  8]] [['4', '0', '4', '4', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.77615869 -0.06691772
 -0.16480582 -0.1111393  -0.08027338  0.50712153]
842  r_total and score:  1583.8948253762417 1.539627565642551
Current Bleu score is:  1.539627565642551

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  6  6  2 10  2 12 12 12 12]] [['0', '6', '6', '<s>', '8', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675 -0.00529694  0.08149774 -0.03771428
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 11  2 11 13  6  6  6  6  6]] [['1', '0', '<s>', '0', '1', '6', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01516728 -0.00177944 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]
843  r_total and score:  1219.0183298299626 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11 13 13 10 13 12 12 12 12]] [['0', '0', '1', '1', '8', '1', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 11 13 11 13 12 12 12 12 12]] [['1', '0', '1', '0', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
844  r_total and score:  1540.5148256788293 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 6 6 6 6 6 6 6 6 6]] [['<s>', '6', '6', '6', '6', '6', '6', '6', '6', '6']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11  6  2  4  2  6  6  6  6]] [['0', '0', '6', '<s>', '9', '<s>', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.0148619   0.01247675 -0.00529694  0.08149774 -0.03771428
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2 11  2  2 12 10  6  6  6  6]] [['<s>', '0', '<s>', '<s>', '7', '8', '6', '6', '6', '6']] 

Reward:  [ 0.01012259  0.01728052 -0.00882806 -0.00670665 -0.00126809  0.04326335
 -0.00473096 -0.00396389 -0.00336999  0.04179882]
845  r_total and score:  791.4952904048156 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11  6  2  4  2  6  6  6  6]] [['0', '0', '6', '<s>', '9', '<s>', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.0148619   0.01247675 -0.00529694  0.08149774 -0.03771428
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 11  7  2 13  6  6  6  6  6]] [['1', '0', '4', '<s>', '1', '6', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.07335241 -0.02464422 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]
846  r_total and score:  1258.4812582423824 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11  8  8  8  8  8  8  8  8  8]] [['0', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11  6  2  4 11  8  8  8  8]] [['0', '0', '6', '<s>', '9', '0', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675 -0.00529694  0.08149774 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11 11  2 10  8  8  8  8  8]] [['0', '0', '0', '<s>', '8', '3', '3', '3', '3', '3']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.0027123   0.08149774  0.
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
847  r_total and score:  1562.152431906132 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11  8  8  8  8  8  8  8  8  8]] [['0', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11  8  2  6  2  8  8  8  8]] [['0', '0', '3', '<s>', '6', '<s>', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675 -0.00529694 -0.00438243 -0.00670665
 -0.00126809 -0.00102185 -0.0008413   0.00873717]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 11 13  2  8  8  8  8  8  8]] [['4', '0', '1', '<s>', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.07335241 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
848  r_total and score:  1787.9553159321997 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 8 8 8 8 8 8 8 8 8]] [['<s>', '3', '3', '3', '3', '3', '3', '3', '3', '3']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11  8  2 10  2  8  8  8  8]] [['0', '0', '3', '<s>', '8', '<s>', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675 -0.00529694  0.08149774 -0.03771428
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2 11 13  2  7 10  8  8  8  8]] [['<s>', '0', '1', '<s>', '4', '8', '3', '3', '3', '3']] 

Reward:  [ 0.01012259  0.01728052 -0.00266619 -0.00911723  0.06021266  0.00353645
 -0.00091771 -0.00756253 -0.00622629  0.06466228]
849  r_total and score:  1808.1937084565989 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2  8 12 12 12 12 12 12 12 12]] [['<s>', '3', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11  8  2 10  2  8  8  8  8]] [['0', '0', '3', '<s>', '8', '<s>', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675 -0.00529694  0.08149774 -0.03771428
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2 11  8 11  9  8  8  8  8  8]] [['<s>', '0', '3', '0', '2', '3', '3', '3', '3', '3']] 

Reward:  [ 0.01012259  0.01728052  0.11170286 -0.01000653 -0.02464422 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]
850  r_total and score:  1755.4252793673038 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  6  7  6  2 12 12 12 12]] [['0', '8', '6', '4', '6', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.0820684
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 11  7  2  7 12 12 12 12 12]] [['4', '0', '4', '<s>', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.07335241 -0.02464422 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]
851  r_total and score:  1125.0831142065313 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  6 12  7  9  7 12 12 12 12]] [['9', '6', '7', '4', '2', '4', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  4 12 11  9 12 12 12 12 12]] [['4', '9', '7', '0', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
852  r_total and score:  2370.6577861652554 1.1712170611958874
Current Bleu score is:  1.1712170611958874

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 12  7  4  7 12 12 12 12]] [['0', '8', '7', '4', '9', '4', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 11  7  2  4 11 12 12 12 12]] [['4', '0', '4', '<s>', '9', '0', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.07335241 -0.02464422 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]
853  r_total and score:  2471.0396173264 1.2258066364730666
Current Bleu score is:  1.2258066364730666

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  4 12  7  4  2 12 12 12 12]] [['9', '9', '7', '4', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.09759632
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  4 13 13 13 10 12 12 12 12]] [['4', '9', '1', '1', '1', '8', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307  0.01442
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
854  r_total and score:  2280.564448045985 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  6 12  7  4  2 12 12 12 12]] [['9', '6', '7', '4', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.09759632
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13 11  5 12 12 12 12 12]] [['1', '9', '1', '0', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
855  r_total and score:  2720.4346946766805 1.2586106193911162
Current Bleu score is:  1.2586106193911162

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 12 11  4  2 12 12 12 12]] [['1', '9', '7', '0', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.09759632
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13 11 11 12 12 12 12 12]] [['1', '9', '1', '0', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
856  r_total and score:  2824.877287958214 1.706762346779879
Current Bleu score is:  1.706762346779879

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 12  7  4  2 12 12 12 12]] [['1', '8', '7', '4', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.09759632
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13 11 11 12 12 12 12 12]] [['1', '9', '1', '0', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
857  r_total and score:  3447.357851796162 2.225106776390989
Current Bleu score is:  2.225106776390989

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 12 13 10  2 12 12 12 12]] [['1', '9', '7', '1', '8', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.09759632
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13 11 11 12 12 12 12 12]] [['1', '9', '1', '0', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
858  r_total and score:  1936.42806403657 0.9231098105547347
Current Bleu score is:  0.9231098105547347

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 12 13 10  2 12 12 12 12]] [['1', '8', '7', '1', '8', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.0820684
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13 13 11 12 12 12 12 12]] [['1', '9', '1', '1', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
859  r_total and score:  2654.2949966140573 1.6409153324939187
Current Bleu score is:  1.6409153324939187

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 12 13 10  2 12 12 12 12]] [['4', '8', '7', '1', '8', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.0820684
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  4 13 13  8 12 12 12 12 12]] [['4', '9', '1', '1', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
860  r_total and score:  2425.15358421447 1.4851876797392711
Current Bleu score is:  1.4851876797392711

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4 12 13  4  2 12 12 12 12]] [['4', '9', '7', '1', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.09759632
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  4 13  7  8 10 12 12 12 12]] [['4', '9', '1', '4', '3', '8', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.77615869  5.4591733
 -1.2196995  -0.82252282 -0.59408945  3.75311927]
861  r_total and score:  2692.843398384126 1.291915601265253
Current Bleu score is:  1.291915601265253

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 12  2  4  2 12 12 12 12]] [['4', '8', '7', '<s>', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.00488055 -0.04485009
 -0.00848024 -0.00683352 -0.00562609  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 13  7  8 10 12 12 12 12]] [['7', '9', '1', '4', '3', '8', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01  5.45917330e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]
862  r_total and score:  2032.6562567006542 1.3882536595733732
Current Bleu score is:  1.3882536595733732

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 12  2  4  2 12 12 12 12]] [['4', '8', '7', '<s>', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.00488055 -0.04485009
 -0.00848024 -0.00683352 -0.00562609  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  4  5  7  8 10 12 12 12 12]] [['5', '9', '5', '4', '3', '8', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -4.75455349e-02  8.85387179e-01
  6.25760695e+00  4.63304291e+01 -1.02564094e+01 -6.91656491e+00
 -4.99567689e+00  3.15598454e+01]
863  r_total and score:  3169.717520188097 1.6168068912395466
Current Bleu score is:  1.6168068912395466
EPOCH %d 27
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  5 12  2  4  2 12 12 12 12]] [['5', '5', '7', '<s>', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.15344488 -0.00488055 -0.04485009
 -0.00848024 -0.00683352 -0.00562609  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5  7  8 10 12 12 12 12]] [['5', '5', '5', '4', '3', '8', '7', '7', '7', '7']] 

Reward:  [  0.33689735   0.09107039  -0.17289438   0.88538718   6.25760695
  46.3304291  -10.2564094   -6.91656491  -4.99567689  31.55984539]
864  r_total and score:  3492.912661778411 1.8952323294509819
Current Bleu score is:  1.8952323294509819

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 12  2  4  2 12 12 12 12]] [['1', '9', '7', '<s>', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.00488055 -0.04485009
 -0.00848024 -0.00683352 -0.00562609  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  4  5  7  4 10 12 12 12 12]] [['5', '9', '5', '4', '9', '8', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553  0.88538718 -0.11096112 -0.00280932
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
865  r_total and score:  2114.224426401467 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 12  2  4  2 12 12 12 12]] [['1', '9', '7', '<s>', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.00488055 -0.04485009
 -0.00848024 -0.00683352 -0.00562609  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  4  5  7  4  5 12 12 12 12]] [['5', '9', '5', '4', '9', '5', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553  0.88538718 -0.11096112 -0.07405663
 -0.18238762 -0.12299585 -0.08883709  0.56122223]
866  r_total and score:  3076.413437167845 1.3961944237683348
Current Bleu score is:  1.3961944237683348

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  5 12  2  4  2 12 12 12 12]] [['4', '5', '7', '<s>', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.00488055 -0.04485009
 -0.00848024 -0.00683352 -0.00562609  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  4  5  7  4 12 12 12 12 12]] [['5', '9', '5', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553  0.88538718 -0.11096112 -0.07405663
 -0.18238762 -0.12299585 -0.08883709  0.56122223]
867  r_total and score:  3229.2384163719194 2.120571686183998
Current Bleu score is:  2.120571686183998

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  5 12  2  4  2 12 12 12 12]] [['5', '5', '7', '<s>', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.15344488 -0.00488055 -0.04485009
 -0.00848024 -0.00683352 -0.00562609  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  5 13  5 11 12 12 12 12 12]] [['1', '5', '1', '5', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
868  r_total and score:  3841.163080713942 1.5767916258295758
Current Bleu score is:  1.5767916258295758

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  5 12 13  4  7 12 12 12 12]] [['4', '5', '7', '1', '9', '4', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  5 13  7  8 12 12 12 12 12]] [['1', '5', '1', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -1.91961772e-02
  8.46243738e-01 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
869  r_total and score:  3911.3215257616066 2.3957802337077307
Current Bleu score is:  2.3957802337077307

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  5 12  7  4  7 12 12 12 12]] [['4', '5', '7', '4', '9', '4', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  5  5  7  8 11 12 12 12 12]] [['4', '5', '5', '4', '3', '0', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164  0.84847443  6.25760695 -0.53217701
 -1.31065241 -0.88385829 -0.63839066  4.03298912]
870  r_total and score:  1933.7902936960922 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  5 12  2 10  2 12 12 12 12]] [['5', '5', '7', '<s>', '8', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.15344488 -0.00488055 -0.04485009
 -0.00848024 -0.00683352 -0.00562609  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  5 10 13  8 12 12 12 12 12]] [['4', '5', '8', '1', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039  2.49189332 -1.77940052 -0.03419142 -0.07957902
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
871  r_total and score:  2967.2360216758534 2.0433145262392602
Current Bleu score is:  2.0433145262392602

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  5 12  2  4  2 12 12 12 12]] [['5', '5', '7', '<s>', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.15344488 -0.00488055 -0.04485009
 -0.00848024 -0.00683352 -0.00562609  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  5  5  7  8 11 12 12 12 12]] [['4', '5', '5', '4', '3', '0', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164  0.84847443  6.25760695 -0.53217701
 -1.31065241 -0.88385829 -0.63839066  4.03298912]
872  r_total and score:  2505.2578519666768 1.7202790908564598
Current Bleu score is:  1.7202790908564598

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  4 12  2  5  2 12 12 12 12]] [['9', '9', '7', '<s>', '5', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.20245757 -0.01605517 -0.04963478
 -0.00938493 -0.00756253 -0.00622629  0.06466228]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4  8  7  8 10 12 12 12 12]] [['7', '9', '3', '4', '3', '8', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01 -1.91961772e-02
  7.47002056e-01  5.45917330e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]
873  r_total and score:  3130.681227122454 2.7937672447282123
Current Bleu score is:  2.7937672447282123

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4  8  2  4  2 12 12 12 12]] [['4', '9', '3', '<s>', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.00488055 -0.04485009
 -0.00848024 -0.00683352 -0.00562609  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  4  8  7  8 11 12 12 12 12]] [['4', '9', '3', '4', '3', '0', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768  0.74700206 -0.06691772
 -0.16480582 -0.1111393  -0.08027338  0.50712153]
874  r_total and score:  2755.112639943611 1.8955874490664888
Current Bleu score is:  1.8955874490664888

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4 12  2  7  2 12 12 12 12]] [['4', '9', '7', '<s>', '4', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.02464422 -0.03771428
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  4  8  7  8 11 12 12 12 12]] [['4', '9', '3', '4', '3', '0', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768  0.74700206 -0.06691772
 -0.16480582 -0.1111393  -0.08027338  0.50712153]
875  r_total and score:  2898.912900401353 2.329113475200398
Current Bleu score is:  2.329113475200398

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  6 12  7  6  2 12 12 12 12]] [['9', '6', '7', '4', '6', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.0820684
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  8 11 12 12 12 12]] [['7', '9', '7', '4', '3', '0', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
876  r_total and score:  2571.852308341899 2.119134539169822
Current Bleu score is:  2.119134539169822

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11 12  2  4  2 12 12 12 12]] [['0', '0', '7', '<s>', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675 -0.00529694  0.08149774 -0.03771428
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 11  5  7 11 11 12 12 12 12]] [['7', '0', '5', '4', '0', '0', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
 -1.00264689e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
877  r_total and score:  2927.6261900040313 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11 12  2  7  2 12 12 12 12]] [['0', '0', '7', '<s>', '4', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675 -0.00529694 -0.00438243 -0.00670665
 -0.00126809 -0.00102185 -0.0008413   0.00873717]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 11 13  7 11 11  8 12 12 12]] [['7', '0', '1', '4', '0', '0', '3', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.00488055 -0.01976367 -0.01427485  0.09018038]
878  r_total and score:  2889.800690413831 1.1007050211676928
Current Bleu score is:  1.1007050211676928

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 13  2  4  2 12 12 12 12]] [['1', '8', '1', '<s>', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.00488055 -0.04485009
 -0.00848024 -0.00683352 -0.00562609  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 11 13  7  8 11  8 12 12 12]] [['7', '0', '1', '4', '3', '0', '3', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
879  r_total and score:  3053.8170952560477 1.0719821105669647
Current Bleu score is:  1.0719821105669647

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 13  2  5  2 12 12 12 12]] [['1', '8', '1', '<s>', '5', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.00488055 -0.04485009
 -0.00848024 -0.00683352 -0.00562609  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 11 13 13  8  8 12 12 12 12]] [['1', '0', '1', '1', '3', '3', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
880  r_total and score:  2743.407035835964 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 12  2  4  2 12 12 12 12]] [['1', '8', '7', '<s>', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.00488055 -0.04485009
 -0.00848024 -0.00683352 -0.00562609  0.05842896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 11 13  7 11 12 12 12 12 12]] [['7', '0', '1', '4', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
881  r_total and score:  1778.5573651514421 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6 13  2  7  2 12 12 12 12]] [['1', '6', '1', '<s>', '4', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675 -0.00529694 -0.00438243 -0.00670665
 -0.00126809 -0.00102185 -0.0008413   0.00873717]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 11 13 13 11 12 12 12 12 12]] [['1', '0', '1', '1', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
882  r_total and score:  2504.2941415046466 1.155022585695006
Current Bleu score is:  1.155022585695006

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  6 12  7  4  8 12 12 12 12]] [['4', '6', '7', '4', '9', '3', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 11  7  7 11  8 12 12 12 12]] [['7', '0', '4', '4', '0', '3', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281 -0.01499307  0.01442
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
883  r_total and score:  1988.1763834903481 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2  8 12 12 12 12 12 12 12 12]] [['<s>', '3', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  8  7  4  2  8  8  8  8]] [['4', '8', '3', '4', '9', '<s>', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.09759632
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 11  7  7 11  8  8  8  8  8]] [['3', '0', '4', '4', '0', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
884  r_total and score:  2243.1891351909153 1.1190972652616875
Current Bleu score is:  1.1190972652616875

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 12  7  7  2 12 12 12 12]] [['4', '8', '7', '4', '4', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.0820684
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 11  7  7 11 12 12 12 12 12]] [['7', '0', '4', '4', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
885  r_total and score:  2616.8928936738535 1.3515016610524644
Current Bleu score is:  1.3515016610524644

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  6  5  7  2 12 12 12 12]] [['5', '8', '6', '5', '4', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.09759632
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 11  5  7 11 12 12 12 12 12]] [['6', '0', '5', '4', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
 -1.00264689e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
886  r_total and score:  2266.4138328726767 1.3308384302292864
Current Bleu score is:  1.3308384302292864

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 11  4  2  4 12 12 12 12 12]] [['5', '0', '9', '<s>', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.20245757 -0.01605517 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4 11  5  7 11 12 12 12 12 12]] [['9', '0', '5', '4', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
 -1.00264689e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
887  r_total and score:  1645.7091104629933 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[5 6 6 2 2 2 6 6 6 6]] [['5', '6', '6', '<s>', '<s>', '<s>', '6', '6', '6', '6']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.15344488 -0.05326709 -0.02196869
 -0.00473096 -0.00396389 -0.00336999  0.04179882]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[6 8 5 7 9 6 6 6 6 6]] [['6', '3', '5', '4', '2', '6', '6', '6', '6', '6']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -4.75455349e-02  8.85387179e-01
 -1.10961119e-01 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
888  r_total and score:  1135.7319722046943 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 5 5 5 5 5 5 5 5 5]] [['<s>', '5', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 0.02751606  0.22655031 -0.08416195 -0.04080498 -0.02464422 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[5 6 5 5 7 5 5 5 5 5]] [['5', '6', '5', '5', '4', '5', '5', '5', '5', '5']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  8  5  7 11  5  5  5  5  5]] [['5', '3', '5', '4', '0', '5', '5', '5', '5', '5']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164  0.9335185  -0.11923548 -0.07957902
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
889  r_total and score:  1122.322373978944 0.7817648004627705
Current Bleu score is:  0.7817648004627705

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 5 5 5 5 5 5 5 5 5]] [['<s>', '5', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 0.02751606  0.22655031 -0.08416195 -0.04080498 -0.02464422 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  5  5  7  2  5  5 12  5]] [['5', '8', '5', '5', '4', '<s>', '5', '5', '7', '5']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.09759632
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  8  5  7 11  5  5  5  5  5]] [['5', '3', '5', '4', '0', '5', '5', '5', '5', '5']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164  0.9335185  -0.11923548 -0.07957902
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
890  r_total and score:  1286.2827540737107 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  5  5  7  7  2 12 12 12 12]] [['4', '5', '5', '4', '4', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.0820684
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  8  5  7 11  5  5 12 12 12]] [['5', '3', '5', '4', '0', '5', '5', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164  0.9335185  -0.11923548 -0.07957902
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
891  r_total and score:  416.90825763385953 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  4 13  2  6  2 12 12 12 12]] [['5', '9', '1', '<s>', '6', '<s>', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.69649546  -0.16480582
  -0.25221059  -0.0476879   -0.03842768  -0.03163782   0.3285702 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  8  5  7  8  5 12 12 12 12]] [['5', '3', '5', '4', '3', '5', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164  0.9335185   6.17256289 -0.53217701
 -1.31065241 -0.88385829 -0.63839066  4.03298912]
892  r_total and score:  942.8104792467614 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4 13  2  7  2 12 12 12 12]] [['4', '9', '1', '<s>', '4', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.02464422 -0.03771428
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 11 12  7 11 12 12 12 12 12]] [['4', '0', '7', '4', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
893  r_total and score:  1636.8394884419326 1.0728869667034517
Current Bleu score is:  1.0728869667034517

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 13  7  4  7 12 12 12 12]] [['4', '8', '1', '4', '9', '4', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 11  7  7 11 12 12 12 12 12]] [['4', '0', '4', '4', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
894  r_total and score:  1650.0305476452052 1.0964117225771812
Current Bleu score is:  1.0964117225771812

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  4 13  2  6  2 12 12 12 12]] [['5', '9', '1', '<s>', '6', '<s>', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.69649546  -0.16480582
  -0.25221059  -0.0476879   -0.03842768  -0.03163782   0.3285702 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11 13  7 11 12 12 12 12 12]] [['5', '0', '1', '4', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
895  r_total and score:  1643.5455915256423 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 13  2  4 13 12 12 12 12]] [['1', '9', '1', '<s>', '9', '1', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 11 13  7 11 12 12 12 12 12]] [['1', '0', '1', '4', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
896  r_total and score:  1573.403769702192 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 11 12  2  4  5 12 12 12 12]] [['1', '0', '7', '<s>', '9', '5', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675 -0.00529694  0.08149774  0.
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 11 13  2 11 12 12 12 12 12]] [['1', '0', '1', '<s>', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.0027123  -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]
897  r_total and score:  1693.356747915406 1.3875230818955158
Current Bleu score is:  1.3875230818955158
EPOCH %d 28
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 13  2  4 12 12 12 12 12]] [['1', '9', '1', '<s>', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13  7 11 12 12 12 12 12]] [['1', '9', '1', '4', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
898  r_total and score:  2284.342869093314 0.8394536724408391
Current Bleu score is:  0.8394536724408391

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 12  2  9 12 12 12 12 12]] [['1', '9', '7', '<s>', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  9  4 13 12 12 12 12]] [['7', '9', '7', '2', '9', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
899  r_total and score:  1982.5864223723481 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4 13  2  7  2 12 12 12 12]] [['4', '9', '1', '<s>', '4', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.02464422 -0.03771428
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13  7 11 12 12 12 12 12]] [['1', '9', '1', '4', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
900  r_total and score:  1639.5018660935489 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 13 13  6 12 12 12 12 12]] [['1', '9', '1', '1', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13  7  6 12 12 12 12 12]] [['1', '9', '1', '4', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
901  r_total and score:  1684.2753290301387 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 12  2  4 12 12 12 12 12]] [['1', '9', '7', '<s>', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 13  7  6  9 12 12 12 12]] [['7', '2', '1', '4', '6', '2', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
902  r_total and score:  1895.677975601673 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 12  2  4 12 12 12 12 12]] [['1', '9', '7', '<s>', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  4 13  7  6 13 12 12 12 12]] [['9', '9', '1', '4', '6', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
903  r_total and score:  1990.7334025866837 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 2  4 12  2  7  2 12 12 12 12]] [['<s>', '9', '7', '<s>', '4', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.01412722  0.18373987 -0.02796267 -0.0820684  -0.01200367 -0.02196869
 -0.00473096 -0.00396389 -0.00336999  0.04179882]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 13  7  6 13 12 12 12 12]] [['7', '9', '1', '4', '6', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
904  r_total and score:  1886.6150938508115 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 12  2  4 12 12 12 12 12]] [['1', '9', '7', '<s>', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 13  7  6  9 12 12 12 12]] [['7', '9', '1', '4', '6', '2', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
905  r_total and score:  2423.297304118642 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 12  2  4 12 12 12 12 12]] [['1', '9', '7', '<s>', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 13  7  6 13 12 12 12 12]] [['7', '9', '1', '4', '6', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
906  r_total and score:  2467.9489816703035 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  4 12  2  5 12 12 12 12 12]] [['5', '9', '7', '<s>', '5', '7', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.69649546  -0.16480582
  -0.1111393   -0.08027338  -0.06079792  -0.0476879    0.39863571]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4  5  7  4  9 12 12 12 12]] [['7', '9', '5', '4', '9', '2', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
 -1.00264689e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
907  r_total and score:  3093.493743110142 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  4 12  5  4 12 12 12 12 12]] [['5', '9', '7', '5', '9', '7', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.06578356
  -0.30199064  -0.18238762  -0.12299585  -0.08883709   0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  4  9 12 12 12 12]] [['7', '9', '7', '4', '9', '2', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
908  r_total and score:  3545.018187079107 1.695991908462552
Current Bleu score is:  1.695991908462552

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  4 12  2  4 12 12 12 12 12]] [['0', '9', '7', '<s>', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4  5  7  4  9 13 13 13 13]] [['7', '9', '5', '4', '9', '2', '1', '1', '1', '1']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
 -1.00264689e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
909  r_total and score:  2907.0910962660823 1.3914062429274292
Current Bleu score is:  1.3914062429274292

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  4  5  5  5 12 12 12 12 12]] [['5', '9', '5', '5', '5', '7', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.18699762
  -0.27287935  -0.16480582  -0.1111393   -0.08027338   0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  4  5  7 11 10  6  5  5  5]] [['5', '9', '5', '4', '0', '8', '6', '5', '5', '5']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553  0.88538718 -0.11096112 -0.00280932
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
910  r_total and score:  2014.85424583218 1.3583812765128647
Current Bleu score is:  1.3583812765128647

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  7  7  7 12 12 12 12 12]] [['1', '8', '4', '4', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  4  7  7 13 10  6  6  6  6]] [['4', '9', '4', '4', '1', '8', '6', '6', '6', '6']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307  0.01442
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
911  r_total and score:  2738.2085755843054 1.2524925348086478
Current Bleu score is:  1.2524925348086478

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4  4  2  4 12 12 12 12 12]] [['1', '9', '9', '<s>', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.20245757 -0.02930708 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  4  4  7 11  9  6 13 13 13]] [['9', '9', '9', '4', '0', '2', '6', '1', '1', '1']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
912  r_total and score:  3109.6595551807645 2.246815649259981
Current Bleu score is:  2.246815649259981

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 12  2  4 12 12 12 12 12]] [['1', '9', '7', '<s>', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  4 12  7  8  9 13 13 13 13]] [['5', '9', '7', '4', '3', '2', '1', '1', '1', '1']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.01919618  0.84624374 -0.07405663
 -0.18238762 -0.12299585 -0.08883709  0.56122223]
913  r_total and score:  3811.3175494758048 2.549737024467886
Current Bleu score is:  2.549737024467886

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  4 12  5  4 12 12 12 12 12]] [['5', '9', '7', '5', '9', '7', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.06578356
  -0.30199064  -0.18238762  -0.12299585  -0.08883709   0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  4 12  7  8  9  6  6  6  6]] [['5', '9', '7', '4', '3', '2', '6', '6', '6', '6']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.01919618  0.84624374 -0.07405663
 -0.18238762 -0.12299585 -0.08883709  0.56122223]
914  r_total and score:  2377.0452122054753 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4  6 13 13 12 12 12 12 12]] [['1', '9', '6', '1', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[6 4 6 2 8 9 6 6 6 6]] [['6', '9', '6', '<s>', '3', '2', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.0027123   0.08149774 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]
915  r_total and score:  1885.5083738917313 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  4  5  5  5 12 12 12 12 12]] [['5', '9', '5', '5', '5', '7', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.18699762
  -0.27287935  -0.16480582  -0.1111393   -0.08027338   0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4  6  7  8  9  6  6  6  6]] [['7', '9', '6', '4', '3', '2', '6', '6', '6', '6']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
916  r_total and score:  3473.1511807245242 2.0329251982903487
Current Bleu score is:  2.0329251982903487

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4 12  5  5 12 12 12 12 12]] [['4', '9', '7', '5', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 10  7  8  9  6  6  6  6]] [['7', '9', '8', '4', '3', '2', '6', '6', '6', '6']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01 -1.91961772e-02
  8.46243738e-01 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
917  r_total and score:  3544.660287598638 2.2179072540872946
Current Bleu score is:  2.2179072540872946

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 11 13  4 12 12 12 12 12]] [['1', '9', '0', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13 13 11 13  6  6  6  6]] [['1', '9', '1', '1', '0', '1', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
918  r_total and score:  1576.8674518906519 1.1404229875198908
Current Bleu score is:  1.1404229875198908

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 12 13  4 12 12 12 12 12]] [['1', '9', '7', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  4 10 13  8  9  6  6  6  6]] [['5', '9', '8', '1', '3', '2', '6', '6', '6', '6']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
919  r_total and score:  3552.9435761117074 2.2052278038219018
Current Bleu score is:  2.2052278038219018

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 12 13  4 12 12 12 12 12]] [['3', '8', '7', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4  5 13 11  9  6  6  6  6]] [['1', '9', '5', '1', '0', '2', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
920  r_total and score:  2822.452288967613 1.15160929478236
Current Bleu score is:  1.15160929478236

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  8 13 10 12 12 12 12 12]] [['3', '8', '3', '1', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8  4  8  8 11  9  6  6  6  6]] [['3', '9', '3', '3', '0', '2', '6', '6', '6', '6']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
921  r_total and score:  2753.994814812155 1.3457992511962835
Current Bleu score is:  1.3457992511962835

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 12 13 10 12 12 12 12 12]] [['1', '9', '7', '1', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  9 13 13  8  6  6 10  6 10]] [['1', '2', '1', '1', '3', '6', '6', '8', '6', '8']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422  0.         -0.01427485  0.09018038]
922  r_total and score:  2960.2362970056015 1.5099101735137554
Current Bleu score is:  1.5099101735137554

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9  4 12 13  5 12 12 12 12 12]] [['2', '9', '7', '1', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13  7  8 10 12 12 12 12]] [['1', '9', '1', '4', '3', '8', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01  5.45917330e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]
923  r_total and score:  3191.041916853772 1.9154385634782343
Current Bleu score is:  1.9154385634782343

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 12 13  6 12 12 12 12 12]] [['1', '9', '7', '1', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4  4  7  8  8 12 12 12 12]] [['1', '9', '9', '4', '3', '3', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
924  r_total and score:  2991.5189332802415 1.7386534872627373
Current Bleu score is:  1.7386534872627373

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4  8 13  4 12 12 12 12 12]] [['1', '9', '3', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13 13 11 12  6  6  6  6]] [['1', '9', '1', '1', '0', '7', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
925  r_total and score:  2041.20885729638 1.1985493493320538
Current Bleu score is:  1.1985493493320538

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 13 13  7 11 12 12 12 12]] [['1', '9', '1', '1', '4', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 11  2  8 11 11 11 11 11]] [['1', '9', '0', '<s>', '3', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.0027123   0.08149774 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]
926  r_total and score:  2770.5643296611406 1.6777899350481895
Current Bleu score is:  1.6777899350481895

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 11 12 12 12 12 12 12 12 12]] [['1', '0', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 11 13  5 11 11 11 11 11]] [['1', '9', '0', '1', '5', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  9 11  2  8 13 13 13 13 13]] [['1', '2', '0', '<s>', '3', '1', '1', '1', '1', '1']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.0027123   0.08149774 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]
927  r_total and score:  1679.8774586925065 0.9749217497024568
Current Bleu score is:  0.9749217497024568

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  6  5 13 12 12 12 12 12]] [['1', '8', '6', '5', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  9  5  2  8  6  6 12  6 12]] [['1', '2', '5', '<s>', '3', '6', '6', '7', '6', '7']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.07335241 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
928  r_total and score:  1384.7013252221413 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 11 13  5 12 12 12 12 12]] [['1', '8', '0', '1', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  9  5  2  8 13 13 13 13 13]] [['1', '2', '5', '<s>', '3', '1', '1', '1', '1', '1']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.07335241 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
929  r_total and score:  1524.5903019412071 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 12  5  6 12 12 12 12 12]] [['1', '8', '7', '5', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  9 10  2  8  6 12 12 12 12]] [['1', '2', '8', '<s>', '3', '6', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.07335241 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
930  r_total and score:  1750.1054359051432 1.0617108517918348
Current Bleu score is:  1.0617108517918348
EPOCH %d 29
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 12  2  2 12 12 12 12 12]] [['1', '8', '7', '<s>', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.15344488 -0.05326709 -0.00909141
 -0.007131   -0.00574628 -0.00473096  0.04913271]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 10  2  8 13 12 12 12 12]] [['7', '8', '8', '<s>', '3', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.10154738 -0.01605517 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]
931  r_total and score:  2500.683414184915 1.4605520949862727
Current Bleu score is:  1.4605520949862727

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 12  5  5 12 12 12 12 12]] [['4', '8', '7', '5', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 10  7 12 13 12 12 12 12]] [['7', '8', '8', '4', '7', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
932  r_total and score:  2329.9959645871704 1.1888198141485609
Current Bleu score is:  1.1888198141485609

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 12  7  6 12 12 12 12 12]] [['4', '8', '7', '4', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 10  7  8 13 12 12 12 12]] [['7', '8', '8', '4', '3', '1', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -4.75455349e-02 -5.22676090e-02
  9.03463371e-01 -7.95790242e-02 -1.95988249e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]
933  r_total and score:  3175.6836904488896 2.0027287852168807
Current Bleu score is:  2.0027287852168807

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 12  7  5 12 12 12 12 12]] [['1', '8', '7', '4', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4  5  7  8 12 12 12 12 12]] [['1', '9', '5', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
  5.85415513e+00 -4.95246511e-01 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]
934  r_total and score:  3940.8925016952467 2.661814952608406
Current Bleu score is:  2.661814952608406

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 11  7  5 12 12 12 12 12]] [['1', '8', '0', '4', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  4 10  7  8 11 12 12 12 12]] [['0', '9', '8', '4', '3', '0', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01 -1.91961772e-02
  8.46243738e-01 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
935  r_total and score:  2358.5939886932974 1.512249914585576
Current Bleu score is:  1.512249914585576

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 11  7  4 12 12 12 12 12]] [['1', '9', '0', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 10  7  8 11 12 12 12 12]] [['1', '9', '8', '4', '3', '0', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01 -1.91961772e-02
  8.46243738e-01 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
936  r_total and score:  2025.1362867123676 1.5317488743659475
Current Bleu score is:  1.5317488743659475

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 11 13  5 12 12 12 12 12]] [['1', '9', '0', '1', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 10  7  8 12 12 12 12 12]] [['1', '9', '8', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01 -1.91961772e-02
  8.46243738e-01 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
937  r_total and score:  2884.5410270295774 1.4159203636323807
Current Bleu score is:  1.4159203636323807

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 11  7 10 12 12 12 12 12]] [['1', '9', '0', '4', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4  5  7  8 12 12 12 12 12]] [['1', '9', '5', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
  5.85415513e+00 -4.95246511e-01 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]
938  r_total and score:  2198.8518928781687 1.7029069966904187
Current Bleu score is:  1.7029069966904187

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 11 13  5 12 12 12 12 12]] [['1', '9', '0', '1', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4  5  7  8 12 12 12 12 12]] [['1', '9', '5', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
  5.85415513e+00 -4.95246511e-01 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]
939  r_total and score:  2817.1564552549016 1.847872707040354
Current Bleu score is:  1.847872707040354

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 12 13 10 12 12 12 12 12]] [['1', '9', '7', '1', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4  5  7  8 12 12 12 12 12]] [['1', '9', '5', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
  5.85415513e+00 -4.95246511e-01 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]
940  r_total and score:  2783.5064320907463 2.244002726261735
Current Bleu score is:  2.244002726261735

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  8 11 13  6 12 12 12 12 12]] [['1', '3', '0', '1', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  8 13  7  8 12 12 12 12 12]] [['1', '3', '1', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -1.91961772e-02
  7.47002056e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
941  r_total and score:  2206.6950316604884 1.3209430343673907
Current Bleu score is:  1.3209430343673907

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 11 13 10 11 12 12 12 12]] [['1', '9', '0', '1', '8', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13  7 11 11 11 11 11 11]] [['1', '9', '1', '4', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
942  r_total and score:  1788.2526631731114 1.6141331686185543
Current Bleu score is:  1.6141331686185543

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4  5 13  4 12 12 12 12 12]] [['1', '9', '5', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13  7 11  5 12 12 12 12]] [['1', '9', '1', '4', '0', '5', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307  0.01442
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
943  r_total and score:  1480.8938000340695 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 13 13  4  5 12 12 12 12]] [['1', '9', '1', '1', '9', '5', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.03214713
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13  7  8  5  5  5  5  5]] [['1', '9', '1', '4', '3', '5', '5', '5', '5', '5']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01  2.51850546e-02 -1.24740945e-01 -1.32167642e-01
 -9.54616696e-02  6.03072536e-01]
944  r_total and score:  1270.6788400760283 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4  4 13  6 11 12 12 12 12]] [['1', '9', '9', '1', '6', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4  4  7  8  4  4  4  5  4]] [['1', '9', '9', '4', '3', '9', '9', '9', '5', '9']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -2.61726770e-02  5.61222232e-01]
945  r_total and score:  1057.1631413802666 0.9990220037201167
Current Bleu score is:  0.9990220037201167

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 13 13  6 11 12 12 12 12]] [['1', '9', '1', '1', '6', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13  7  8  6 11 11 11 11]] [['1', '9', '1', '4', '3', '6', '0', '0', '0', '0']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
946  r_total and score:  1666.7188651151569 1.2162116832518504
Current Bleu score is:  1.2162116832518504

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 13 13  6 12 12 12 12 12]] [['1', '9', '1', '1', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13  7  8 12 12 12 12 12]] [['1', '9', '1', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
947  r_total and score:  1131.8066472731177 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 13 13  2 12 12 12 12 12]] [['1', '9', '1', '1', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.09341186 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 12  7  2 12 12 12 12 12]] [['1', '9', '7', '4', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.04964382 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]
948  r_total and score:  2160.493216282958 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 13 13  2 12 12 12 12 12]] [['1', '9', '1', '1', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.09341186 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13  7  2 12 12 12 12 12]] [['1', '9', '1', '4', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.04964382 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]
949  r_total and score:  2216.578909899804 1.0475424962384268
Current Bleu score is:  1.0475424962384268

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 11 13  2 12 12 12 12 12]] [['1', '9', '0', '1', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.09341186 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 11  7  8 11 11 11 11 11]] [['1', '9', '0', '4', '3', '0', '0', '0', '0', '0']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
950  r_total and score:  1334.6950543064634 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 13 13  2 12 12 12 12 12]] [['1', '9', '1', '1', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.09341186 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  9 13  7  6 12 12 12 12 12]] [['1', '2', '1', '4', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
951  r_total and score:  2666.0706755229594 1.1610117037297876
Current Bleu score is:  1.1610117037297876

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 13 13 10 11 12 12 12 12]] [['1', '9', '1', '1', '8', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13  7 11 11 11 11 11 11]] [['1', '9', '1', '4', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
952  r_total and score:  739.2349273315658 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 12 12  2 12 12 12 12 12]] [['1', '9', '7', '7', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.09341186 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  4 11 12 12 12 12]] [['7', '9', '7', '4', '9', '0', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
953  r_total and score:  2390.241873521362 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 13 13  2 12 12 12 12 12]] [['1', '9', '1', '1', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.09341186 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13  7  6 12 12 12 12 12]] [['1', '9', '1', '4', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
954  r_total and score:  2720.043583195286 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 12 12  4 12 12 12 12 12]] [['1', '9', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  4  6 12 12 12 12]] [['7', '9', '7', '4', '9', '6', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
955  r_total and score:  2353.6891096512595 0.9793545196862947
Current Bleu score is:  0.9793545196862947

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 12 12  4 12 12 12 12 12]] [['1', '9', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  4 12 12 12 12 12]] [['7', '9', '7', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
956  r_total and score:  2614.20336398797 1.4246634326559016
Current Bleu score is:  1.4246634326559016

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 12 12  4 12 12 12 12 12]] [['1', '9', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 12  7  4 12 12 12 12 12]] [['7', '2', '7', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
957  r_total and score:  3123.6876726764945 1.1822820796468885
Current Bleu score is:  1.1822820796468885

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 12 13  6 12 12 12 12 12]] [['1', '9', '7', '1', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  4 12 12 12 12 12]] [['7', '9', '7', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
958  r_total and score:  3959.0920558063563 1.7439883683585282
Current Bleu score is:  1.7439883683585282

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  9 13  7  2 12 12 12 12 12]] [['1', '2', '1', '4', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.09341186 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 13  7  6 13 12 12 12 12]] [['7', '2', '1', '4', '6', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
959  r_total and score:  3356.1424906531815 1.819828433464192
Current Bleu score is:  1.819828433464192

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  9 12 12  4 12 12 12 12 12]] [['5', '2', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 12  7  4  5 12 12 12 12]] [['7', '2', '7', '4', '9', '5', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307  0.01442
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
960  r_total and score:  3262.321479437734 2.045707300281029
Current Bleu score is:  2.045707300281029

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 13  5  6 12 12 12 12 12]] [['1', '9', '1', '5', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  4 13  7  6 13 12 12 12 12]] [['1', '9', '1', '4', '6', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
961  r_total and score:  4431.81313215571 2.92900055237463
Current Bleu score is:  2.92900055237463

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4 12 13  4 12 12 12 12 12]] [['1', '9', '7', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  4 12  7  4 13 13 12 12 12]] [['2', '9', '7', '4', '9', '1', '1', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
962  r_total and score:  4117.1191270823765 2.647849954525685
Current Bleu score is:  2.647849954525685

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4  6  7  6 12 12 12 12 12]] [['1', '9', '6', '4', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  4  6  7  6 13 12 12 12 12]] [['2', '9', '6', '4', '6', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
963  r_total and score:  2423.452877735852 1.2657704614795444
Current Bleu score is:  1.2657704614795444
EPOCH %d 30
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  9 13 13  4 12 12 12 12 12]] [['1', '2', '1', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  9 13  7  6 13 12 12 12 12]] [['2', '2', '1', '4', '6', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
964  r_total and score:  2591.361664185552 1.7172787939236867
Current Bleu score is:  1.7172787939236867

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 13 13  2 12 12 12 12 12]] [['1', '8', '1', '1', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.09341186 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  9 13  7  6 13 12 12 12 12]] [['2', '2', '1', '4', '6', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
965  r_total and score:  2976.1233432090007 1.973936912532886
Current Bleu score is:  1.973936912532886

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  9  9 13  4 12 12 12 12 12]] [['1', '2', '2', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  9  9  7  8 13 12 12 12 12]] [['2', '2', '2', '4', '3', '1', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
966  r_total and score:  3359.1774712666374 1.8355703228012463
Current Bleu score is:  1.8355703228012463

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 12 12  4 12 12 12 12 12]] [['1', '8', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 12  7  4 13 12 12 12 12]] [['7', '2', '7', '4', '9', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
967  r_total and score:  3768.338118789466 2.127883869934681
Current Bleu score is:  2.127883869934681

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11 13 10  7 12 12 12 12 12]] [['0', '0', '1', '8', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.16961266 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  4 10  7  4 13 12 12 12 12]] [['8', '9', '8', '4', '9', '1', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
968  r_total and score:  2855.78686191021 2.099472629055858
Current Bleu score is:  2.099472629055858

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  9 12 12  4 12 12 12 12 12]] [['0', '2', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 12  7  4 13 12 12 12 12]] [['7', '2', '7', '4', '9', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
969  r_total and score:  3428.848436483164 1.9418485477115843
Current Bleu score is:  1.9418485477115843

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 10 10  7 12 12 12 12 12]] [['1', '8', '8', '8', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  9 10  9  4  6 12 12 12 12]] [['8', '2', '8', '2', '9', '6', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
970  r_total and score:  2843.5425205156166 1.6190249042367857
Current Bleu score is:  1.6190249042367857

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  6  6  7 12 12 12 12 12]] [['1', '8', '6', '6', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  9  6  7  6 13 12 12 12 12]] [['6', '2', '6', '4', '6', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
971  r_total and score:  3106.87263272781 1.8514060323874653
Current Bleu score is:  1.8514060323874653

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  8 12 12 10 12 12 12 12 12]] [['1', '3', '7', '7', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  8 12  7  4  7 12 12 12 12]] [['7', '3', '7', '4', '9', '4', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
972  r_total and score:  2489.906427942957 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  8 12 12  4 12 12 12 12 12]] [['1', '3', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  8 12  7  4  7 12 12 12 12]] [['7', '3', '7', '4', '9', '4', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
973  r_total and score:  2811.982284695983 1.13922549797735
Current Bleu score is:  1.13922549797735

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12  8 12 12  7 12 12 12 12 12]] [['7', '3', '7', '7', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  8 12  7  4  7 12 12 12 12]] [['7', '3', '7', '4', '9', '4', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
974  r_total and score:  2989.3474901386007 1.4808973632945435
Current Bleu score is:  1.4808973632945435

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12  8 12 12 10 12 12 12 12 12]] [['7', '3', '7', '7', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  8 12  7  4 13 12 12 12 12]] [['7', '3', '7', '4', '9', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
975  r_total and score:  3016.4468496198906 1.1745201209963214
Current Bleu score is:  1.1745201209963214

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  8 12 12  5 12 12 12 12 12]] [['1', '3', '7', '7', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  8 12  7  4 13 12 12 12 12]] [['7', '3', '7', '4', '9', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
976  r_total and score:  1849.3974183404623 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  8  6  5  6 12 12 12 12 12]] [['6', '3', '6', '5', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.16961266 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  8  6  7  9  6 12 12 12 12]] [['6', '3', '6', '4', '2', '6', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
977  r_total and score:  2060.6833507365322 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12  8 12 12 10 12 12 12 12 12]] [['7', '3', '7', '7', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  8 12  7  4 13 12 12 12 12]] [['7', '3', '7', '4', '9', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
978  r_total and score:  3021.5076139202297 1.3254393800674067
Current Bleu score is:  1.3254393800674067

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  8  6  5  7 12 12 12 12 12]] [['6', '3', '6', '5', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.16961266 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  8  6  2  6  6 12 12 12 12]] [['6', '3', '6', '<s>', '6', '6', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.07335241 -0.02464422 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]
979  r_total and score:  2169.8578444537416 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  9  6  5  7 12 12 12 12 12]] [['6', '2', '6', '5', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  9  6  2  8  6 12 12 12 12]] [['6', '2', '6', '<s>', '3', '6', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.0027123   0.08149774 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]
980  r_total and score:  3248.318008696076 2.1118624449844874
Current Bleu score is:  2.1118624449844874

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11 11 11  7 12 12 12 12 12]] [['0', '0', '0', '0', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11 11  2  9  5 12 12 12 12]] [['0', '0', '0', '<s>', '2', '5', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.0027123  -0.00438243  0.06926097
 -0.01200367 -0.00909141 -0.007131    0.05960994]
981  r_total and score:  1698.153902774874 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 12  5  7 12 12 12 12 12]] [['1', '8', '7', '5', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  8 12  7  4 13 12 12 12 12]] [['7', '3', '7', '4', '9', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
982  r_total and score:  4095.1629979023373 2.569530834271471
Current Bleu score is:  2.569530834271471

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10 12  5  7 12 12 12 12 12]] [['5', '8', '7', '5', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  8 12  7  4 13 12 12 12 12]] [['7', '3', '7', '4', '9', '1', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
983  r_total and score:  2275.4837280881297 1.3593931427344284
Current Bleu score is:  1.3593931427344284

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 11 13  5 11 12 12 12 12 12]] [['1', '0', '1', '5', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.16961266 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  6  2  8 13 12 12 12 12]] [['5', '0', '6', '<s>', '3', '1', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.07335241 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
984  r_total and score:  2345.822579604808 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 11 12  5  4 12 12 12 12 12]] [['7', '0', '7', '5', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  1.24767480e-02  1.69612658e-01
  9.38352275e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  7  4 12 12 12 12 12]] [['7', '8', '7', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
985  r_total and score:  2962.3762215946304 1.3880276516440984
Current Bleu score is:  1.3880276516440984

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6 12 12 12 12 12 12 12 12 12]] [['6', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 11  6  5  7 12 12 12 12 12]] [['6', '0', '6', '5', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.16961266 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 11  6  7  9 12 12 12 12 12]] [['6', '0', '6', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
986  r_total and score:  2313.261647339379 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 11 12  5  4 12 12 12 12 12]] [['7', '0', '7', '5', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  1.24767480e-02  1.69612658e-01
  9.38352275e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 11  6  7  9 12 12 12 12 12]] [['7', '0', '6', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
987  r_total and score:  2338.690345181848 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 12  6  5  4 12 12 12 12 12]] [['6', '7', '6', '5', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  1.24767480e-02  1.69612658e-01
  9.38352275e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 11 12  7  4 12 12 12 12 12]] [['7', '0', '7', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
988  r_total and score:  2024.0429320526243 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 12 12 12  4 12 12 12 12 12]] [['6', '7', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12  7  4 12 12 12 12 12]] [['7', '7', '7', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
989  r_total and score:  2292.9664467889424 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 12 12 12 10 12 12 12 12 12]] [['1', '7', '7', '7', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12  7  4 12 12 12 12 12]] [['7', '7', '7', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
990  r_total and score:  2937.2719926841683 1.1459839646058854
Current Bleu score is:  1.1459839646058854

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 12  6 12 10 12 12 12 12 12]] [['1', '7', '6', '7', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12  6  7  6  8 12 12 12 12]] [['7', '7', '6', '4', '6', '3', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307  0.01442
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
991  r_total and score:  2386.5098827160064 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 12 13 13 10 12 12 12 12 12]] [['1', '7', '1', '1', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 12 13  7  6 12 12 12 12 12]] [['1', '7', '1', '4', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
992  r_total and score:  3023.4994099255673 1.1873446079328311
Current Bleu score is:  1.1873446079328311

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6 12 12 12 12 12 12 12 12 12]] [['6', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 12  6  6  5 12 12 12 12 12]] [['6', '7', '6', '6', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 12  6  7  6 12 12 12 12 12]] [['6', '7', '6', '4', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
993  r_total and score:  1579.4397494129976 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 12  6 12  4 12 12 12 12 12]] [['6', '7', '6', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12  7  4 12 12 12 12 12]] [['7', '7', '7', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
994  r_total and score:  2272.4738225913898 1.3175403929570941
Current Bleu score is:  1.3175403929570941

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 12  6  6  6 12 12 12 12 12]] [['6', '7', '6', '6', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 12  6  7  6  6 12 12 12 12]] [['6', '7', '6', '4', '6', '6', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
995  r_total and score:  1697.901978752431 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 12  6 12 10 12 12 12 12 12]] [['6', '7', '6', '7', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 12 12 12  4 12 12 12 12 12]] [['6', '7', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
996  r_total and score:  2916.797278703696 1.9368535965260831
Current Bleu score is:  1.9368535965260831

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 12  6 12 11 12 12 12 12 12]] [['6', '7', '6', '7', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12 12  8 12 12 12 12 12]] [['7', '7', '7', '7', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
997  r_total and score:  2885.9492612970585 1.4565957098586977
Current Bleu score is:  1.4565957098586977
EPOCH %d 31
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 11 10 10  7 10 12 12 12 12]] [['8', '0', '8', '8', '4', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 12 10  8  6  5 12 12 12 12]] [['8', '7', '8', '3', '6', '5', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.00049958
 -0.03485219 -0.0235031  -0.01697575  0.10724315]
998  r_total and score:  1526.061279021066 0.8719778186899464
Current Bleu score is:  0.8719778186899464

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 9 12 12 12 12 12 12 12 12 12]] [['2', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9  5  9  9  4 11 12 12 12 12]] [['2', '5', '2', '2', '9', '0', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.06578356
  -0.30199064  -0.18238762  -0.12299585  -0.08883709   0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9 11  9  8  6  5 11 11 11 11]] [['2', '0', '2', '3', '6', '5', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307  0.01442
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
999  r_total and score:  1888.7535832255596 1.0563417610246693
Current Bleu score is:  1.0563417610246693

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  5 10 10  6 10 10 12 12 12]] [['1', '5', '8', '8', '6', '8', '8', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  5 10  7  8  5 10 10 10 10]] [['8', '5', '8', '4', '3', '5', '8', '8', '8', '8']] 

Reward:  [ 0.33689735 13.19663097 -9.85473391 -2.22141562  0.08208191 -0.04411192
 -0.28545205 -0.19249891 -0.13903757  0.87836026]
1000  r_total and score:  1757.995382012443 1.1367262679393193
Current Bleu score is:  1.1367262679393193

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  5 13 13 10 10 12 12 12 12]] [['1', '5', '1', '1', '8', '8', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 12 10  8  6  5 12 12 12 12]] [['8', '7', '8', '3', '6', '5', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.00049958
 -0.03485219 -0.0235031  -0.01697575  0.10724315]
1001  r_total and score:  1724.3489170508126 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  5  9  9  4 11 11 12 12 12]] [['8', '5', '2', '2', '9', '0', '0', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.29810008 -0.1470917  -0.0201266  -0.05770696
 -0.03485219 -0.0235031  -0.01697575  0.10724315]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 9  5  9  8  6  5 12 12 12 12]] [['2', '5', '2', '3', '6', '5', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
1002  r_total and score:  2586.0880787116334 1.890944235129142
Current Bleu score is:  1.890944235129142

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6 12 12 12 12 12 12 12 12 12]] [['6', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  5  6  6 10 12 12 12 12 12]] [['6', '5', '6', '6', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 12  6  7  6 10 12 12 12 12]] [['6', '7', '6', '4', '6', '8', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307  0.01442
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1003  r_total and score:  1555.2867767214534 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  5 10 10  5 12 12 12 12 12]] [['8', '5', '8', '8', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 12 10  8  4  8 12 12 12 12]] [['8', '7', '8', '3', '9', '3', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
1004  r_total and score:  1700.0628943588501 0.8776732373848147
Current Bleu score is:  0.8776732373848147

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 12 10 10  5 12 12 12 12 12]] [['8', '7', '8', '8', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 12 10  8  4  6 12 12 12 12]] [['8', '7', '8', '3', '9', '6', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
1005  r_total and score:  2065.9130382148896 1.0122722344290391
Current Bleu score is:  1.0122722344290391

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 12 10 10  6 11 11 11 11 11]] [['8', '7', '8', '8', '6', '0', '0', '0', '0', '0']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 12 10  8  4  6 12 12 12 12]] [['8', '7', '8', '3', '9', '6', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
1006  r_total and score:  1707.8342031758427 0.9460053774318321
Current Bleu score is:  0.9460053774318321

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 11 12 12 12 12 12 12 12 12]] [['8', '0', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 11 11  6 11 11 11 11 11]] [['0', '8', '0', '0', '6', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 12 11  8 12 11 11 11 11 11]] [['0', '7', '0', '3', '7', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1007  r_total and score:  1898.639461485714 1.1343803858222092
Current Bleu score is:  1.1343803858222092

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 11 12 12 12 12 12 12 12 12]] [['8', '0', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 12 11 11  6 11 11 12 12 12]] [['0', '7', '0', '0', '6', '0', '0', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 12 11  8 12 12 12 12 12 12]] [['0', '7', '0', '3', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1008  r_total and score:  1909.9447677808673 1.1977851564911337
Current Bleu score is:  1.1977851564911337

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6 12 12 12 12 12 12 12 12 12]] [['6', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 12  6  6  4  6 12 12 12 12]] [['6', '7', '6', '6', '9', '6', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 12  6 10 12 12 12 12 12 12]] [['6', '7', '6', '8', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1009  r_total and score:  1995.3247042263736 1.0610574622378295
Current Bleu score is:  1.0610574622378295

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6 12 12 12 12 12 12 12 12 12]] [['6', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 12  6 11  4 12 12 12 12 12]] [['6', '7', '6', '0', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  4 11  4  6 12 12 12 12 12]] [['0', '9', '0', '9', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1010  r_total and score:  946.3124981467993 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 12 12 12  6 12 12 12 12 12]] [['7', '7', '7', '7', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12 12  4 12 12 12 12 12]] [['7', '9', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1011  r_total and score:  2610.1828411733236 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12  5 12 12  6 12 12 12 12 12]] [['7', '5', '7', '7', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12 12  4 12 12 12 12 12]] [['7', '9', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1012  r_total and score:  1857.0360497476956 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  4 11 11  6 12 12 12 12 12]] [['0', '9', '0', '0', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  4 11  4  8 12 12 12 12 12]] [['0', '9', '0', '9', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1013  r_total and score:  1706.1883570684915 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12  4 12 12  4 12 12 12 12 12]] [['7', '9', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12 12  4 12 12 12 12 12]] [['7', '9', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1014  r_total and score:  2285.2837632909504 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  4 11 11  6 11 12 12 12 12]] [['0', '9', '0', '0', '6', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  4 11  4  8 12 12 12 12 12]] [['0', '9', '0', '9', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1015  r_total and score:  1189.8905415227055 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  4 11 11  4 12 12 12 12 12]] [['8', '9', '0', '0', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  4 11  4  8 12 12 12 12 12]] [['0', '9', '0', '9', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1016  r_total and score:  1546.4761017203289 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  4  7  7  4  7 12 12 12 12]] [['4', '9', '4', '4', '9', '4', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  4  7  4  4 12 12 12 12 12]] [['4', '9', '4', '9', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1017  r_total and score:  1396.7509848306318 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 12  5  7  4 12 12 12 12 12]] [['5', '7', '5', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  4  7  4  4 12 12 12 12 12]] [['4', '9', '4', '9', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1018  r_total and score:  1126.6354846875258 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 12 10 10  4 12 12 12 12 12]] [['8', '7', '8', '8', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 12 10  4  4 12 12 12 12 12]] [['8', '7', '8', '9', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1019  r_total and score:  1334.5849927959189 0.8852552097607227
Current Bleu score is:  0.8852552097607227

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  4 11 11  4 11 11 11 11 11]] [['0', '9', '0', '0', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 12 11  4  8 11 11 11 11 11]] [['0', '7', '0', '9', '3', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1020  r_total and score:  1227.765969920214 1.0230035371124417
Current Bleu score is:  1.0230035371124417

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 11 12 12 12 12 12 12 12 12]] [['0', '0', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  4 11 11  4 11 11 11 11 11]] [['0', '9', '0', '0', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 12 11  4  8 11 11 11 11 11]] [['0', '7', '0', '9', '3', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1021  r_total and score:  1121.380641281344 0.7858593655579698
Current Bleu score is:  0.7858593655579698

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  4 11 11  4 11 12 12 12 12]] [['0', '9', '0', '0', '9', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 12 11  4 12 12 12 12 12 12]] [['0', '7', '0', '9', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1022  r_total and score:  760.9439423360351 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  4 11 11  4 11 12 12 12 12]] [['0', '9', '0', '0', '9', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 12 11  4  8 12 12 12 12 12]] [['0', '7', '0', '9', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1023  r_total and score:  587.9733536132356 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 11 11  4 12 12 12 12 12]] [['0', '8', '0', '0', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 12 11  4  8 12 12 12 12 12]] [['0', '7', '0', '9', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1024  r_total and score:  1367.5848634387285 0.9680305990512725
Current Bleu score is:  0.9680305990512725

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 12 12 12  4 12 12 12 12 12]] [['6', '7', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12 12  4 12 12 12 12 12]] [['7', '7', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1025  r_total and score:  2098.7867214173284 1.397263923466486
Current Bleu score is:  1.397263923466486

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 10 11 11  6 12 12 12 12 12]] [['2', '8', '0', '0', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 12  5  4 12 12 12 12 12 12]] [['0', '7', '5', '9', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1026  r_total and score:  1429.058990084772 0.9132781882233417
Current Bleu score is:  0.9132781882233417

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 12 12 10  4 12 12 12 12 12]] [['8', '7', '7', '8', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 12 12  9  4 12 12 12 12 12]] [['8', '7', '7', '2', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1027  r_total and score:  1614.8713806120988 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 10 12 12  4 12 12 12 12 12]] [['2', '8', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4  5  9  4 12 12 12 12 12]] [['7', '9', '5', '2', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1028  r_total and score:  2029.4533491079476 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  4  5  5 12 12 12 12 12 12]] [['5', '9', '5', '5', '7', '7', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.18699762
  -0.27287935  -0.16480582  -0.1111393   -0.08027338   0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  4  5  9  4 12 12 12 12 12]] [['5', '9', '5', '2', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1029  r_total and score:  1848.669655022791 1.3079947830466374
Current Bleu score is:  1.3079947830466374

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12  5 12 12  4 12 12 12 12 12]] [['7', '5', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12 12  4 12 12 12 12 12]] [['7', '7', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1030  r_total and score:  1645.0768181425274 0.0
Current Bleu score is:  0.0
EPOCH %d 32
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  5 12 12  4 12 12 12 12 12]] [['4', '5', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12 12  4 12 12 12 12 12]] [['7', '9', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1031  r_total and score:  2470.4060668140455 1.0416678285694845
Current Bleu score is:  1.0416678285694845

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  4  5 12 12 12 12 12 12 12]] [['5', '9', '5', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.18699762
  -0.27287935  -0.16480582  -0.1111393   -0.08027338   0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12 12  4 12 12 12 12 12]] [['7', '9', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1032  r_total and score:  1091.1252279246519 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  6 11 12 10 12 12 12 12 12]] [['3', '6', '0', '7', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  4 11  9  4 12 12 12 12 12]] [['0', '9', '0', '2', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1033  r_total and score:  844.1076072047168 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  7 12 12  9 12 12 12 12 12]] [['5', '4', '7', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9  6  9  4 12 12 12 12 12]] [['7', '2', '6', '2', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1034  r_total and score:  1036.5057602112277 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  7 11 12  4 12 12 12 12 12]] [['0', '4', '0', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9  6  9  4 12 12 12 12 12]] [['7', '2', '6', '2', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1035  r_total and score:  1129.8951044346554 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  9 12 12  7 12 12 12 12 12]] [['5', '2', '7', '7', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 12 12  7 12 12 12 12 12]] [['7', '2', '7', '7', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1036  r_total and score:  1093.8009623202288 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  4  4  4  7 12 12 12 12 12]] [['9', '9', '9', '9', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  9  4  9  7 12 12 12 12 12]] [['9', '2', '9', '2', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1037  r_total and score:  1346.926125008978 1.0430146952865509
Current Bleu score is:  1.0430146952865509

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  4  4 11  7 10 12 12 12 12]] [['9', '9', '9', '0', '4', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.03214713
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 4  9 11  9  7 12 12 12 12 12]] [['9', '2', '0', '2', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1038  r_total and score:  719.6874156399009 0.7901675496612565
Current Bleu score is:  0.7901675496612565

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  9  7 11  7  2 12 12 12 12]] [['4', '2', '4', '0', '4', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.0820684
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  9  7  9  7 12 12 12 12 12]] [['4', '2', '4', '2', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1039  r_total and score:  1267.168630148669 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  9 11 11 10 12 12 12 12 12]] [['0', '2', '0', '0', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  9 11  9  7  8 12 12 12 12]] [['0', '2', '0', '2', '4', '3', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  7.15793012e-03
  1.11702861e-01  7.24234044e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
1040  r_total and score:  1157.9800296652495 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  9  5 12 10 10 12 12 12 12]] [['5', '2', '5', '7', '8', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242  2.85423596 -2.23661849 -0.06578356 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  9 11  9  9  8 12 12 12 12]] [['0', '2', '0', '2', '2', '3', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619  0.10436252
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1041  r_total and score:  986.077055071228 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  9 11 12  7 12 12 12 12 12]] [['0', '2', '0', '7', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  9 11  9  7 11 12 12 12 12]] [['0', '2', '0', '2', '4', '0', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1042  r_total and score:  1128.0840902770974 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  9  5  5  7  2 12 12 12 12]] [['5', '2', '5', '5', '4', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242  2.85423596 -2.23661849 -0.18699762 -0.54882446
 -0.08027338 -0.06079792 -0.0476879   0.39863571]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  9  5  9  4 11 12 12 12 12]] [['5', '2', '5', '2', '9', '0', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1043  r_total and score:  2058.545133784471 1.716727581898779
Current Bleu score is:  1.716727581898779

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  9  5  5  9 12 12 12 12 12]] [['5', '2', '5', '5', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242  2.85423596 -2.23661849 -0.18699762 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  9  5  9  4 12  8  8  8  8]] [['5', '2', '5', '2', '9', '7', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.01605517 -0.0218721  -0.01579772  0.09980099]
1044  r_total and score:  1869.130883274243 1.5130238400766454
Current Bleu score is:  1.5130238400766454

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  9  5  5  7  2 12 12 12 12]] [['5', '2', '5', '5', '4', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242  2.85423596 -2.23661849 -0.18699762 -0.54882446
 -0.08027338 -0.06079792 -0.0476879   0.39863571]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[5 9 5 9 4 8 8 8 8 8]] [['5', '2', '5', '2', '9', '3', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986  0.00447861
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
1045  r_total and score:  1790.589422420154 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 12  5  5  7  2 12 12 12 12]] [['5', '7', '5', '5', '4', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.0820684
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  9  5  9  4 12 12 12 12 12]] [['5', '2', '5', '2', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1046  r_total and score:  1574.6318005797184 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 12  7 12  7  2 12 12 12 12]] [['4', '7', '4', '7', '4', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.01459405
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9  7  9  9 11 12 12 12 12]] [['7', '2', '4', '2', '2', '0', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1047  r_total and score:  1496.0492327397928 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  9  9 11  7 11 11 12 12 12]] [['0', '2', '2', '0', '4', '0', '0', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  9 11  9  7 11 11 11 11 11]] [['0', '2', '0', '2', '4', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1048  r_total and score:  980.0576025943802 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  9  4 12  9  2 12 12 12 12]] [['0', '2', '9', '7', '2', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.09759632
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  9 11  9  6 11 11 12 12 12]] [['0', '2', '0', '2', '6', '0', '0', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1049  r_total and score:  1331.0339107092154 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  9  4 11  9  2 12 12 12 12]] [['0', '2', '9', '0', '2', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.09759632
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  9 11  9  6 11 11 11 11 11]] [['0', '2', '0', '2', '6', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1050  r_total and score:  1413.9491054626983 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  9  4  7  9  2 12 12 12 12]] [['4', '2', '9', '4', '2', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.09759632
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  9  7  9  9 11 11 11 11 11]] [['4', '2', '4', '2', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1051  r_total and score:  1681.843244954649 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  7  4  7  4  2 12 12 12 12]] [['4', '4', '9', '4', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.09759632
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  9  7  9  4 11 11 11 11 11]] [['4', '2', '4', '2', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1052  r_total and score:  1318.2064204371125 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  7  4  7  4  2 12 12 12 12]] [['4', '4', '9', '4', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.09759632
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[7 7 7 4 4 7 7 7 7 7]] [['4', '4', '4', '9', '9', '4', '4', '4', '4', '4']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1053  r_total and score:  1581.4354390921746 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  7  4  7  4  2 12 12 12 12]] [['4', '4', '9', '4', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.09759632
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 12  7 13  4 11 11 11 11 11]] [['4', '7', '4', '1', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1054  r_total and score:  1616.6227043137296 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4  6  4  2 12 12 12 12]] [['1', '8', '9', '6', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.10800809
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 12  6  4  6 12 12 11 11 11]] [['6', '7', '6', '9', '6', '7', '7', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1055  r_total and score:  1481.3635947239643 0.8101756743940552
Current Bleu score is:  0.8101756743940552

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9 11  4  7 12 12 12 12]] [['1', '8', '2', '0', '9', '4', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13  4 10 11 11 11 11 11]] [['1', '8', '1', '9', '8', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1056  r_total and score:  2544.1821743694773 1.4661320339004826
Current Bleu score is:  1.4661320339004826

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 12  9  2 12 12 12 12]] [['1', '8', '9', '7', '2', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.10800809
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10  6 12  4 12 11 11 11 11]] [['7', '8', '6', '7', '9', '7', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1057  r_total and score:  2958.19864131794 1.0969194382596978
Current Bleu score is:  1.0969194382596978

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 12  4  5  9  7 12 12 12 12]] [['1', '7', '9', '5', '2', '4', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.04723938 -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 12  6  9  9 11 12 12 12 12]] [['5', '7', '6', '2', '2', '0', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1058  r_total and score:  2063.6563529241935 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6 12 12 12 12 12 12 12 12 12]] [['6', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 12  4  6  9  7 12 12 12 12]] [['6', '7', '9', '6', '2', '4', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 12  6  9  4 12 12 12 12 12]] [['6', '7', '6', '2', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1059  r_total and score:  981.6468723353175 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  6  4  5  9  7 12 12 12 12]] [['5', '6', '9', '5', '2', '4', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 12  6  9  4 12 12 12 12 12]] [['5', '7', '6', '2', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1060  r_total and score:  1542.1696317740175 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  4 10  4  2 12 12 12 12]] [['8', '8', '9', '8', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344 -0.06578356 -0.6073741
 -0.08883709 -0.06728396 -0.05277534  0.44116294]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 12 10  9  4 12 12 12 12 12]] [['8', '7', '8', '2', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1061  r_total and score:  1247.5622604726432 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  6  4 11  9 11 11 12 12 12]] [['0', '6', '9', '0', '2', '0', '0', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  6 11  4  4 11 11 11 11 11]] [['0', '6', '0', '9', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1062  r_total and score:  1397.9012498346601 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  6  4  7  4  7 12 12 12 12]] [['4', '6', '9', '4', '9', '4', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 12  7  4  4 12 12 12 12 12]] [['4', '7', '4', '9', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1063  r_total and score:  1627.013481469555 0.0
Current Bleu score is:  0.0
EPOCH %d 33
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6 12 12 12 12 12 12 12 12 12]] [['6', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6  4  6  4  6 12 12 12 12]] [['6', '6', '9', '6', '9', '6', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 12  6 13  4 12 12 12 12 12]] [['6', '7', '6', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1064  r_total and score:  1007.3108970624781 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6 12 12 12 12 12 12 12 12 12]] [['6', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 12  4  6  4  2 12 12 12 12]] [['6', '7', '9', '6', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.09759632
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 12  6  4  8 11 12 12 12 12]] [['6', '7', '6', '9', '3', '0', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1065  r_total and score:  997.6981974914003 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6 12 12 12 12 12 12 12 12 12]] [['6', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 12  4  6  7  2 12 12 12 12]] [['6', '7', '9', '6', '4', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.0820684
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 12  6 12  8 12 12 12 12 12]] [['6', '7', '6', '7', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1066  r_total and score:  1009.615370100124 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 12  4  6  7  2 12 12 12 12]] [['6', '7', '9', '6', '4', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.0820684
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 12  6 12  4 12 12 12 12 12]] [['6', '7', '6', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1067  r_total and score:  1736.180547625312 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 12  4 12  4 12 12 12 12 12]] [['7', '7', '9', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12 12  7 12 12 12 12 12]] [['7', '7', '7', '7', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1068  r_total and score:  1482.9104690917713 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 12  4 12  4 12 12 12 12 12]] [['7', '7', '9', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12 12  7 12 12 12 12 12]] [['7', '7', '7', '7', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1069  r_total and score:  1933.8036514774535 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 12  4 12  4 12 12 12 12 12]] [['6', '7', '9', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12  6 13  9 12 12 12 12 12]] [['7', '7', '6', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1070  r_total and score:  1298.2531822304195 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 12  4 12  4 12 12 12 12 12]] [['7', '7', '9', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12 12  7 12 12 12 12 12]] [['7', '7', '7', '7', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1071  r_total and score:  1886.9194960994578 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 12  9 12  4 12 12 12 12 12]] [['7', '7', '2', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12 13  7 12 12 12 12 12]] [['7', '7', '7', '1', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1072  r_total and score:  1656.4873158910116 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 12  9 10  4 12 12 12 12 12]] [['8', '7', '2', '8', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 12 10  9  4 12 12 12 12 12]] [['8', '7', '8', '2', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1073  r_total and score:  1564.3509601738565 0.783523795316369
Current Bleu score is:  0.783523795316369

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  6  9 10  9 10 12 12 12 12]] [['8', '6', '2', '8', '2', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786   0.90091441 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 12 10  9  4 12 12 12 12 12]] [['8', '7', '8', '2', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1074  r_total and score:  1952.160560239879 1.2165630850070661
Current Bleu score is:  1.2165630850070661

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  6  9 10  9 10 12 12 12 12]] [['8', '6', '2', '8', '2', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786   0.90091441 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 11 10  9  9 12 10 10 10 10]] [['8', '0', '8', '2', '2', '7', '8', '8', '8', '8']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1075  r_total and score:  1478.9451189632898 0.6900588203221593
Current Bleu score is:  0.6900588203221593

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 11  9 10  9  2 10 10 10 10]] [['8', '0', '2', '8', '2', '<s>', '8', '8', '8', '8']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786   0.90091441 -0.54882446
 -0.08027338 -0.06079792 -0.0476879   0.39863571]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 11 10  9  9 10 10 10 10 10]] [['8', '0', '8', '2', '2', '8', '8', '8', '8', '8']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1076  r_total and score:  1653.6942273644106 0.8297266528265576
Current Bleu score is:  0.8297266528265576

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  6  9 10  4  2 10 10 12 12]] [['8', '6', '2', '8', '9', '<s>', '8', '8', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.01169815 -0.10800809
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  6 10  4 12 10 10 10 10 10]] [['8', '6', '8', '9', '7', '8', '8', '8', '8', '8']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1077  r_total and score:  1975.244195199259 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  6  4 10  4  2 12 12 12 12]] [['8', '6', '9', '8', '9', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344 -0.06578356 -0.6073741
 -0.08883709 -0.06728396 -0.05277534  0.44116294]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  6 10  4  4 12 12 12 12 12]] [['8', '6', '8', '9', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1078  r_total and score:  1393.2845706379417 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6  4 10  4 10 12 12 12 12]] [['6', '6', '9', '8', '9', '8', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01  1.04067266e+00
 -6.57835587e-02 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  6 10  4  6 12 12 12 12 12]] [['8', '6', '8', '9', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1079  r_total and score:  1152.3058971312405 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  6  4 10  4 10 12 12 12 12]] [['8', '6', '9', '8', '9', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344 -0.06578356 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 12 10  4  4 12 12 12 12 12]] [['8', '7', '8', '9', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1080  r_total and score:  1828.6709076797201 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  4 10  4 12 12 12 12 12]] [['1', '6', '9', '8', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01  1.04067266e+00
 -6.57835587e-02 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 12 10 13  5 12 12 12 12 12]] [['8', '7', '8', '1', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1081  r_total and score:  1376.0172843340542 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12  6  9 12  4 12 12 12 12 12]] [['7', '6', '2', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12 12  4 12 12 12 12 12]] [['7', '7', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1082  r_total and score:  1904.198464904374 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  9 10  4 12 12 12 12 12]] [['1', '6', '2', '8', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.04723938 -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 12 10 13  5 12 12 12 12 12]] [['8', '7', '8', '1', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1083  r_total and score:  1411.0534044769768 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  9 12  5 12 12 12 12 12]] [['1', '6', '2', '7', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  9  5 12 12 12 12 12]] [['1', '6', '1', '2', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1084  r_total and score:  2177.1569134850797 0.941082077804414
Current Bleu score is:  0.941082077804414

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  9 10  4 12 12 12 12 12]] [['1', '6', '2', '8', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.04723938 -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  6 10 13  5 12 12 12 12 12]] [['8', '6', '8', '1', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1085  r_total and score:  1015.5865044725651 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  4 13 12 12 12 12 12 12]] [['1', '6', '9', '1', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13 13  5 12 12 12 12 12]] [['1', '6', '1', '1', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1086  r_total and score:  2019.2571714123742 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 13  4 12 12 12 12 12]] [['1', '8', '9', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13 13  2 12 12 12 12 12]] [['1', '8', '1', '1', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.04964382 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]
1087  r_total and score:  2511.150083750291 1.0282905531532058
Current Bleu score is:  1.0282905531532058

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 13 13 13 12 12 12 12 12]] [['1', '8', '1', '1', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 13 13 13 13 12 12 12 12 12]] [['1', '1', '1', '1', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1088  r_total and score:  1809.8634689482853 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9 13 13 12 12 12 12 12]] [['1', '8', '2', '1', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13 13 13 12 12 12 12 12]] [['1', '8', '1', '1', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1089  r_total and score:  1763.1831594682685 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  9 12 12 12 12 12 12 12]] [['7', '8', '2', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 12  9 12 12 12 12 12]] [['7', '8', '7', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1090  r_total and score:  1950.2082548587914 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  9 12 13 12 12 12 12 12]] [['7', '8', '2', '7', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 12  9 12 12 12 12 12]] [['7', '8', '7', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1091  r_total and score:  2102.22468860069 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12  4  4  7 13 12 12 12 12 12]] [['7', '9', '9', '4', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  4  7 13  9 12 12 12 12 12]] [['4', '9', '4', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1092  r_total and score:  1762.33411168111 0.8308640463843671
Current Bleu score is:  0.8308640463843671

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12  4  9 12 13 12 12 12 12 12]] [['7', '9', '2', '7', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12 12  4 12 12 12 12 12]] [['7', '9', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1093  r_total and score:  1946.9726114891575 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  4  9 12  9 12 12 12 12 12]] [['1', '9', '2', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12 12  9 12 12 12 12 12]] [['7', '9', '7', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1094  r_total and score:  1524.9997719158275 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 13 12  9 12 12 12 12 12]] [['1', '8', '1', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4  7 13  8 12 12 12 12 12]] [['7', '9', '4', '1', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1095  r_total and score:  1489.9677978025254 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 13 12 13 12 12 12 12 12]] [['1', '8', '1', '7', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 13  8 12 12 12 12 12]] [['7', '8', '7', '1', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1096  r_total and score:  1251.147765826322 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9 12  4 12 12 12 12 12]] [['1', '8', '2', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 13  9 12 12 12 12 12]] [['7', '8', '7', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1097  r_total and score:  1954.7644620087976 0.0
Current Bleu score is:  0.0
EPOCH %d 34
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9 12  4 12 12 12 12 12]] [['1', '8', '2', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5  9  8 12  8 12 12 12]] [['5', '8', '5', '2', '3', '7', '3', '7', '7', '7']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.22865179
  -0.53217701  -1.31065241  -0.88385829  -0.63839066   4.03298912]
1098  r_total and score:  2203.785247385986 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9  5  4 12 12 12 12 12]] [['1', '8', '2', '5', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
  5.70811291e+01 -1.60607557e+01 -9.69991313e+00 -6.54128323e+00
 -4.72461950e+00  2.98474590e+01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 10  9 12  8 12 12 12]] [['5', '8', '5', '8', '2', '7', '3', '7', '7', '7']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -28.5925009   -0.79737572
  -0.53217701  -0.99194138  -0.93456636  -0.67501594   4.2643668 ]
1099  r_total and score:  2864.765488019888 1.7024321863844936
Current Bleu score is:  1.7024321863844936

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  9  5  9 12 12 12 12 12]] [['1', '6', '2', '5', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01  1.04067266e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5  4  9 12 12 12 12 12]] [['5', '8', '5', '9', '2', '7', '7', '7', '7', '7']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.74204172
  -0.49524651  -1.2196995   -0.82252282  -0.59408945   3.75311927]
1100  r_total and score:  2348.826618260195 1.6241216935469014
Current Bleu score is:  1.6241216935469014

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9  7  9  7 12 12 12 12]] [['1', '8', '2', '4', '2', '4', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  7  4  9  7  7 12 12 12]] [['4', '8', '4', '9', '2', '4', '4', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1101  r_total and score:  2886.47403056533 2.308643072371918
Current Bleu score is:  2.308643072371918

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9  7  9  7 12 12 12 12]] [['1', '8', '2', '4', '2', '4', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  7  4  7  7  7  7  7  7]] [['4', '8', '4', '9', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1102  r_total and score:  2909.0685135938556 2.4905465140086425
Current Bleu score is:  2.4905465140086425

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  9  5  4  5 12 12 12 12]] [['8', '8', '2', '5', '9', '5', '7', '7', '7', '7']] 

Reward:  [  0.91578194  -0.41684774   3.06090127   6.23306592  57.0811291
 -16.06075568  -9.69991313  -6.54128323  -4.7246195   29.84745896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 10  9 12  5  5  5  5]] [['5', '8', '5', '8', '2', '7', '5', '5', '5', '5']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -28.5925009   -0.79737572
  -0.53217701  -1.31065241  -0.88385829  -0.63839066   4.03298912]
1103  r_total and score:  3448.8277694043663 2.1853548746099127
Current Bleu score is:  2.1853548746099127

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  4 10  9 10 12 12 12 12]] [['8', '8', '9', '8', '2', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344  7.08574716 -2.01953311
 -1.2196995  -0.82252282 -0.59408945  3.75311927]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10 10 10 12 10 11 10 11]] [['8', '8', '8', '8', '8', '7', '8', '0', '8', '0']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1104  r_total and score:  1788.0366267746228 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  4 10  9 10 12 12 12 12]] [['8', '8', '9', '8', '2', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344  7.08574716 -2.01953311
 -1.2196995  -0.82252282 -0.59408945  3.75311927]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10 10  9 12 10 10 10 10]] [['8', '8', '8', '8', '2', '7', '8', '8', '8', '8']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1105  r_total and score:  1783.637930357475 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  9  7  9  7 12 12 12 12]] [['8', '8', '2', '4', '2', '4', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774  3.06090127 -2.23661849 -0.18699762 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  6  7  8  4 12 12 12 12 12]] [['4', '6', '4', '3', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703  0.82807057 -0.10026469 -0.06691772
 -0.16480582 -0.1111393  -0.08027338  0.50712153]
1106  r_total and score:  2685.608300245417 2.1828732879630834
Current Bleu score is:  2.1828732879630834

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  6  4  7  4  7  7 12 12 12]] [['8', '6', '9', '4', '9', '4', '4', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  6  7  8  4 12  7  7  7  7]] [['4', '6', '4', '3', '9', '7', '4', '4', '4', '4']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703  0.82807057 -0.10026469 -0.06691772
 -0.16480582 -0.1111393  -0.08027338  0.50712153]
1107  r_total and score:  2082.6574991423267 0.9709666103624816
Current Bleu score is:  0.9709666103624816

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 13 13  9  7 12 12 12 12]] [['1', '8', '1', '1', '2', '4', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13  8  9 12 12 12 12 12]] [['1', '8', '1', '3', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1108  r_total and score:  1835.6198419596358 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9  7  4  7 12 12 12 12]] [['3', '8', '2', '4', '9', '4', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  7  8  9 12 12 12 12 12]] [['4', '8', '4', '3', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438  0.88538718 -0.11096112 -0.07405663
 -0.18238762 -0.12299585 -0.08883709  0.56122223]
1109  r_total and score:  1617.1899910442894 0.9655191534795177
Current Bleu score is:  0.9655191534795177

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6 12 12 12 12 12 12 12 12 12]] [['6', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  9  6  4 12 12 12 12 12]] [['1', '6', '2', '6', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  6  6  8  4 12 12 12 12 12]] [['6', '6', '6', '3', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1110  r_total and score:  1158.8390832910138 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  9  5  9  5  5  5  5  5]] [['1', '6', '2', '5', '2', '5', '5', '5', '5', '5']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01  1.04067266e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  6  5 13  4  5  5  5  5  5]] [['5', '6', '5', '1', '9', '5', '5', '5', '5', '5']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1111  r_total and score:  1854.1408969632434 0.8067553158541243
Current Bleu score is:  0.8067553158541243

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9  7 12 12 12 12 12 12]] [['1', '8', '2', '4', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  7 13  4 12 12 12 12 12]] [['4', '8', '4', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1112  r_total and score:  1772.5539376254442 1.1376538299251697
Current Bleu score is:  1.1376538299251697

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  9  7  9 12 12 12 12 12]] [['1', '6', '2', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  6  7 10  6 12 12 12 12 12]] [['4', '6', '4', '8', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1113  r_total and score:  1522.5804427500736 0.8523398132533636
Current Bleu score is:  0.8523398132533636

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  9 12 12 12 12 12 12 12]] [['7', '8', '2', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  5  4 12 12 12 12 12]] [['7', '8', '7', '5', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1114  r_total and score:  2491.874805953411 1.727327665086801
Current Bleu score is:  1.727327665086801

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9 12  9 12 12 12 12 12]] [['1', '8', '2', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 13  9 12 12 12 12 12]] [['7', '8', '7', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1115  r_total and score:  2565.901548293343 1.191523011296915
Current Bleu score is:  1.191523011296915

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  9 12  9 12 12 12 12 12]] [['7', '8', '2', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  5  9 12 12 12 12 12]] [['7', '8', '7', '5', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1116  r_total and score:  2062.1166778936054 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9 13  9 12 12 12 12 12]] [['1', '8', '2', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13 10  2 12 12 12 12 12]] [['1', '8', '1', '8', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.05903678 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
1117  r_total and score:  2091.6533368487558 0.9866200119204362
Current Bleu score is:  0.9866200119204362

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9  5  9 12 12 12 12 12]] [['1', '8', '2', '5', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5  5  2 12 12 12 12 12]] [['5', '8', '5', '5', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -2.45698774
  -0.82252282  -0.59408945  -0.44995495  -0.35292995   2.95023436]
1118  r_total and score:  2256.9170564623796 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9  7  9 12 12 12 12 12]] [['9', '8', '2', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -1.38393724
  -2.01953311  -1.2196995   -0.82252282  -0.59408945   3.75311927]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  7 10  2 12 12 12 12 12]] [['5', '8', '4', '8', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [  0.33689735  13.19663097 -10.61366726  -1.69435646  -0.39480275
  -0.13216764  -0.09546167  -0.07230132  -0.05671079   0.47406043]
1119  r_total and score:  2455.2356654582754 1.2278917860183252
Current Bleu score is:  1.2278917860183252

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9 11  9 11 12 12 12 12]] [['4', '8', '2', '0', '2', '0', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 11 10  8 12 12 12 12 12]] [['0', '8', '0', '8', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -1.91961772e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1120  r_total and score:  2448.4454106664234 1.375985562280128
Current Bleu score is:  1.375985562280128

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9 11  9 12 12 12 12 12]] [['9', '8', '2', '0', '2', '7', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -1.38393724
  -2.01953311  -1.2196995   -0.82252282  -0.59408945   3.75311927]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 11 10  4 12 12 12 12 12]] [['0', '8', '0', '8', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1121  r_total and score:  2843.2192062941326 1.9060420003534233
Current Bleu score is:  1.9060420003534233

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9 11  9 12 12 12 12 12]] [['9', '8', '2', '0', '2', '7', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -1.38393724
  -2.01953311  -1.2196995   -0.82252282  -0.59408945   3.75311927]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 11  9  9 12 12 12 12 12]] [['0', '8', '0', '2', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1122  r_total and score:  2752.8878270691393 1.2703999184116923
Current Bleu score is:  1.2703999184116923

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  6  9 13  9 12 12 12 12 12]] [['9', '6', '2', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 13  9 12 12 12 12 12]] [['7', '8', '7', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1123  r_total and score:  2165.211834350153 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  6  9 13 13 12 12 12 12 12]] [['9', '6', '2', '1', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 13 13  9 13 12 12 12 12 12]] [['1', '1', '1', '2', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1124  r_total and score:  2300.4937064176493 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9 12  9 12 12 12 12 12]] [['1', '8', '2', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  9  9 12 12 12 12 12]] [['7', '8', '7', '2', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1125  r_total and score:  1996.3108850640094 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  6  9  5  9 12 12 12 12 12]] [['5', '6', '2', '5', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344 -0.18699762 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 13 12  9  9 12 12 12 12 12]] [['5', '1', '7', '2', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1126  r_total and score:  1803.3007070871902 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12  6  9 12  9 12 12 12 12 12]] [['7', '6', '2', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  6 12  9  8 12 12 12 12 12]] [['7', '6', '7', '2', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1127  r_total and score:  2055.7320262515555 1.1503344339600554
Current Bleu score is:  1.1503344339600554

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  9 12  9 12 12 12 12 12]] [['1', '6', '2', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  6 12  9  7 12 12 12 12 12]] [['7', '6', '7', '2', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1128  r_total and score:  1606.6967593643903 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  6  9 12  9 12 12 12 12 12]] [['0', '6', '2', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  6 12  9  9 12 12 12 12 12]] [['7', '6', '7', '2', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1129  r_total and score:  2213.749770261419 1.5076137914384655
Current Bleu score is:  1.5076137914384655

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  6  9 12  9 12 12 12 12 12]] [['4', '6', '2', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  9  9 12 12 12 12 12]] [['7', '8', '7', '2', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1130  r_total and score:  2240.2383400530316 1.2924443730320625
Current Bleu score is:  1.2924443730320625
EPOCH %d 35
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9 10  9 12 12 12 12 12]] [['4', '8', '2', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 12 10  8  9 12 12 12 12 12]] [['8', '7', '8', '3', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
1131  r_total and score:  2393.782369339811 1.8598079196757882
Current Bleu score is:  1.8598079196757882

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9 12 13 12 12 12 12 12]] [['4', '8', '2', '7', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  9  9 12 12 12 12 12]] [['7', '8', '7', '2', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1132  r_total and score:  2630.2257961238856 2.2011589261455557
Current Bleu score is:  2.2011589261455557

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  9  5  9 12 12 12 12 12]] [['5', '8', '2', '5', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242  3.36939485  5.71790702 -1.38393724 -2.01953311
 -1.2196995  -0.82252282 -0.59408945  3.75311927]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5  8  9 12 12 12 12 12]] [['5', '5', '5', '3', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
1133  r_total and score:  1995.625092162868 1.8844513135627088
Current Bleu score is:  1.8844513135627088

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  9 10 13 12 12 12 12 12]] [['5', '8', '2', '8', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242  3.36939485 -2.61061406 -0.20694689 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  8  9 12 12 12 12 12]] [['8', '8', '8', '3', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
1134  r_total and score:  1798.8042747674858 1.8083794250815
Current Bleu score is:  1.8083794250815

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9 10  9 10 12 12 12 12]] [['1', '8', '2', '8', '2', '8', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  9  8 12 12 12 12 12]] [['8', '8', '8', '2', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1135  r_total and score:  1628.6900466213824 1.7535967678850775
Current Bleu score is:  1.7535967678850775

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 13 10  9 10 12 12 12 12]] [['8', '8', '1', '8', '2', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.93835228 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  9  8 12 12 12 12 12]] [['8', '8', '8', '2', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1136  r_total and score:  1270.4057984410147 1.4345838673014357
Current Bleu score is:  1.4345838673014357

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  9 10  9 12 12 12 12 12]] [['8', '8', '2', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774  3.06090127 -2.23661849 -0.18699762 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  9  8 12 12 12 12 12]] [['8', '8', '8', '2', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1137  r_total and score:  1569.9741066010442 1.7062595444431692
Current Bleu score is:  1.7062595444431692

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  9 12  9 12 12 12 12 12]] [['3', '8', '2', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  9  9 12 12 12 12 12]] [['7', '8', '7', '2', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1138  r_total and score:  2301.295655605823 1.8386454304498372
Current Bleu score is:  1.8386454304498372

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  9 10  9 12 12 12 12 12]] [['8', '8', '2', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774  3.06090127 -2.23661849 -0.18699762 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  6 10  9  9 12 12 12 12 12]] [['8', '6', '8', '2', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1139  r_total and score:  1408.678288243875 0.9826710625325539
Current Bleu score is:  0.9826710625325539

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6 12 12 12 12 12 12 12 12 12]] [['6', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6  9  6  9 12 12 12 12 12]] [['6', '6', '2', '6', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  6  6  9  9 12 12 12 12 12]] [['6', '6', '6', '2', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1140  r_total and score:  742.2250656198456 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  6 13  6  9 10 12 12 12 12]] [['8', '6', '1', '6', '2', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  6  6  9  9 12 12 12 12 12]] [['6', '6', '6', '2', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1141  r_total and score:  681.4388691201773 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6 12 12 12 12 12 12 12 12 12]] [['6', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  6 13  6  9  6 12 12 12 12]] [['8', '6', '1', '6', '2', '6', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  6  6  9  9 12 12 12 12 12]] [['6', '6', '6', '2', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1142  r_total and score:  834.5235009105049 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 13 10  9 12 12 12 12 12]] [['8', '8', '1', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.93835228 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  6 10  9  9 12 12 12 12 12]] [['8', '6', '8', '2', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1143  r_total and score:  994.6448129397588 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 13 10 13 12 12 12 12 12]] [['8', '8', '1', '8', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  9  9 12 12 12 12 12]] [['8', '8', '8', '2', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1144  r_total and score:  1268.1928014579362 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  6 13 12  9 12 12 12 12 12]] [['0', '6', '1', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  6 12 11  6 12 12 12 12 12]] [['7', '6', '7', '0', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1145  r_total and score:  1774.494537361356 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 13 10  9 10 12 12 12 12]] [['8', '8', '1', '8', '2', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.93835228 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  9  9 12 12 12 12 12]] [['8', '8', '8', '2', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1146  r_total and score:  944.5213639052404 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  4 12 13 12 12 12 12 12]] [['0', '8', '9', '7', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 13  9 12 12 12 12 12]] [['7', '8', '7', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1147  r_total and score:  1717.492293588953 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  9 12 13 12 12 12 12 12]] [['0', '8', '2', '7', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 10  9  2 12 12 12 12 12]] [['7', '8', '8', '2', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.07181768 -0.05903678 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
1148  r_total and score:  2446.3151548743454 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  5  9  5 13 12 12 12 12 12]] [['5', '5', '2', '5', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344 -0.18699762 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  6 10  8 12 12 12 12 12]] [['5', '5', '6', '8', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.05226761 -0.00608019 -0.01415137
 -0.03485219 -0.0235031  -0.01697575  0.10724315]
1149  r_total and score:  1420.2728075737077 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 13 10 13 10 12 12 12 12]] [['8', '8', '1', '8', '1', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  9  6 12 12 12 12 12]] [['8', '8', '8', '2', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1150  r_total and score:  1674.9439156760118 1.1881734702930031
Current Bleu score is:  1.1881734702930031

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 13  9  5  9 12 12 12 12 12]] [['1', '1', '2', '5', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01  1.04067266e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 13  5  9  9 12 12 12 12 12]] [['5', '1', '5', '2', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1151  r_total and score:  1897.8534586984836 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  5  9  5  9 12 12 12 12 12]] [['5', '5', '2', '5', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344 -0.18699762 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5  9  7 12 12 12 12 12]] [['5', '5', '5', '2', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1152  r_total and score:  1837.925191085961 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  5  4  5  9  5 12 12 12 12]] [['5', '5', '9', '5', '2', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774  3.06090127 -2.23661849 -0.06578356 -0.12121406
 -0.21689665 -0.14626754 -0.1056457   0.66740947]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5 10  8 12 12 12 12 12]] [['5', '5', '5', '8', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438  0.88538718 -0.03419142 -0.07957902
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
1153  r_total and score:  1998.8443301051998 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 13 13  5  4 12 12 12 12 12]] [['1', '1', '1', '5', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  1.24767480e-02  1.69612658e-01
  9.38352275e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 13  5  9  4 12 12 12 12 12]] [['5', '1', '5', '2', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1154  r_total and score:  1905.4253297305518 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  5  9  5 13  5 12 12 12 12]] [['5', '5', '2', '5', '1', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344 -0.18699762 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5 10  8  5  5  5  5  5]] [['5', '5', '5', '8', '3', '5', '5', '5', '5', '5']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438  0.88538718 -0.03419142 -0.07957902
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
1155  r_total and score:  1996.0083267448947 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  5  9  5  9  5 12 12 12 12]] [['5', '5', '2', '5', '2', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344 -0.18699762 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5 10  8 12  5 12 12 12]] [['5', '5', '5', '8', '3', '7', '5', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438  0.88538718 -0.03419142 -0.07957902
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
1156  r_total and score:  2012.6937355501957 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  5 12  5 12  5  5  5  5  5]] [['5', '5', '7', '5', '7', '5', '5', '5', '5', '5']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5 10  8  5  5  5  5  5]] [['5', '5', '5', '8', '3', '5', '5', '5', '5', '5']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438  0.88538718 -0.03419142 -0.07957902
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
1157  r_total and score:  1946.6601939298048 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5  5 12 12 12 12 12 12 12 12]] [['5', '5', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[5 5 4 5 9 5 5 5 5 5]] [['5', '5', '9', '5', '2', '5', '5', '5', '5', '5']] 

Reward:  [ 0.91578194 -0.41684774  3.06090127 -2.23661849 -0.06578356 -0.12121406
 -0.21689665 -0.14626754 -0.1056457   0.66740947]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 13  5  9  9  5  5  5  5  5]] [['5', '1', '5', '2', '2', '5', '5', '5', '5', '5']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1158  r_total and score:  2092.4435229032824 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[5 5 4 5 9 5 5 5 5 5]] [['5', '5', '9', '5', '2', '5', '5', '5', '5', '5']] 

Reward:  [ 0.91578194 -0.41684774  3.06090127 -2.23661849 -0.06578356 -0.12121406
 -0.21689665 -0.14626754 -0.1056457   0.66740947]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5 10  8  5  5  5  5  5]] [['5', '5', '5', '8', '3', '5', '5', '5', '5', '5']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438  0.88538718 -0.03419142 -0.07957902
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
1159  r_total and score:  1877.6164584038834 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  5  4  5  9  5  5  5  5  5]] [['0', '5', '9', '5', '2', '5', '5', '5', '5', '5']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -1.21214063e-01 -2.16896651e-01 -1.46267540e-01
 -1.05645704e-01  6.67409472e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5  8  4  5  5  5 12 12]] [['5', '5', '5', '3', '9', '5', '5', '5', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
1160  r_total and score:  2389.5630623201278 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  5  4  5  9  5  5 12 12 12]] [['0', '5', '9', '5', '2', '5', '5', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -1.21214063e-01 -2.16896651e-01 -1.46267540e-01
 -1.05645704e-01  6.67409472e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5  9 13 12 12 12 12 12]] [['5', '5', '5', '2', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1161  r_total and score:  2098.594843468405 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11  4 11  4 11 12 12 12 12]] [['0', '0', '9', '0', '9', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11 11  9  4 12 12 12 12 12]] [['0', '0', '0', '2', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1162  r_total and score:  1954.0213562396323 1.1281878366717835
Current Bleu score is:  1.1281878366717835

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  4 10  4 10 10 12 12 12]] [['8', '8', '9', '8', '9', '8', '8', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344 -0.06578356 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  9 13 12 10 10 10 10]] [['8', '8', '8', '2', '1', '7', '8', '8', '8', '8']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1163  r_total and score:  1522.640442257859 0.9718223133674255
Current Bleu score is:  0.9718223133674255
EPOCH %d 36
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  4 10  9 10 12 12 12 12]] [['8', '8', '9', '8', '2', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344  7.08574716 -2.01953311
 -1.2196995  -0.82252282 -0.59408945  3.75311927]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  9  2 12 12 12 12 12]] [['8', '8', '8', '2', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.05903678 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
1164  r_total and score:  1941.6058987262234 1.0310339049262767
Current Bleu score is:  1.0310339049262767

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  5  4  5  4  5 12 12 12 12]] [['5', '5', '9', '5', '9', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774  3.06090127 -2.23661849 -0.06578356 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5  9 13 12 12 12 12 12]] [['5', '5', '5', '2', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1165  r_total and score:  2100.328872396549 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 12 12 12 12 12 12 12 12 12]] [['3', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 13  4  8  4 12 12 12 12 12]] [['1', '1', '9', '3', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 13  8  2  9 12 12 12 12 12]] [['3', '1', '3', '<s>', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.07335241 -0.02464422 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]
1166  r_total and score:  1515.4684826020455 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  5  9  5  9  5 12 12 12 12]] [['5', '5', '2', '5', '2', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344 -0.18699762 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5  4  9 12 12 12 12 12]] [['5', '5', '5', '9', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1167  r_total and score:  2574.3211037695664 1.2571245710906018
Current Bleu score is:  1.2571245710906018

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 12 12 12 12 12 12 12 12 12]] [['3', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 13  4 13  9 12 12 12 12 12]] [['1', '1', '9', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 13 13 10  9 12 12 12 12 12]] [['1', '1', '1', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1168  r_total and score:  1627.0521433238591 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 11 12 12 12 12 12 12 12 12]] [['0', '0', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11  4 11  9 11 11 11 11 11]] [['0', '0', '9', '0', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11 11 10  8 11 11 11 11 11]] [['0', '0', '0', '8', '3', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1169  r_total and score:  2289.951941190957 1.742598017037354
Current Bleu score is:  1.742598017037354

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[5 5 4 5 9 5 5 5 5 5]] [['5', '5', '9', '5', '2', '5', '5', '5', '5', '5']] 

Reward:  [ 0.91578194 -0.41684774  3.06090127 -2.23661849 -0.06578356 -0.12121406
 -0.21689665 -0.14626754 -0.1056457   0.66740947]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5 10 11  5  5  5  5  5]] [['5', '5', '5', '8', '0', '5', '5', '5', '5', '5']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438  0.88538718 -0.11096112 -0.07405663
 -0.18238762 -0.12299585 -0.08883709  0.56122223]
1170  r_total and score:  2233.8812918794356 0.9727128174835294
Current Bleu score is:  0.9727128174835294

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 7 7 7 7 7 7 7 7 7]] [['4', '4', '4', '4', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 7 9 7 9 7 7 7 7 7]] [['4', '4', '2', '4', '2', '4', '4', '4', '4', '4']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  7  5 10  7  7  7  7  7]] [['4', '4', '4', '5', '8', '4', '4', '4', '4', '4']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.01919618  0.84624374 -0.07405663
 -0.18238762 -0.12299585 -0.08883709  0.56122223]
1171  r_total and score:  1596.474879100302 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[7 7 7 7 7 7 7 7 7 7]] [['4', '4', '4', '4', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 11  9  7  9  7  7  7  7  7]] [['9', '0', '2', '4', '2', '4', '4', '4', '4', '4']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  7 10 10  7  7  7  7  7]] [['4', '4', '4', '8', '8', '4', '4', '4', '4', '4']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -1.00167035e-01 -1.91961772e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1172  r_total and score:  1885.8269144638625 1.0283219159488242
Current Bleu score is:  1.0283219159488242

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 11 11 11 11 11 11 11 11 11]] [['4', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 7 9 7 9 7 7 7 7 7]] [['4', '4', '2', '4', '2', '4', '4', '4', '4', '4']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  7 10 10  7  7  7  7  7]] [['4', '4', '4', '8', '8', '4', '4', '4', '4', '4']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -1.00167035e-01 -1.91961772e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1173  r_total and score:  1611.085608988605 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 11  9 11  9 11 11 11 11 11]] [['3', '0', '2', '0', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11 11 10  9 11 12 12 12 12]] [['0', '0', '0', '8', '2', '0', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1174  r_total and score:  1040.046319386876 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  7  9  7  9  7  7  7  7 12]] [['4', '4', '2', '4', '2', '4', '4', '4', '4', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  7 10  8  7 12 12 12 12]] [['4', '4', '4', '8', '3', '4', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -1.00167035e-01 -1.91961772e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1175  r_total and score:  1427.3374157397866 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  7 13  7 13  7  7  7  7  7]] [['4', '4', '1', '4', '1', '4', '4', '4', '4', '4']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  7 10  8  7  7  7  7  7]] [['4', '4', '4', '8', '3', '4', '4', '4', '4', '4']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -1.00167035e-01 -1.91961772e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1176  r_total and score:  1543.7533986082651 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  7 13  7 13  7  7  7  7  7]] [['4', '4', '1', '4', '1', '4', '4', '4', '4', '4']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  7 10  8  7  7  7  7  7]] [['4', '4', '4', '8', '3', '4', '4', '4', '4', '4']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -1.00167035e-01 -1.91961772e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1177  r_total and score:  1921.4019884665167 0.9367749529752755
Current Bleu score is:  0.9367749529752755

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  7 13  7  9  7  7  7  7  7]] [['4', '4', '1', '4', '2', '4', '4', '4', '4', '4']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  7 10 12  7  7 12 12 12]] [['4', '4', '4', '8', '7', '4', '4', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1178  r_total and score:  2209.341238100194 1.060168784030731
Current Bleu score is:  1.060168784030731

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  7 13  7  9  7  7  7  7  7]] [['4', '4', '1', '4', '2', '4', '4', '4', '4', '4']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  7  7 12  7  7 12 12 12]] [['4', '4', '4', '4', '7', '4', '4', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1179  r_total and score:  2409.436577413842 1.6018116992091926
Current Bleu score is:  1.6018116992091926

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 11 13 11  9 11 12 12 12 12]] [['1', '0', '1', '0', '2', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 13 11 10  9 12 12 12 12 12]] [['0', '1', '0', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1180  r_total and score:  1462.095048113491 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 11  4 11  9 12 12 12 12 12]] [['1', '0', '9', '0', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11 11 10  9 12 12 12 12 12]] [['0', '0', '0', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1181  r_total and score:  1572.9144371213968 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 12 13 12  9 12 12 12 12 12]] [['1', '7', '1', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 13 12  7  9 12 12 12 12 12]] [['7', '1', '7', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1182  r_total and score:  2169.409533129609 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  5 13  5  9 12 12 12 12 12]] [['5', '5', '1', '5', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5 10  9 12 12 12 12 12]] [['5', '5', '5', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438  0.88538718 -0.11096112 -0.07405663
 -0.18238762 -0.12299585 -0.08883709  0.56122223]
1183  r_total and score:  2518.658229481843 1.1731957160412347
Current Bleu score is:  1.1731957160412347

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 12 13 12  9 12 12 12 12 12]] [['0', '7', '1', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12  7  7 12 12 12 12 12]] [['7', '7', '7', '4', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1184  r_total and score:  2787.562145531333 1.8794055245844654
Current Bleu score is:  1.8794055245844654

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11 13 11  9 12 12 12 12 12]] [['4', '0', '1', '0', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 12 11 10 12 12 12 12 12 12]] [['0', '7', '0', '8', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1185  r_total and score:  2886.9358663465396 1.4365580901429205
Current Bleu score is:  1.4365580901429205

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 12 13 12  9 12 12 12 12 12]] [['0', '7', '1', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12  7  7 12 12 12 12 12]] [['7', '7', '7', '4', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1186  r_total and score:  3470.6786964083717 2.696174200824209
Current Bleu score is:  2.696174200824209

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 13 11  9 12 12 12 12 12]] [['3', '8', '1', '0', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 13 11  8 10 12 12 12 12 12]] [['0', '1', '0', '3', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
1187  r_total and score:  3049.054224785631 1.4388178057096257
Current Bleu score is:  1.4388178057096257

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 13 13 12  9 12 12 12 12 12]] [['4', '1', '1', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 13 12  7  9 12 12 12 12 12]] [['7', '1', '7', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1188  r_total and score:  2852.41430795981 1.571680402589187
Current Bleu score is:  1.571680402589187

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 12 13 12  9 12 12 12 12 12]] [['4', '7', '1', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 13 12  7  9 12 12 12 12 12]] [['7', '1', '7', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1189  r_total and score:  2727.315872528571 2.0971908382389173
Current Bleu score is:  2.0971908382389173

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 12 12 12  4 12 12 12 12 12]] [['4', '7', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 13 12  4 12 12 12 12 12 12]] [['7', '1', '7', '9', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1190  r_total and score:  2863.1617220482935 1.8550125005209939
Current Bleu score is:  1.8550125005209939

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  5  5  5  9 12 12 12 12 12]] [['4', '5', '5', '5', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5  4  4 12 12 12 12 12]] [['5', '5', '5', '9', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1191  r_total and score:  2026.1504277152897 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 12 13 12  9 12 12 12 12 12]] [['4', '7', '1', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12  4  4 12 12 12 12 12]] [['7', '7', '7', '9', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1192  r_total and score:  2824.843455531768 1.5860568951608462
Current Bleu score is:  1.5860568951608462

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  5  5  5  9 12 12 12 12 12]] [['4', '5', '5', '5', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5 10 10 12 12 12 12 12]] [['5', '5', '5', '8', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438  0.88538718 -0.03419142 -0.07957902
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
1193  r_total and score:  2829.3310840615673 1.3138652096226278
Current Bleu score is:  1.3138652096226278

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6 12 12 12 12 12 12 12 12 12]] [['6', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  6 13  6  9  5 12 12 12 12]] [['4', '6', '1', '6', '2', '5', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813  0.6934356
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  6  6  8  9 12 12 12 12 12]] [['6', '6', '6', '3', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1194  r_total and score:  1137.7645686752348 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 2  6 13  6  9 12 12 12 12 12]] [['<s>', '6', '1', '6', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.01412722  0.02105908 -0.00497254 -0.00725627  0.08149774 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  6  6  8  9 12 12 12 12 12]] [['6', '6', '6', '3', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1195  r_total and score:  1612.9240145809774 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 12 13 12 13 12 12 12 12 12]] [['4', '7', '1', '7', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12  7  7 12 12 12 12 12]] [['7', '7', '7', '4', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1196  r_total and score:  2421.194863270085 1.0175037896943837
Current Bleu score is:  1.0175037896943837

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 12  4  5 13 12 12 12 12 12]] [['4', '7', '9', '5', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 13 12  7  4 12 12 12 12 12]] [['7', '1', '7', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1197  r_total and score:  2789.2289051045545 1.1496495069318433
Current Bleu score is:  1.1496495069318433
EPOCH %d 37
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  5  4  5  9 12 12 12 12 12]] [['4', '5', '9', '5', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12  5  7  2 12 12 12 12 12]] [['7', '7', '5', '4', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01  8.28070568e-01
 -3.31988221e-01 -1.11139296e-01 -8.02733758e-02 -6.07979199e-02
 -4.76879010e-02  3.98635713e-01]
1198  r_total and score:  2910.644328869806 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 12  4 12  9 12 12 12 12 12]] [['4', '7', '9', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12  7  7 12 12 12 12 12]] [['7', '7', '7', '4', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1199  r_total and score:  2779.084196572104 1.3907082885113413
Current Bleu score is:  1.3907082885113413

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 13  4 12  9 12 12 12 12 12]] [['4', '1', '9', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 13  7  4 12 12 12 12 12]] [['7', '9', '1', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1200  r_total and score:  2126.2731838514237 1.013274981804427
Current Bleu score is:  1.013274981804427

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11 13  8  9 12 12 12 12 12]] [['0', '0', '1', '3', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8  4  8  7 12 12 12 12 12 12]] [['3', '9', '3', '4', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1201  r_total and score:  2369.3850424319544 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11 13 12  9 12 12 12 12 12]] [['0', '0', '1', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  7 12 12 12 12 12]] [['7', '9', '7', '4', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1202  r_total and score:  2242.441286929712 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11  4 11  4 11 12 12 12 12]] [['4', '0', '9', '0', '9', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11 11  8  9 12 12 12 12 12]] [['0', '0', '0', '3', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1203  r_total and score:  1580.4130920770533 1.1142884286152956
Current Bleu score is:  1.1142884286152956

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11 11 11  9 12 12 12 12 12]] [['0', '0', '0', '0', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  4 11  7  4 12 12 12 12 12]] [['0', '9', '0', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1204  r_total and score:  1660.2944231577342 1.25121252032646
Current Bleu score is:  1.25121252032646

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11 11 11  9 12 12 12 12 12]] [['4', '0', '0', '0', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11 11  8  7 12 12 12 12 12]] [['0', '0', '0', '3', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1205  r_total and score:  1215.3217930731312 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 11  5  5  9  5 12 12 12 12]] [['5', '0', '5', '5', '2', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446  0.66128847
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  5  7 10 12 12 12 12 12]] [['5', '0', '5', '4', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553  0.88538718 -0.03419142 -0.07957902
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
1206  r_total and score:  1913.0866278809583 1.138240815176164
Current Bleu score is:  1.138240815176164

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 11  5  5  9  5 12 12 12 12]] [['5', '0', '5', '5', '2', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446  0.66128847
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  5  4  7 12 12 12 12 12]] [['5', '0', '5', '9', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1207  r_total and score:  1696.1377483528013 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11 13  5  6  5 12 12 12 12]] [['4', '0', '1', '5', '6', '5', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.16961266 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  5  4  7 12 12 12 12 12]] [['5', '0', '5', '9', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1208  r_total and score:  2138.2327591948892 1.4539401004377623
Current Bleu score is:  1.4539401004377623

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  7  5 13  5 12 12 12 12]] [['4', '8', '4', '5', '1', '5', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.04723938 -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  5  4  7 12 12 12 12 12]] [['5', '0', '5', '9', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1209  r_total and score:  1811.6614314194221 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11  7  7  7  7  7 12 12 12]] [['4', '0', '4', '4', '4', '4', '4', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 11  7  4  9 12 12 12 12 12]] [['4', '0', '4', '9', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1210  r_total and score:  1457.1810769778472 0.9041897125407501
Current Bleu score is:  0.9041897125407501

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  6  7  7  6  7 12 12 12 12]] [['4', '6', '4', '4', '6', '4', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 11  7  4  9 12 12 12 12 12]] [['4', '0', '4', '9', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1211  r_total and score:  1359.7876406867958 0.8652607006955194
Current Bleu score is:  0.8652607006955194

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  6  7  7  6  7 12 12 12 12]] [['4', '6', '4', '4', '6', '4', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 11  7  4  9 12 12 12 12 12]] [['4', '0', '4', '9', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1212  r_total and score:  1276.5805372480845 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  6 13  7  6 12 12 12 12 12]] [['4', '6', '1', '4', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 11  7  4  9 12 12 12 12 12]] [['4', '0', '4', '9', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1213  r_total and score:  1776.318718563432 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 11  5  5  9  5 12 12 12 12]] [['5', '0', '5', '5', '2', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446  0.66128847
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  5  4  7 12 12 12 12 12]] [['5', '0', '5', '9', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1214  r_total and score:  2609.1465487132236 1.5521147764094572
Current Bleu score is:  1.5521147764094572

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  6 13  8  9 12 12 12 12 12]] [['3', '6', '1', '3', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 11  8  4  6 12 12 12 12 12]] [['3', '0', '3', '9', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1215  r_total and score:  1802.2990522209757 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 11  5  5  9 12 12 12 12 12]] [['5', '0', '5', '5', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 11  5  4  7 12 12 12 12 12]] [['5', '0', '5', '9', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1216  r_total and score:  1929.339521819969 1.4693089366728744
Current Bleu score is:  1.4693089366728744

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11 11 11  9 11 12 12 12 12]] [['0', '0', '0', '0', '2', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11 11  4 10 12 12 12 12 12]] [['0', '0', '0', '9', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1217  r_total and score:  1143.8198789015341 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 12 12 12 12 12 12 12 12 12]] [['3', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  6  8  8  9  8 12 12 12 12]] [['3', '6', '3', '3', '2', '3', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 11  8  4 10 12 12 12 12 12]] [['3', '0', '3', '9', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1218  r_total and score:  1777.2377662844947 1.2360130152218876
Current Bleu score is:  1.2360130152218876

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 11 10 10  6 10 10 10 10 10]] [['8', '0', '8', '8', '6', '8', '8', '8', '8', '8']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 11 10 10 11 12 10 10 10 10]] [['8', '0', '8', '8', '0', '7', '8', '8', '8', '8']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1219  r_total and score:  1250.082843359178 0.7199328990733573
Current Bleu score is:  0.7199328990733573

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 12 12 12 12 12 12 12 12 12]] [['3', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10 13  8  6  8  8  8  8  8]] [['3', '8', '1', '3', '6', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 11 10 10 12 12  8  8  8  8]] [['3', '0', '8', '8', '7', '7', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
1220  r_total and score:  1928.2885344775134 1.4351148997326655
Current Bleu score is:  1.4351148997326655

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 12 12 12 12 12 12 12 12 12]] [['3', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[8 6 4 8 6 8 5 5 5 5]] [['3', '6', '9', '3', '6', '3', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.00488055 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 11 10  4 10 12  5 12 12 12]] [['3', '0', '8', '9', '8', '7', '5', '7', '7', '7']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -2.21824254e-02 -2.35030996e-02
 -1.69757522e-02  1.07243147e-01]
1221  r_total and score:  2022.4215640802117 1.4962195653509165
Current Bleu score is:  1.4962195653509165

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 12 12 12 12 12 12 12 12 12]] [['3', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  6 11  8  6  8  8  8  8  8]] [['3', '6', '0', '3', '6', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 11 10 10 12 12  8  8  8  8]] [['3', '0', '8', '8', '7', '7', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
1222  r_total and score:  1632.4336231188695 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 12 12 12 12 12 12 12 12 12]] [['3', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  8  8  7  8  8  8  8  8]] [['3', '8', '3', '3', '4', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 11 10 10 12 12  8  8  8  8]] [['3', '0', '8', '8', '7', '7', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
1223  r_total and score:  1417.4824591763745 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 12 12 12 12 12 12 12 12 12]] [['3', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 11 11  8  4  8  8  8  8  8]] [['1', '0', '0', '3', '9', '3', '3', '3', '3', '3']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 11 10 10 12 12  8  8  8  8]] [['3', '0', '8', '8', '7', '7', '3', '3', '3', '3']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
1224  r_total and score:  1515.6344901598864 1.197270665948292
Current Bleu score is:  1.197270665948292

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 11 11  9 11 11 11 11 11]] [['1', '8', '0', '0', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11 13 10  7 12 12 12 12 12]] [['0', '0', '1', '8', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1225  r_total and score:  1414.3036469594651 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 11 13 12  4 12 12 12 12 12]] [['1', '0', '1', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 11 11 10 12 12 12 12 12 12]] [['7', '0', '0', '8', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1226  r_total and score:  2262.5568970936583 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 11 13 12  4 12 12 12 12 12]] [['1', '0', '1', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 11 11 10  9 12 12 12 12 12]] [['7', '0', '0', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1227  r_total and score:  2225.215917070564 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11 11 11 11 11 12 12 12 12]] [['0', '0', '0', '0', '0', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11 11 10 12 12 12 12 12 12]] [['0', '0', '0', '8', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1228  r_total and score:  2286.3960096923943 1.674762252671832
Current Bleu score is:  1.674762252671832

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 11 11 11 11 11 11 11 11]] [['0', '8', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  4 11 10  7 12 12 12 12 12]] [['0', '9', '0', '8', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1229  r_total and score:  2476.357789021641 1.779702265533538
Current Bleu score is:  1.779702265533538

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  5 11 11 11 12 12 12 12]] [['0', '8', '5', '0', '0', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 11 10  9 12 12 12 12 12]] [['0', '8', '0', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1230  r_total and score:  2359.260241135619 1.4801350159889672
Current Bleu score is:  1.4801350159889672
EPOCH %d 38
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 11 11 11 11 12 12 12 12]] [['0', '8', '0', '0', '0', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 11 10  9 12 12 12 12 12]] [['0', '8', '0', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1231  r_total and score:  2154.3876607127127 1.0896025327656536
Current Bleu score is:  1.0896025327656536

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 11 11 11 12 12 12 12 12]] [['0', '8', '0', '0', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 12 10  9 12 12 12 12 12]] [['0', '8', '7', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1232  r_total and score:  1530.003665634869 0.7652058832556895
Current Bleu score is:  0.7652058832556895

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 11 11  6 12 12 12 12 12]] [['4', '8', '0', '0', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 12 10  9 12 12 12 12 12]] [['0', '8', '7', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1233  r_total and score:  1849.014283864686 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 11 11  9 12 12 12 12 12]] [['4', '8', '0', '0', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 11 10  9 12 12 12 12 12]] [['0', '8', '0', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1234  r_total and score:  2099.3262241539855 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  6 11 11  9 12 12 12 12 12]] [['4', '6', '0', '0', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  4 11 10  9 12 12 12 12 12]] [['0', '9', '0', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1235  r_total and score:  1694.4993746357004 0.9412233942665726
Current Bleu score is:  0.9412233942665726

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 10 12  9 12 12 12 12 12]] [['4', '8', '8', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 11 10 10 12 12 12 12 12]] [['7', '8', '0', '8', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1236  r_total and score:  1870.631070933679 1.2344668239486805
Current Bleu score is:  1.2344668239486805

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 12 12 12  9 12 12 12 12 12]] [['4', '7', '7', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1237  r_total and score:  1810.2681797816188 0.9344127822250061
Current Bleu score is:  0.9344127822250061

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 10 12  6 12 12 12 12 12]] [['1', '8', '8', '7', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 10  9 12 12 12 12 12]] [['7', '8', '7', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1238  r_total and score:  2380.2297627416506 1.2336585215373435
Current Bleu score is:  1.2336585215373435

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 10 13 11 12 12 12 12 12]] [['1', '8', '8', '1', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13 10  8 12 12 12 12 12]] [['1', '8', '1', '8', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -1.91961772e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1239  r_total and score:  2213.5448631861555 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 10 11 11 12 12 12 12 12]] [['1', '8', '8', '0', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10  6 10  8 12 12 12 12 12]] [['1', '8', '6', '8', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -1.91961772e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1240  r_total and score:  2092.822295427966 1.1607739133018071
Current Bleu score is:  1.1607739133018071

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  7  7  7 12 12 12 12 12]] [['4', '8', '4', '4', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  6  9  9 12 12 12 12 12]] [['4', '8', '6', '2', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1241  r_total and score:  1875.763021413715 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 10  7 11 12 12 12 12 12]] [['1', '8', '8', '4', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10 10 10  8 12 13 13 13 13]] [['4', '8', '8', '8', '3', '7', '1', '1', '1', '1']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.08918036 -0.00608019 -0.01415137
 -0.03485219 -0.0235031  -0.01697575  0.10724315]
1242  r_total and score:  1763.4287207001826 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4  7  9 12 12 12 12 12]] [['1', '8', '9', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 10 10  9 12 13 13 13 13]] [['1', '6', '8', '8', '2', '7', '1', '1', '1', '1']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1243  r_total and score:  2301.303717433633 1.8970440814673855
Current Bleu score is:  1.8970440814673855

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  6  6 11  9 11 12 12 12 12]] [['0', '6', '6', '0', '2', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  6  6 10  8 11  6 11 11 11]] [['6', '6', '6', '8', '3', '0', '6', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1244  r_total and score:  1233.849532540418 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  9 11  9 11 11 11 11 11]] [['0', '8', '2', '0', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  6  6  9  9 11 10 10  6 11]] [['0', '6', '6', '2', '2', '0', '8', '8', '6', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
  0.08149774  0.         -0.01427485  0.09018038]
1245  r_total and score:  2865.75228349465 2.4813933032738156
Current Bleu score is:  2.4813933032738156

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 11 12 12 12 12 12 12 12 12]] [['0', '0', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  6  9 11  9 11 11 11 11 11]] [['0', '6', '2', '0', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  6  6 10  6  6 11 11 11 11]] [['0', '6', '6', '8', '6', '6', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1246  r_total and score:  2431.4691386200634 1.9383537553428818
Current Bleu score is:  1.9383537553428818

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11  9 11  6 11 12 12 12 12]] [['0', '0', '2', '0', '6', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 11 10  9 10 10 11 11 11]] [['0', '8', '0', '8', '2', '8', '8', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1247  r_total and score:  2608.4594715305116 2.718304854273057
Current Bleu score is:  2.718304854273057

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11  9 11  9 12 12 12 12 12]] [['0', '0', '2', '0', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  6 11  9  6  6 12 12 12 12]] [['0', '6', '0', '2', '6', '6', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1248  r_total and score:  1742.200187667587 1.3880867720714614
Current Bleu score is:  1.3880867720714614

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11 12 11  6 12 12 12 12 12]] [['0', '0', '7', '0', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 12 11  9  6 11 12 12 12 12]] [['0', '7', '0', '2', '6', '0', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1249  r_total and score:  1485.0977717013902 0.9003574197938158
Current Bleu score is:  0.9003574197938158

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 11  9  5  6 12 12 12 12 12]] [['5', '0', '2', '5', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344 -0.18699762 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  6  5  8  9 11 12 12 12 12]] [['7', '6', '5', '3', '2', '0', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1250  r_total and score:  2035.542602774627 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  6  9  7  9 12 12 12 12 12]] [['4', '6', '2', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  6 11  8  6 12 12 12 12 12]] [['0', '6', '0', '3', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1251  r_total and score:  1744.1591275249555 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  6  9  7  9  7 12 12 12 12]] [['4', '6', '2', '4', '2', '4', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  9  7  9  6 12  7  7  7  7]] [['4', '2', '4', '2', '6', '7', '4', '4', '4', '4']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1252  r_total and score:  1858.7237180438192 1.0438988149649218
Current Bleu score is:  1.0438988149649218

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  6  9  7  9  5 12 12 12 12]] [['4', '6', '2', '4', '2', '5', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267  0.6934356
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  9  7  8 11 12  5  5  5  5]] [['4', '2', '4', '3', '0', '7', '5', '5', '5', '5']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703  0.82807057 -0.10026469 -0.06691772
 -0.09028485 -0.07452097 -0.09546167  0.60307254]
1253  r_total and score:  1907.3149677456493 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  7  9  5  6  2 12 12 12 12]] [['5', '4', '2', '5', '6', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344 -0.18699762 -0.54882446
 -0.08027338 -0.06079792 -0.0476879   0.39863571]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  9 10  8 10  5  5  5  5  5]] [['5', '2', '8', '3', '8', '5', '5', '5', '5', '5']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761  0.90346337  0.18472533
 -0.24644218 -0.16619201 -0.12003669  0.75832357]
1254  r_total and score:  3031.895146499909 1.8500219627700072
Current Bleu score is:  1.8500219627700072

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 12 12  5  9 12 12 12 12 12]] [['5', '7', '7', '5', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  9 10  8 10 12 12 12 12 12]] [['5', '2', '8', '3', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761  0.90346337 -0.07957902
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
1255  r_total and score:  2451.5337771067484 1.174407213509221
Current Bleu score is:  1.174407213509221

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  9 12  7 12 12 12 12 12]] [['7', '8', '2', '7', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 10  8 10 12 12 12 12 12]] [['7', '2', '8', '3', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.92882209e-01 -1.91961772e-02
  8.46243738e-01 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
1256  r_total and score:  3225.907253621931 1.7866354013392411
Current Bleu score is:  1.7866354013392411

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9 13  9 12 12 12 12 12]] [['1', '8', '2', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 13  9 11 12 12 12 12 12]] [['7', '2', '1', '2', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1257  r_total and score:  2978.083490514458 1.6052043930008721
Current Bleu score is:  1.6052043930008721

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  7  9 12 12 12 12 12]] [['4', '8', '2', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  9 10 10  6 10 12 12 12 12]] [['8', '2', '8', '8', '6', '8', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1258  r_total and score:  3078.6643858543234 1.7934328591008393
Current Bleu score is:  1.7934328591008393

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10 11 12  9 12 12 12 12 12]] [['7', '8', '0', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  9 10 10 12 12 12 12 12 12]] [['8', '2', '8', '8', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1259  r_total and score:  2572.419779953483 1.2924673483913476
Current Bleu score is:  1.2924673483913476

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  7  9 12 12 12 12 12]] [['4', '8', '2', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  9 10 10  6 10 12 12 12 12]] [['4', '2', '8', '8', '6', '8', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
1260  r_total and score:  2877.499226149309 1.5173516475816768
Current Bleu score is:  1.5173516475816768

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  7  7  2 12 12 12 12]] [['4', '8', '2', '4', '4', '<s>', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -5.48824457e-01 -8.02733758e-02 -6.07979199e-02
 -4.76879010e-02  3.98635713e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9  7  9 11  6 12 12 12 12]] [['7', '2', '4', '2', '0', '6', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.19288221 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1261  r_total and score:  3464.2279014120245 2.3406084750821115
Current Bleu score is:  2.3406084750821115

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  7  9  2 12 12 12 12]] [['4', '8', '2', '4', '2', '<s>', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -5.48824457e-01 -8.02733758e-02 -6.07979199e-02
 -4.76879010e-02  3.98635713e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  9  7 10  8 12 12 12 12 12]] [['4', '2', '4', '8', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -1.00167035e-01 -1.91961772e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1262  r_total and score:  2401.5695505335743 1.568132471002769
Current Bleu score is:  1.568132471002769

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  7  7  2 12 12 12 12]] [['4', '8', '2', '4', '4', '<s>', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -5.48824457e-01 -8.02733758e-02 -6.07979199e-02
 -4.76879010e-02  3.98635713e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 12  9 11 10 12 12 12 12]] [['7', '2', '7', '2', '0', '8', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619  0.10436252
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1263  r_total and score:  2376.2724134085192 1.6273108592106698
Current Bleu score is:  1.6273108592106698
EPOCH %d 39
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9  7  9 12 12 12 12 12]] [['4', '8', '2', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 12  9 11 10 12 12 12 12]] [['7', '2', '7', '2', '0', '8', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619  0.10436252
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1264  r_total and score:  2741.1955037047146 1.758501981577856
Current Bleu score is:  1.758501981577856

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10 11 12  6 12 12 12 12 12]] [['7', '8', '0', '7', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 12  9 11 10 12 12 12 12]] [['7', '2', '7', '2', '0', '8', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619  0.10436252
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1265  r_total and score:  3051.073684123834 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  7  9  5  9 12 12 12 12 12]] [['4', '4', '2', '5', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01  1.04067266e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  9  5 10 10  6 10 12 12 12]] [['5', '2', '5', '8', '8', '6', '8', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553  0.88538718 -0.03419142 -0.07957902
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
1266  r_total and score:  2221.391862159699 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11 11 11  9 12 12 12 12 12]] [['0', '0', '0', '0', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11 11 10  8 10 12 12 12 12]] [['0', '0', '0', '8', '3', '8', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  1.13267726e-02  7.90016974e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
1267  r_total and score:  2452.5772341072407 1.1762098392490092
Current Bleu score is:  1.1762098392490092

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 11  9  5  9 12 12 12 12 12]] [['4', '0', '2', '5', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01  1.04067266e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 12  9 11  6 12 12 12 12]] [['7', '2', '7', '2', '0', '6', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1268  r_total and score:  1775.9712359474845 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11 11 11  9 12 12 12 12 12]] [['0', '0', '0', '0', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  9 12  9 11  6 12 12 12 12]] [['0', '2', '7', '2', '0', '6', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1269  r_total and score:  1645.01125050223 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 11 11 12  9 12 12 12 12 12]] [['7', '0', '0', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  9 12  9 11 12 12 12 12 12]] [['8', '2', '7', '2', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1270  r_total and score:  865.5663444530089 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 11 11  5  9  5 12 12 12 12]] [['5', '0', '0', '5', '2', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446  0.66128847
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  9 10  8 11  5  5  5  5  5]] [['8', '2', '8', '3', '0', '5', '5', '5', '5', '5']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.00049958
 -0.02637719 -0.0248515  -0.01794967  0.11339582]
1271  r_total and score:  1903.8261475275283 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 11 11 12  9 12 12 12 12 12]] [['7', '0', '0', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 12 11  2 12 12 12 12 12]] [['7', '2', '7', '0', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00882806 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]
1272  r_total and score:  2325.394352306841 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 11 11 12  9 12 12 12 12 12]] [['7', '0', '0', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 12  9  2 12 12 12 12 12]] [['7', '2', '7', '2', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00882806 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]
1273  r_total and score:  2307.0116770585832 1.0654446325781382
Current Bleu score is:  1.0654446325781382

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  9 11 12  9 12 12 12 12 12]] [['1', '2', '0', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 12  9  2 12 12 12 12 12]] [['7', '2', '7', '2', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00882806 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]
1274  r_total and score:  2454.1562130700077 1.16330284749117
Current Bleu score is:  1.16330284749117

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 11 11  5  7 12 12 12 12 12]] [['5', '0', '0', '5', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  9  5  8  6 12 12 12 12 12]] [['5', '2', '5', '3', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
1275  r_total and score:  1854.2178358234737 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 11 11 12  7 12 12 12 12 12]] [['7', '0', '0', '7', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  9 12  9  7 12 12 12 12 12]] [['7', '2', '7', '2', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1276  r_total and score:  1800.1039729685085 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  9  6  6  9 12 12 12 12 12]] [['6', '2', '6', '6', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  9  6  8  9 12 12 12 12 12]] [['6', '2', '6', '3', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1277  r_total and score:  945.7453704711133 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  9 10 12  9 12 12 12 12 12]] [['6', '2', '8', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  9 12  9  9 12 12 12 12 12]] [['6', '2', '7', '2', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1278  r_total and score:  1206.6409672200637 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  9 10 10  9 12 12 12 12 12]] [['8', '2', '8', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.18699762
  -0.27287935  -0.16480582  -0.1111393   -0.08027338   0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  9 10  9 13 12 12 12 12 12]] [['8', '2', '8', '2', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1279  r_total and score:  1400.216558153776 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  9 11 11  9 11 12 12 12 12]] [['0', '2', '0', '0', '2', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  9 11  9 13 12 12 12 12 12]] [['0', '2', '0', '2', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1280  r_total and score:  1497.1126788976985 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  7  7 11  9 12 12 12 12 12]] [['4', '4', '4', '0', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  9 11 11  9 12 12 12 12 12]] [['0', '2', '0', '0', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1281  r_total and score:  1276.283717427862 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 10  9 12 12 12 12 12]] [['8', '8', '8', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.93835228 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  9 10 12 12 12 12 12]] [['8', '8', '8', '2', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1282  r_total and score:  1328.115156998997 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6 12 12 12 12 12 12 12 12 12]] [['6', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6  6  6  6  6 12 12 12 12]] [['6', '6', '6', '6', '6', '6', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  9  6  9  6 12 12 12 12 12]] [['6', '2', '6', '2', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1283  r_total and score:  731.8938178903097 0.7121043131712586
Current Bleu score is:  0.7121043131712586

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 13 13 10  9 10 12 12 12 12]] [['1', '1', '1', '8', '2', '8', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  1.24767480e-02  1.69612658e-01
  9.38352275e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13  9  8 12 12 12 12 12]] [['1', '8', '1', '2', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1284  r_total and score:  1917.7042297110625 0.990949295404142
Current Bleu score is:  0.990949295404142

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 13 10  9 12 12 12 12 12]] [['8', '8', '1', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.93835228 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10 10 12 12 12 12 12 12]] [['8', '8', '8', '8', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1285  r_total and score:  1572.0792075759489 0.847756903733251
Current Bleu score is:  0.847756903733251

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 13 12  9 12 12 12 12 12]] [['8', '8', '1', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 12  9  8 12 12 12 12 12]] [['8', '8', '7', '2', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1286  r_total and score:  2256.86961591105 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 12 13 12  6 12 12 12 12 12]] [['7', '7', '1', '7', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  7 12  9  8 12 12 12 12 12]] [['7', '4', '7', '2', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1287  r_total and score:  1884.8313691366075 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6 12 12 12 12 12 12 12 12 12]] [['6', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6  6  6  9 12 12 12 12 12]] [['6', '6', '6', '6', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  9  6  8  6 12 12 12 12 12]] [['6', '2', '6', '3', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1288  r_total and score:  1414.631034454381 0.706316274885282
Current Bleu score is:  0.706316274885282

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  7  7  7  9 12 12 12 12 12]] [['6', '4', '4', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  7  8  6 12 12 12 12 12]] [['4', '4', '4', '3', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703  0.82807057 -0.10026469 -0.06691772
 -0.16480582 -0.1111393  -0.08027338  0.50712153]
1289  r_total and score:  1484.4437763369315 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 10 10  9 12 12 12 12 12]] [['9', '8', '8', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849   0.17213179
  -0.35912941  -0.21689665  -0.14626754  -0.1056457    0.66740947]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  8  6 12 12 12 12 12]] [['8', '8', '8', '3', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
1290  r_total and score:  1399.674036835742 0.8445637889843979
Current Bleu score is:  0.8445637889843979

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  7  7  7  9 12 12 12 12 12]] [['4', '4', '4', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  7  8  9 12 12 12 12 12]] [['4', '4', '4', '3', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703  0.82807057 -0.10026469 -0.06691772
 -0.16480582 -0.1111393  -0.08027338  0.50712153]
1291  r_total and score:  1723.0241129678823 1.0500631324359397
Current Bleu score is:  1.0500631324359397

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[5 5 5 5 9 5 5 5 5 5]] [['5', '5', '5', '5', '2', '5', '5', '5', '5', '5']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446  0.66128847
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5  8  9 12  5  5  5  5]] [['5', '5', '5', '3', '2', '7', '5', '5', '5', '5']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
1292  r_total and score:  2055.621294919649 1.1817564572880146
Current Bleu score is:  1.1817564572880146

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 7 7 7 9 7 2 2 2 2]] [['4', '4', '4', '4', '2', '4', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.05326709 -0.02196869 -0.01206484  0.04179882]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  7  9 11  2  2  2  2  2]] [['4', '4', '4', '2', '0', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.05126995
 -0.02822608 -0.01444113 -0.00879382  0.036375  ]
1293  r_total and score:  1628.8864459530332 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2  2 12 12 12 12 12 12 12 12]] [['<s>', '<s>', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606 -0.00455857 -0.00438243 -0.00295536 -0.00213459 -0.00161671
 -0.00126809 -0.00102185 -0.0008413   0.00873717]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[2 2 2 2 2 8 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '3', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01412722  0.00883027 -0.00947238 -0.00390665 -0.00214547 -0.00051581
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2 10  2  9  2 10  2  2  2  2]] [['<s>', '8', '<s>', '2', '<s>', '8', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.14397645 -0.04964382 -0.0166192  -0.02822608  0.00444511
 -0.0143476  -0.00908424 -0.00627228  0.03435094]
1294  r_total and score:  953.2326946276688 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 7 7 7 7 7 7 7 7 7]] [['4', '4', '4', '4', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  7 10  7  7  7  7  7  7]] [['4', '4', '4', '8', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1295  r_total and score:  1265.8977533633376 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 7 7 7 9 7 7 7 7 7]] [['4', '4', '4', '4', '2', '4', '4', '4', '4', '4']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  7 10  7  2  7  7  7  7]] [['4', '4', '4', '8', '4', '<s>', '4', '4', '4', '4']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.01919618 -0.01782986 -0.06097059
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
1296  r_total and score:  1356.2963892931725 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[2 7 7 2 9 2 2 2 2 2]] [['<s>', '4', '4', '<s>', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01412722  0.02105908 -0.00497254 -0.01459405  0.06021266 -0.02196869
 -0.01206484 -0.0076389  -0.00527434  0.02888558]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[2 9 2 9 8 2 2 2 2 2]] [['<s>', '2', '<s>', '2', '3', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.01728052 -0.00882806 -0.00295536  0.06021266 -0.02196869
 -0.01206484 -0.0076389  -0.00527434  0.02888558]
1297  r_total and score:  971.2298449087906 0.0
Current Bleu score is:  0.0
EPOCH %d 40
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.02751606 -0.00455857 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[2 2 2 2 2 2 2 2 2 2]] [['<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01412722  0.00883027 -0.00947238 -0.00390665 -0.00214547 -0.00135841
 -0.00093792 -0.00068672 -0.0005246   0.00392535]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[2 9 2 9 2 2 2 2 2 2]] [['<s>', '2', '<s>', '2', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.01728052 -0.00882806 -0.00295536 -0.00501939 -0.00256804
 -0.00156379 -0.00105318 -0.00075785  0.00465747]
1298  r_total and score:  653.5550230296443 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  2  2  2  2  2  2  2  2  2]] [['8', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.05       -0.0048199  -0.02660504 -0.00670665 -0.00313124 -0.00181998
 -0.00119119 -0.00084067 -0.00062518  0.00426015]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 10  9  2  2  2  2  2]] [['8', '8', '8', '8', '2', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.93835228 -0.54882446
 -0.1887592  -0.09657366 -0.0588078   0.24325426]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10 10  7  2  2  2  2  2]] [['8', '8', '8', '8', '4', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -6.74750504e-02 -3.71476149e-02 -1.90055966e-02
 -1.15733134e-02  4.78721865e-02]
1299  r_total and score:  1209.2301135345633 0.5248681572639646
Current Bleu score is:  0.5248681572639646

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2 12 12 12 12 12 12 12 12 12]] [['<s>', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 2 10  2  2  2  2  2  2  2  2]] [['<s>', '8', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01412722  0.18373987 -0.09341186 -0.03771428 -0.01760824 -0.01023452
 -0.00669853 -0.00472745 -0.00351564  0.02395657]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 2  9  2  9  8 12  2  2  2  2]] [['<s>', '2', '<s>', '2', '3', '7', '<s>', '<s>', '<s>', '<s>']] 

Reward:  [ 0.01012259  0.01728052 -0.00882806 -0.00295536  0.06021266 -0.00909141
 -0.01760824 -0.01023452 -0.00669853  0.03219966]
1300  r_total and score:  903.0828389688467 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10  5  6  2 12 12 12 12]] [['8', '8', '8', '5', '6', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.04723938 -0.0332534  -0.09759632
 -0.01427485 -0.01081157 -0.00848024  0.07088857]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5 10  8 12 12 12 12 12]] [['5', '8', '5', '8', '3', '7', '7', '7', '7', '7']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -28.5925009   -0.37293925
  -0.56270868  -1.3858462   -0.93456636  -0.67501594   4.2643668 ]
1301  r_total and score:  1876.1944224721562 0.9688429665529225
Current Bleu score is:  0.9688429665529225

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[7 7 7 7 6 2 5 5 5 5]] [['4', '4', '4', '4', '6', '<s>', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.01459405
  0.06021266 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  7 11  9 12  5  5  5  5]] [['4', '4', '4', '0', '2', '7', '5', '5', '5', '5']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.00488055 -0.00862019 -0.01579772  0.09980099]
1302  r_total and score:  1005.284360877149 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  7  7  7  6  2 12 12 12 12]] [['4', '4', '4', '4', '6', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.01459405
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  7  9  6 12 12 12 12 12]] [['4', '4', '4', '2', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1303  r_total and score:  1090.0695814182661 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  7  7  7  6  2  7  7 12 12]] [['4', '4', '4', '4', '6', '<s>', '4', '4', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.01459405
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  7 11 12 12 12 12 12 12]] [['4', '4', '4', '0', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1304  r_total and score:  1219.6662728842628 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  7  7  7  6  2 12 12 12 12]] [['4', '4', '4', '4', '6', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.01459405
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  7  7 11 12 12 12 12 12]] [['4', '4', '4', '4', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1305  r_total and score:  1474.6064759166504 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  7  7  7  6  2 12 12 12 12]] [['4', '4', '4', '4', '6', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.01459405
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  7  7  8 12 12 12 12 12]] [['4', '4', '4', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281  0.77615869 -0.06691772
 -0.16480582 -0.1111393  -0.08027338  0.50712153]
1306  r_total and score:  1598.096482749527 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  7  7  7  9  7 12 12 12 12]] [['4', '4', '4', '4', '2', '4', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  7  2 11 12 12 12 12 12]] [['4', '4', '4', '<s>', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.07335241 -0.02464422 -0.0166192
 -0.01200367 -0.00909141 -0.007131    0.05960994]
1307  r_total and score:  1286.4645011043267 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 7 12 12 12 12 12 12 12 12 12]] [['4', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  7  7  7  9  5 12 12 12 12]] [['6', '4', '4', '4', '2', '5', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813  0.6934356
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  7  5 10 12 12 12 12 12]] [['4', '4', '4', '5', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.01919618  0.84624374 -0.07405663
 -0.18238762 -0.12299585 -0.08883709  0.56122223]
1308  r_total and score:  1235.398210323406 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 12 12 12  9 12 12 12 12 12]] [['6', '7', '7', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12 11  6 12 12 12 12 12]] [['7', '7', '7', '0', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1309  r_total and score:  1933.4134305584766 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 12 12 12  9 12 12 12 12 12]] [['6', '7', '7', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12  7  6 12 12 12 12 12]] [['7', '7', '7', '4', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1310  r_total and score:  2069.544959272021 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 12 12 12  9 12 12 12 12 12]] [['6', '7', '7', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 12  6 12 12 12 12 12]] [['7', '8', '7', '7', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1311  r_total and score:  1753.399534213456 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 12 12 12  6 12 12 12 12 12]] [['6', '7', '7', '7', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 12  6 12 12 12 12 12]] [['7', '8', '7', '7', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1312  r_total and score:  1819.8786987944056 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  7  7 12  6 12 12 12 12 12]] [['4', '4', '4', '7', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 11 12 12 12 12 12 12 12 12]] [['7', '0', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1313  r_total and score:  1471.1412617689646 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  7  7 12  6 12 12 12 12 12]] [['0', '4', '4', '7', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7  7  7  2  8 12 12 12 12 12]] [['4', '4', '4', '<s>', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.07335241 -0.00488055 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
1314  r_total and score:  1481.6722891080685 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 12 12 12  6 12 12 12 12 12]] [['0', '7', '7', '7', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 12  9 12 12 12 12 12]] [['7', '8', '7', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1315  r_total and score:  1703.8145595402905 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  7  7  7  6  2 12 12 12 12]] [['4', '4', '4', '4', '6', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.01459405
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 7 10  7  7  8 12 12 12 12 12]] [['4', '8', '4', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768  0.84624374 -0.07405663
 -0.18238762 -0.12299585 -0.08883709  0.56122223]
1316  r_total and score:  1610.4542819192588 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  7  7 12  9 12 12 12 12 12]] [['4', '4', '4', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 12  6 12 12 12 12 12]] [['7', '8', '7', '7', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1317  r_total and score:  2068.261456262066 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 13 10 10  9 12 12 12 12 12]] [['4', '1', '8', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01 -8.46772381e-02
  9.38352275e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 13 10  2  8 12 12 12 12 12]] [['8', '1', '8', '<s>', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.10154738 -0.01605517 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]
1318  r_total and score:  2204.8636936050307 0.928985001161841
Current Bleu score is:  0.928985001161841

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 12 12 12  6 12 12 12 12 12]] [['7', '7', '7', '7', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 12 10 12 12 12 12 12]] [['7', '8', '7', '7', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1319  r_total and score:  2141.727401686208 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 10  6 12 12 12 12 12]] [['8', '8', '8', '8', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10 13  8 12 12 12 12 12]] [['8', '8', '8', '1', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1320  r_total and score:  2049.966463146867 1.0457254165514083
Current Bleu score is:  1.0457254165514083

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 13 13 13  6 12 12 12 12 12]] [['1', '1', '1', '1', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 13 13 13  6 12 12 12 12 12]] [['1', '1', '1', '1', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1321  r_total and score:  2216.0819181991305 0.9340477771623166
Current Bleu score is:  0.9340477771623166

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 10 12  4 12 12 12 12 12]] [['1', '8', '8', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 10  2 11 12 12 12 12 12]] [['7', '8', '8', '<s>', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.10154738 -0.02930708 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
1322  r_total and score:  2127.6556541293585 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 13 13 12  9 12 12 12 12 12]] [['1', '1', '1', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 13 12 12 11 12 12 12 12 12]] [['7', '1', '7', '7', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1323  r_total and score:  1457.571581952464 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 10  7 10 12 12 12 12]] [['8', '8', '8', '8', '4', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10 10 11 12 12 12 12 12]] [['8', '8', '8', '8', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1324  r_total and score:  778.4889295545336 0.7584183400192306
Current Bleu score is:  0.7584183400192306

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 10  7  5 12 12 12 12]] [['8', '8', '8', '8', '4', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.01637845
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10 10  8 12 12 12 12 12]] [['8', '8', '8', '8', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1325  r_total and score:  1067.0647501626165 0.9847748559325459
Current Bleu score is:  0.9847748559325459

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 9 10 10 10  7 12 12 12 12 12]] [['2', '8', '8', '8', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10 10  8 12 12 12 12 12]] [['8', '8', '8', '8', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1326  r_total and score:  756.3092023399721 0.7417900426045808
Current Bleu score is:  0.7417900426045808

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 10  4 12 12 12 12 12]] [['8', '8', '8', '8', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  7  8 12 12 12 12 12]] [['8', '8', '8', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.05226761  0.90346337 -0.07957902
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
1327  r_total and score:  1864.3397688979414 0.8129653551228028
Current Bleu score is:  0.8129653551228028

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 12 12 12  4 12 12 12 12 12]] [['7', '7', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1328  r_total and score:  1431.0193337949722 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 12 10 12  4 12 12 12 12 12]] [['7', '7', '8', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 12 10 12 12 12 12 12]] [['7', '8', '7', '7', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1329  r_total and score:  2160.5653603632504 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 13 13 12  7 12 12 12 12 12]] [['1', '1', '1', '7', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 13 12 11 10 12 12 12 12 12]] [['7', '1', '7', '0', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1330  r_total and score:  1374.3601959753323 0.0
Current Bleu score is:  0.0
EPOCH %d 41
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 12  4 12 12 12 12 12]] [['8', '8', '8', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 11  9 12 12 12 12 12]] [['7', '8', '7', '0', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1331  r_total and score:  836.2627310025368 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11 11 11  4 12 12 12 12 12]] [['0', '0', '0', '0', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11 11  8 11 12 12 12 12 12]] [['0', '0', '0', '3', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1332  r_total and score:  1279.975810139878 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 12 12 12  4 12 12 12 12 12]] [['8', '7', '7', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 13 12 11  9 12 12 12 12 12]] [['7', '1', '7', '0', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1333  r_total and score:  1406.2500495532959 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 10  4 12 12 12 12 12]] [['8', '8', '8', '8', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  8  9 12 12 12 12 12]] [['8', '8', '8', '3', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
1334  r_total and score:  1401.3381401100564 0.8539125638299666
Current Bleu score is:  0.8539125638299666

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 12 12 12  9 12 12 12 12 12]] [['7', '7', '7', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12  7  9 12 12 12 12 12]] [['7', '7', '7', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1335  r_total and score:  1642.5588577918068 0.8660826749155115
Current Bleu score is:  0.8660826749155115

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 10 12 12 12 12 12 12]] [['8', '8', '8', '8', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  2  8 12 12 12 12 12]] [['8', '8', '8', '<s>', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.10154738 -0.01605517 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]
1336  r_total and score:  1541.2813720027887 0.8633400213704504
Current Bleu score is:  0.8633400213704504

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 12 12 12  6 12 12 12 12 12]] [['8', '7', '7', '7', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12  7  9 12 12 12 12 12]] [['7', '7', '7', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1337  r_total and score:  1839.6083004418442 0.9644150703090797
Current Bleu score is:  0.9644150703090797

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 10  6 12 12 12 12 12]] [['8', '8', '8', '8', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  2  8 12 12 12 12 12]] [['8', '8', '8', '<s>', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.10154738 -0.01605517 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]
1338  r_total and score:  1278.390874593896 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 12 10 12  6 12 12 12 12 12]] [['8', '7', '8', '7', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  7 11 12 12 12 12 12]] [['7', '8', '7', '4', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1339  r_total and score:  1424.5107296400643 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 10 10 10 12 12 12 12]] [['8', '8', '8', '8', '8', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  8  9 12 12 12 12 12]] [['8', '8', '8', '3', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
1340  r_total and score:  993.9981713100912 0.884258762122833
Current Bleu score is:  0.884258762122833

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 10  6 12 12 12 12 12]] [['8', '8', '8', '8', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  8  9 12 12 12 12 12]] [['8', '8', '8', '3', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
1341  r_total and score:  1899.682269882255 0.9390295419707574
Current Bleu score is:  0.9390295419707574

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 13 13 10  9 12 12 12 12 12]] [['1', '1', '1', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  1.24767480e-02  1.69612658e-01
  9.38352275e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 13 10  8 10 12 12 12 12 12]] [['8', '1', '8', '3', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761  0.82669367 -0.07405663
 -0.18238762 -0.12299585 -0.08883709  0.56122223]
1342  r_total and score:  1688.2601501795277 1.085902640528672
Current Bleu score is:  1.085902640528672

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  8  8  8  6 11 12 12 12 12]] [['3', '3', '3', '3', '6', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8  8  8  7 10 12 12 12 12 12]] [['3', '3', '3', '4', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -1.00167035e-01 -1.91961772e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1343  r_total and score:  1702.5072722669063 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 10  9 12 12 12 12 12]] [['8', '8', '8', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.93835228 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  2  8 12 12 12 12 12]] [['8', '8', '8', '<s>', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.10154738 -0.01605517 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]
1344  r_total and score:  1642.9356506263146 1.018367912587491
Current Bleu score is:  1.018367912587491

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 10  6 10 12 12 12 12]] [['8', '8', '8', '8', '6', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  2  8 12 12 12 12 12]] [['8', '8', '8', '<s>', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.10154738 -0.01605517 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]
1345  r_total and score:  1233.7748932107459 0.8779711460710614
Current Bleu score is:  0.8779711460710614

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 10  6 12 12 12 12 12]] [['8', '8', '8', '8', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  2  8 12 12 12 12 12]] [['8', '8', '8', '<s>', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.10154738 -0.01605517 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]
1346  r_total and score:  960.5462597316694 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 10  6 10 12 12 12 12]] [['8', '8', '8', '8', '6', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  2  8 12 12 12 12 12]] [['8', '8', '8', '<s>', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.10154738 -0.01605517 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]
1347  r_total and score:  1294.8568005751938 0.8153093449090404
Current Bleu score is:  0.8153093449090404

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 10  9 10 12 12 12 12]] [['8', '8', '8', '8', '2', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.93835228 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  2  8 12 12 12 12 12]] [['8', '8', '8', '<s>', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.10154738 -0.01605517 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]
1348  r_total and score:  1677.9146653621176 0.928985001161841
Current Bleu score is:  0.928985001161841

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 10  6 10 12 12 12 12]] [['8', '8', '8', '8', '6', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  2  8 12 12 12 12 12]] [['8', '8', '8', '<s>', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.10154738 -0.01605517 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]
1349  r_total and score:  1219.784634537159 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 10  9 12 12 12 12 12]] [['8', '8', '8', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.93835228 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  2  8 12 12 12 12 12]] [['8', '8', '8', '<s>', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.10154738 -0.01605517 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]
1350  r_total and score:  2143.8877583471913 1.1199810196147604
Current Bleu score is:  1.1199810196147604

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  4  4  4  9 12 12 12 12 12]] [['9', '9', '9', '9', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10  4  7  6 12 12 12 12 12]] [['7', '8', '9', '4', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1351  r_total and score:  1317.0502356390912 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 13 13 12  9 12 12 12 12 12]] [['1', '1', '1', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 13  8 12 12 12 12 12 12]] [['7', '8', '1', '3', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1352  r_total and score:  2224.759074048513 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 10  9 12 12 12 12 12]] [['8', '8', '8', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.93835228 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  2  8 12 12 12 12 12]] [['8', '8', '8', '<s>', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.10154738 -0.01605517 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]
1353  r_total and score:  2070.664334355366 1.0035524538078164
Current Bleu score is:  1.0035524538078164

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 12 12 12  9 12 12 12 12 12]] [['7', '7', '7', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12  7  9 12 12 12 12 12]] [['7', '7', '7', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1354  r_total and score:  1480.3162223557554 0.7932536879228066
Current Bleu score is:  0.7932536879228066

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 12 12 12 12 12 12 12 12 12]] [['1', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 13 13 13  9 12 12 12 12 12]] [['1', '1', '1', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 13 13  2  4 12 12 12 12 12]] [['1', '1', '1', '<s>', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.0027123  -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]
1355  r_total and score:  2004.3781184641105 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 13 13 10  9 12 12 12 12 12]] [['1', '1', '1', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  1.24767480e-02  1.69612658e-01
  9.38352275e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 13 10  2  8 12 12 12 12 12]] [['8', '1', '8', '<s>', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.10154738 -0.01605517 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]
1356  r_total and score:  1966.363853439968 1.0803988860568468
Current Bleu score is:  1.0803988860568468

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 10 10  2 12 12 12 12]] [['8', '8', '8', '8', '8', '<s>', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.0820684
 -0.01200367 -0.00909141 -0.007131    0.05960994]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  2  7 12 12 12 12 12]] [['8', '8', '8', '<s>', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.10154738 -0.01605517 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]
1357  r_total and score:  1859.2622815876343 1.2476936246072485
Current Bleu score is:  1.2476936246072485

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 10 10 10 12 12 12 12]] [['8', '8', '8', '8', '8', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  2  7 12 12 12 12 12]] [['8', '8', '8', '<s>', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.10154738 -0.01605517 -0.0218721
 -0.01579772 -0.01196497 -0.00938493  0.0784511 ]
1358  r_total and score:  1376.3033688383305 0.9464225600970514
Current Bleu score is:  0.9464225600970514

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 10  9 12 12 12 12 12]] [['8', '8', '8', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.93835228 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  2 12 12 12 12 12 12]] [['8', '8', '8', '<s>', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.10154738 -0.02930708 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
1359  r_total and score:  1796.7630220059546 0.9261882258225345
Current Bleu score is:  0.9261882258225345

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 12 10 12  9 12 12 12 12 12]] [['8', '7', '8', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 11  4 12 12 12 12 12]] [['7', '8', '7', '0', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1360  r_total and score:  1930.3998086449765 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 12 10 12  9 12 12 12 12 12]] [['8', '7', '8', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 11  4 12 12 12 12 12]] [['7', '8', '7', '0', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1361  r_total and score:  1715.2092959544887 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10 12 12 12 12 12 12 12 12]] [['7', '8', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  7  8 12 12 12 12 12]] [['7', '8', '7', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -1.91961772e-02
  8.46243738e-01 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
1362  r_total and score:  2164.0269602915155 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  5 12  9 12 12 12 12 12]] [['7', '8', '5', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  7  9 12 12 12 12 12]] [['7', '8', '7', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1363  r_total and score:  1980.7931541718594 1.144435878014052
Current Bleu score is:  1.144435878014052
EPOCH %d 42
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12  6 13 12 12 12 12 12 12 12]] [['7', '6', '1', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  6 12  7  9 12 12 12 12 12]] [['7', '6', '7', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1364  r_total and score:  2022.8482993459297 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 12  7 12  9 12 12 12 12 12]] [['7', '7', '4', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  7  9 12 12 12 12 12]] [['7', '8', '7', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1365  r_total and score:  1579.9136123403828 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  5 12  9 12 12 12 12 12]] [['8', '8', '5', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10 12  9 12 12 12 12 12]] [['8', '8', '8', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1366  r_total and score:  1877.2290500810777 0.9190832146926198
Current Bleu score is:  0.9190832146926198

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 12 13 12  6 12 12 12 12 12]] [['0', '7', '1', '7', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 11 12 12 12 12 12 12 12]] [['7', '8', '0', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1367  r_total and score:  2264.17722255013 1.0220291806414092
Current Bleu score is:  1.0220291806414092

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  5  5 11  6 12 12 12 12 12]] [['0', '5', '5', '0', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11 11 12 10 12 12 12 12 12]] [['0', '0', '0', '7', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1368  r_total and score:  1778.6458263413667 0.7818621135661008
Current Bleu score is:  0.7818621135661008

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 12 12 12 12 12 12 12 12 12]] [['5', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  5 13  5  6 12 12 12 12 12]] [['5', '5', '1', '5', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5 12  6 12 12 12 12 12]] [['5', '5', '5', '7', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1369  r_total and score:  2192.7530771988077 0.9434906154660285
Current Bleu score is:  0.9434906154660285

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  5  5 11  7 11 12 12 12 12]] [['0', '5', '5', '0', '4', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11 11 12  5 12 12 12 12 12]] [['0', '0', '0', '7', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1370  r_total and score:  1605.626542775265 1.1076413327553076
Current Bleu score is:  1.1076413327553076

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  5 11 11  4 11 12 12 12 12]] [['0', '5', '0', '0', '9', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  5 11 12  5 12 12 12 12 12]] [['0', '5', '0', '7', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1371  r_total and score:  2105.933062054277 1.4325381907354469
Current Bleu score is:  1.4325381907354469

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 11 11  4 11 12 12 12 12]] [['0', '8', '0', '0', '9', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 11 12  5 12 12 12 12 12]] [['0', '8', '0', '7', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1372  r_total and score:  2592.152985472649 2.228270929597406
Current Bleu score is:  2.228270929597406

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 11 11  7 11 12 12 12 12]] [['0', '8', '0', '0', '4', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  5 11 12 10 12 12 12 12 12]] [['0', '5', '0', '7', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1373  r_total and score:  2268.740143779324 1.5104070642026366
Current Bleu score is:  1.5104070642026366

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 12 12 12 12 12 12 12 12 12]] [['0', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  8 11  4 12 12 12 12 12]] [['0', '8', '3', '0', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  5 11 12 10 12 12 12 12 12]] [['0', '5', '0', '7', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1374  r_total and score:  1945.0734478052134 1.141445817515255
Current Bleu score is:  1.141445817515255

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  5 13 12  6 12 11 11 11 11]] [['3', '5', '1', '7', '6', '7', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  5 11 12  8 12 12 12 12 12]] [['0', '5', '0', '7', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1375  r_total and score:  2085.4448809608202 1.1694067208710677
Current Bleu score is:  1.1694067208710677

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 11 11 11 11 11 11 11 11 11]] [['5', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8  5 13  5  4 11 11 11 11 11]] [['3', '5', '1', '5', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -2.16389877e-01 -8.46772381e-02
  9.38352275e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  8  5  6  6 12  5 11 11 11]] [['5', '3', '5', '6', '6', '7', '5', '0', '0', '0']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.08918036 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
1376  r_total and score:  1897.3012203711398 1.2662715801296827
Current Bleu score is:  1.2662715801296827

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 11 11 11 11 11 11 11 11 11]] [['5', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5  5  9  5  4 11 11 11 11 11]] [['5', '5', '2', '5', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344  7.08574716 -2.01953311
 -1.2196995  -0.82252282 -0.59408945  3.75311927]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5 12  6 12 11 11 11 11]] [['5', '5', '5', '7', '6', '7', '0', '0', '0', '0']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1377  r_total and score:  2554.6640875232365 2.2948977165153597
Current Bleu score is:  2.2948977165153597

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5 10 10 10 10 10 10 10 10 10]] [['5', '8', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  9  5  4  5 11 10 10 10]] [['5', '8', '2', '5', '9', '5', '0', '8', '8', '8']] 

Reward:  [  0.91578194  -0.21018242   3.36939485   5.71790702  57.0811291
 -16.06075568  -9.69991313  -6.54128323  -4.7246195   29.84745896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5 12  6 12  5  5  5  5]] [['5', '5', '5', '7', '6', '7', '5', '5', '5', '5']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1378  r_total and score:  2929.2461328307886 2.3824767773551443
Current Bleu score is:  2.3824767773551443

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 7 7 7 7 7 7 7 7 7]] [['5', '4', '4', '4', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  9  5  4  5 10 10 10 10]] [['5', '8', '2', '5', '9', '5', '8', '8', '8', '8']] 

Reward:  [  0.91578194  -0.21018242   3.36939485   5.71790702  57.0811291
 -16.06075568  -9.69991313  -6.54128323  -4.7246195   29.84745896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5 12 13 12  5  5  5  5]] [['5', '5', '5', '7', '1', '7', '5', '5', '5', '5']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1379  r_total and score:  4068.7168954085446 2.7789235956017397
Current Bleu score is:  2.7789235956017397

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5  7  7 11 11 11 11 11 11 11]] [['5', '4', '4', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[5 5 9 5 4 5 5 5 5 5]] [['5', '5', '2', '5', '9', '5', '5', '5', '5', '5']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344  7.08574716 -2.01953311
 -1.2196995  -0.82252282 -0.59408945  3.75311927]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5 12 13 12  5  5  5  5]] [['5', '5', '5', '7', '1', '7', '5', '5', '5', '5']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1380  r_total and score:  2109.019421071265 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 7 7 7 7 7 7 7 7 7]] [['5', '4', '4', '4', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  9  5  4  5 10 10 10 10]] [['5', '8', '2', '5', '9', '5', '8', '8', '8', '8']] 

Reward:  [  0.91578194  -0.21018242   3.36939485   5.71790702  57.0811291
 -16.06075568  -9.69991313  -6.54128323  -4.7246195   29.84745896]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5 12  9 12 12 10 10 10]] [['5', '5', '5', '7', '2', '7', '7', '8', '8', '8']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.00862019 -0.00835556  0.10724315]
1381  r_total and score:  3591.905520696108 2.8725880713419483
Current Bleu score is:  2.8725880713419483

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  7 11 11 11 11 11 11 11 11]] [['8', '4', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  9 10  4  5 10 10 12 12]] [['8', '8', '2', '8', '9', '5', '8', '8', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774  3.06090127 -2.23661849 -0.06578356 -0.23074333
 -0.19598825 -0.13216764 -0.09546167  0.60307254]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10 12  8 12 12 12 12 12]] [['8', '8', '8', '7', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1382  r_total and score:  2336.227742556854 2.2336683303545013
Current Bleu score is:  2.2336683303545013

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  7  7 11 11 11 11 11 11 11]] [['7', '4', '4', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  9 10  4 12 12 12 12 12]] [['8', '8', '2', '8', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774  3.06090127 -2.23661849 -0.06578356 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10 12 13 12 12 12 12 12]] [['8', '8', '8', '7', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1383  r_total and score:  2252.7311823738523 1.7592677130815702
Current Bleu score is:  1.7592677130815702

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  7  7  7 11 11 11 11 11 11]] [['7', '4', '4', '4', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 13  5  4 12 12 12 12 12]] [['8', '8', '1', '5', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.04723938  1.02212848 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  5  5  5  8 12 12 11 11 11]] [['7', '5', '5', '5', '3', '7', '7', '0', '0', '0']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1384  r_total and score:  2204.889736235904 1.6582172129477095
Current Bleu score is:  1.6582172129477095

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  7 12 12 12 12 12 12 12 12]] [['7', '4', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 12 13 12  9 12 12 12 12 12]] [['6', '7', '1', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12  4 11 12 12 12 12 12]] [['7', '7', '7', '9', '0', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1385  r_total and score:  1797.5960393579865 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  7 12 12 12 12 12 12 12 12]] [['7', '4', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10 13 12  9 12 12 12 12 12]] [['9', '8', '1', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.06578356
  -0.30199064  -0.18238762  -0.12299585  -0.08883709   0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 12 12  4 12 12 12 12 12 12]] [['7', '7', '7', '9', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1386  r_total and score:  2154.078678971832 1.7204818405533464
Current Bleu score is:  1.7204818405533464

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  7 12 12 12 12 12 12 12 12]] [['7', '4', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  6  4 12  9 12 12 12 12 12]] [['0', '6', '9', '7', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 13 12  7  4 12 12 12 12 12]] [['7', '1', '7', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1387  r_total and score:  2666.7810673622257 1.5255731187419883
Current Bleu score is:  1.5255731187419883

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  9  4 12  4 12 12 12 12 12]] [['0', '2', '9', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  4 12  7  4 12 12 12 12 12]] [['7', '9', '7', '4', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1388  r_total and score:  2760.9217868535675 1.7350500409780907
Current Bleu score is:  1.7350500409780907

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 10 12 12 12 12 12 12 12 12]] [['7', '8', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  4 12  4 12 12 12 12 12]] [['0', '8', '9', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 11  8 12 12 12 12 12]] [['7', '8', '7', '0', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1389  r_total and score:  2461.3241423659288 1.409742294281229
Current Bleu score is:  1.409742294281229

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  5 12 12 12 12 12 12 12 12]] [['7', '5', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        2.18606798 -1.68574677 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  9 12 12 12 12 12 12 12]] [['0', '8', '2', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  5 12  4 12 12 12 12 12 12]] [['7', '5', '7', '9', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1390  r_total and score:  2075.1179545728264 1.9418485477115843
Current Bleu score is:  1.9418485477115843

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  7 12 12 12 12 12 12 12 12]] [['7', '4', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  9  5  4 12 12 12 12 12]] [['0', '8', '2', '5', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
  5.70811291e+01 -1.60607557e+01 -9.69991313e+00 -6.54128323e+00
 -4.72461950e+00  2.98474590e+01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5 12  2 12 12 12 12 12]] [['5', '5', '5', '7', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.05903678 -0.01976367
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
1391  r_total and score:  3486.845213252606 2.7415242568481557
Current Bleu score is:  2.7415242568481557

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  7  7  7  7  7  7  7  7  7]] [['7', '4', '4', '4', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  8  9 12  4 12 12 12 12 12]] [['0', '3', '2', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  8 12  7 12 12 12 12 12 12]] [['7', '3', '7', '4', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1392  r_total and score:  3671.4405056161504 2.6407171204516966
Current Bleu score is:  2.6407171204516966

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  7  7  7  7  7  7  7  7]] [['7', '2', '4', '4', '4', '4', '4', '4', '4', '4']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  9  5 12 12 12 12 12 12]] [['0', '8', '2', '5', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00  6.23306592e+00
 -1.38393724e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  8  5  7  2 12 12 12 12 12]] [['7', '3', '5', '4', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -4.75455349e-02  8.85387179e-01
 -3.67405362e-01 -1.22995850e-01 -8.88370936e-02 -6.72839587e-02
 -5.27753378e-02  4.41162936e-01]
1393  r_total and score:  2766.356400652283 2.444901540164209
Current Bleu score is:  2.444901540164209

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  5  5  5  5  5  5  5  5]] [['7', '2', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 0.05        0.02071068  0.47961053 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  8  9 12  4 12 12 12 12 12]] [['0', '3', '2', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  8 12  7 12 12 12 12 12 12]] [['7', '3', '7', '4', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1394  r_total and score:  3385.2438557537475 2.5051980513876693
Current Bleu score is:  2.5051980513876693

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10  9 11 12 12 11 11 12 12]] [['4', '8', '2', '0', '7', '7', '0', '0', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 11  8 12 12 12 12 12]] [['7', '8', '7', '0', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1395  r_total and score:  1849.2953694123566 1.2857218936782528
Current Bleu score is:  1.2857218936782528

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7 10 13 12 12 12 12 12 12 12]] [['4', '8', '1', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 11  8 12 12 12 12 12]] [['7', '8', '7', '0', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1396  r_total and score:  2132.324872897526 1.0179802112336098
Current Bleu score is:  1.0179802112336098

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  6 12 12 12 12 12 12 12 12]] [['7', '6', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  6 12  4 12 12 12 12 12]] [['0', '8', '6', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 11 13 12 12 12 12 12]] [['7', '8', '7', '0', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1397  r_total and score:  2895.5669614145954 2.025109116652161
Current Bleu score is:  2.025109116652161
EPOCH %d 43
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 12 12 12 12 12 12 12 12]] [['7', '0', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 13 12  4 12 12 12 12 12]] [['0', '8', '1', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 11 13 12 12 12 12 12]] [['7', '8', '7', '0', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1398  r_total and score:  3306.221717057283 2.1431823664294387
Current Bleu score is:  2.1431823664294387

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5  5 12 12 12 12 12 12 12 12]] [['5', '5', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  6 13  5  4  5 12 12 12 12]] [['0', '6', '1', '5', '9', '5', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  1.24767480e-02  1.69612658e-01
  9.38352275e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  5  5 12 12 12 12 12 12 12]] [['5', '5', '5', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1399  r_total and score:  1989.7253421885118 1.131112633338474
Current Bleu score is:  1.131112633338474

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  5  5 12 12 12 12 12 12 12]] [['7', '5', '5', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        2.18606798 -1.68574677 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10 13  5 12  5 12 12 12 12]] [['5', '8', '1', '5', '7', '5', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10  5  5 12 12 12 12 12 12]] [['7', '8', '5', '5', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  3.02281996e-01  2.24811469e+00 -1.41027304e+00
 -1.10961119e-01 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
1400  r_total and score:  2550.484696120247 1.5565333288539867
Current Bleu score is:  1.5565333288539867

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  5  5  5  5  5  5  5]] [['7', '2', '2', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 0.05        0.02071068 -0.01567856  0.19903425 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 13  9 12  4 12 12 12 12 12]] [['5', '1', '2', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 13 12  4 12 12 12 12 12 12]] [['7', '1', '7', '9', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1401  r_total and score:  2516.503365514871 1.1691972936374901
Current Bleu score is:  1.1691972936374901

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 13  9 12  4 12 12 12 12 12]] [['5', '1', '2', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 11 12  7  8 12 12 12 12 12]] [['7', '0', '7', '4', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  1.33853860e-01
  7.76158692e-01 -6.69177162e-02 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
1402  r_total and score:  2313.9083268532463 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 11  9 12 12 12 12 12 12 12]] [['5', '0', '2', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 11 12  7  9 12 12 12 12 12]] [['7', '0', '7', '4', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1403  r_total and score:  2051.0500536188965 1.2126355949961944
Current Bleu score is:  1.2126355949961944

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12  9  9  9  9  9  9  9  9]] [['7', '7', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  9 12 12 12 12 12 12 12]] [['5', '8', '2', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242  3.36939485 -2.61061406 -0.20694689 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  5  8 12 12  9  9  9]] [['7', '8', '7', '5', '3', '7', '7', '2', '2', '2']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -1.91961772e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1404  r_total and score:  2815.279248392429 1.8023659495329447
Current Bleu score is:  1.8023659495329447

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 11 12 12 12 12 12 12 12]] [['8', '7', '0', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  9 10  4 12 12 12 12 12]] [['5', '8', '2', '8', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242  3.36939485 -2.61061406 -0.11318016 -0.32451006
 -0.19598825 -0.13216764 -0.09546167  0.60307254]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10 12  8 12  9  9  9  9]] [['8', '8', '8', '7', '3', '7', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1405  r_total and score:  1462.885120693944 0.9088341196633166
Current Bleu score is:  0.9088341196633166

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  9 12 12 12 12 12 12 12]] [['5', '8', '2', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242  3.36939485 -2.61061406 -0.20694689 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  5  9 12  9  9  9  9]] [['7', '8', '7', '5', '2', '7', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1406  r_total and score:  3201.447481946898 2.174241669989133
Current Bleu score is:  2.174241669989133

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 12  4 13 12 12 12 12 12 12]] [['1', '7', '9', '1', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 12 13  6 11 12  4  4  4  4]] [['1', '7', '1', '6', '0', '7', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1407  r_total and score:  2194.482862475027 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 12 12 12 12 12 12 12 12]] [['7', '0', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 12  4 11 12 12 12 12 12 12]] [['1', '7', '9', '0', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 13 11  9 12 11  9  9  9  9]] [['0', '1', '0', '2', '7', '0', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1408  r_total and score:  1915.8250723943313 1.2252171077898746
Current Bleu score is:  1.2252171077898746

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 11 12 12 12 12 12 12 12 12]] [['0', '0', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 13  4 13  4 12 12 12 12 12]] [['1', '1', '9', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 13 13  6  8 11  9  9  9  9]] [['1', '1', '1', '6', '3', '0', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1409  r_total and score:  1907.4589419862202 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 13  9 12  4 12 12 12 12 12]] [['1', '1', '2', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 13 13  6  8 12  9  9  9  9]] [['1', '1', '1', '6', '3', '7', '2', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1410  r_total and score:  2802.2352905425496 1.6890426581978808
Current Bleu score is:  1.6890426581978808

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 13  4 12 12 12 12 12 12 12]] [['1', '1', '9', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  5 11 11  4  4  4  4]] [['7', '8', '7', '5', '0', '0', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1411  r_total and score:  1094.9992624111576 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 5  5  5 12 12 12 12 12 12 12]] [['5', '5', '5', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 5 10  4  5 12 12 12 12 12 12]] [['5', '8', '9', '5', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.21018242 -0.29810008 -0.1470917  -0.03680094 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5 10  5  6  8 12 13  4  4  4]] [['5', '8', '5', '6', '3', '7', '1', '9', '9', '9']] 

Reward:  [  0.33689735  13.19663097  23.25441579 -29.16122484  -0.22865179
  -0.53217701  -1.31065241  -0.88385829  -0.63839066   4.03298912]
1412  r_total and score:  2495.3168795871406 1.7441029122735239
Current Bleu score is:  1.7441029122735239

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11  9 11 11 11 11 11 11 11 11]] [['0', '2', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  4 11 12 11 12 12 12 12]] [['0', '8', '9', '0', '7', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 11  6 11 11  4  4  4  9]] [['0', '8', '0', '6', '0', '0', '9', '9', '9', '2']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1413  r_total and score:  1717.605075120281 1.4142135623730947
Current Bleu score is:  1.4142135623730947

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11  9  9  9  9  9  9  9  9  9]] [['0', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  4 11 12 11 11 11 11 11]] [['0', '8', '9', '0', '7', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 10 11  6 11 11 13 13 13 13]] [['0', '8', '0', '6', '0', '0', '1', '1', '1', '1']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1414  r_total and score:  2431.8895027203025 1.4583980589977186
Current Bleu score is:  1.4583980589977186

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  9  9  9  9  9  9  9  9  9]] [['8', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 10 12 12 13 13 13 13]] [['1', '8', '9', '8', '7', '7', '1', '1', '1', '1']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -1.42950658e-01  9.67233440e-01
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  6 11 11  9  9  9  9]] [['8', '8', '8', '6', '0', '0', '2', '2', '2', '2']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1415  r_total and score:  1750.7526972601208 1.291458149976675
Current Bleu score is:  1.291458149976675

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[8 9 9 9 9 9 9 9 9 9]] [['3', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 13  8 12 12 12 12 12 12]] [['1', '8', '1', '3', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8  6  8  5  9 11  9  9  9  9]] [['3', '6', '3', '5', '2', '0', '2', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1416  r_total and score:  2207.770923336361 1.283523926700894
Current Bleu score is:  1.283523926700894

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 12 12 12 12 12 12 12 12 12]] [['7', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 13 13 11 12 12 12 12 12 12]] [['1', '1', '1', '0', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13  6 11 11 12 12 12 12]] [['1', '8', '1', '6', '0', '0', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1417  r_total and score:  2896.432767982893 2.0775184428010918
Current Bleu score is:  2.0775184428010918

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  5  5  5  5  5  5  5  5  5]] [['8', '5', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 0.05        2.18606798 -1.68574677 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  4 10 12 10 12 12 12 12]] [['8', '8', '9', '8', '7', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344 -0.18699762 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  6 11 13 12 12 12 12]] [['8', '8', '8', '6', '0', '1', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1418  r_total and score:  1542.6287185381907 1.881522180361475
Current Bleu score is:  1.881522180361475

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  5  5  5  5  5  5  5  5  5]] [['8', '5', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 0.05        2.18606798 -1.68574677 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  5 10 12 12  5  5  5  5]] [['8', '8', '5', '8', '7', '7', '5', '5', '5', '5']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  6 11 13  5  5  5  5]] [['8', '8', '8', '6', '0', '1', '5', '5', '5', '5']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.01605517 -0.01325191 -0.01697575  0.10724315]
1419  r_total and score:  1387.8625700805662 1.599562111006806
Current Bleu score is:  1.599562111006806

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 13 13  4 12  5  5  5  5]] [['1', '8', '1', '1', '9', '7', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.01605517 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  9  8  5  5  5  5  5]] [['8', '8', '8', '2', '3', '5', '5', '5', '5', '5']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -4.99576080e-04 -2.63771890e-02 -2.48515021e-02
 -1.79496725e-02  1.13395822e-01]
1420  r_total and score:  2565.225885920821 1.8404756553865955
Current Bleu score is:  1.8404756553865955

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  9  5  5  5  5  5  5  5  5]] [['8', '2', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 0.05        0.02071068  0.47961053 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 13 10  6 12  5  5  5  5]] [['8', '8', '1', '8', '6', '7', '5', '5', '5', '5']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.00488055 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  9  5  5  5  5  5  5]] [['8', '8', '8', '2', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -4.99576080e-04 -3.48521867e-02 -2.35030996e-02
 -1.69757522e-02  1.07243147e-01]
1421  r_total and score:  1428.2759502562926 1.6613387924977292
Current Bleu score is:  1.6613387924977292

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  5  5  5  5  5  5  5  5  5]] [['8', '5', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 0.05        2.18606798 -1.68574677 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 10  6  5  5  5  5  5]] [['1', '8', '9', '8', '6', '5', '5', '5', '5', '5']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -1.42950658e-01  9.67233440e-01
 -1.86997622e-01 -1.80776574e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  9  6  5  5  5  5  5]] [['8', '8', '8', '2', '6', '5', '5', '5', '5', '5']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986  0.00447861
 -0.02218243 -0.0235031  -0.01697575  0.10724315]
1422  r_total and score:  1703.8558691571532 1.4480337367688783
Current Bleu score is:  1.4480337367688783

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  9  5  5  5  5  5  5  5  5]] [['8', '2', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 0.05        0.02071068  0.47961053 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  5  8  6 10  5 12 12 12]] [['8', '8', '5', '3', '6', '8', '5', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  9  8  5  5  5  5  5]] [['8', '8', '8', '2', '3', '5', '5', '5', '5', '5']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -4.99576080e-04 -2.63771890e-02 -2.48515021e-02
 -1.79496725e-02  1.13395822e-01]
1423  r_total and score:  1547.811357132726 1.7641394565709332
Current Bleu score is:  1.7641394565709332

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  9  5  5  5  5  5  5  5  5]] [['8', '2', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 0.05        0.02071068  0.47961053 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  4 10  6 10 12 12 12 12]] [['8', '8', '9', '8', '6', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344 -0.18699762 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  9 11  5  5  5  5  5]] [['8', '8', '8', '2', '0', '5', '5', '5', '5', '5']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986  0.00447861
 -0.02218243 -0.0235031  -0.01697575  0.10724315]
1424  r_total and score:  1640.1302830139327 1.6291745304126457
Current Bleu score is:  1.6291745304126457

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8  4  5 12 12 12 12 12 12 12]] [['3', '9', '5', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068  0.47961053 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 8 10  4  8  6  5 12 12 12 12]] [['3', '8', '9', '3', '6', '5', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.03214713
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 6 8 6 8 5 5 5 5 5]] [['3', '6', '3', '6', '3', '5', '5', '5', '5', '5']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307  0.01442
 -0.01605517 -0.0218721  -0.01579772  0.09980099]
1425  r_total and score:  2038.5879650018053 1.6572345184983268
Current Bleu score is:  1.6572345184983268

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 12 12 12 12 12 12 12 12 12]] [['8', '7', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  4 10  6 12 12 12 12 12]] [['8', '8', '9', '8', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344 -0.18699762 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  9  5  5  5  5  5  5]] [['8', '8', '8', '2', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -4.99576080e-04 -3.48521867e-02 -2.35030996e-02
 -1.69757522e-02  1.07243147e-01]
1426  r_total and score:  1403.2565994260885 1.3133235820109352
Current Bleu score is:  1.3133235820109352

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  5  5 12 12 12 12 12 12]] [['7', '2', '5', '5', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068  0.47961053 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6  9  6  6 12 12 12 12 12]] [['6', '6', '2', '6', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[6 6 6 9 9 5 5 5 5 5]] [['6', '6', '6', '2', '2', '5', '5', '5', '5', '5']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619  0.10436252
 -0.00488055 -0.01976367 -0.01427485  0.09018038]
1427  r_total and score:  1901.2467956146193 1.3710659511068644
Current Bleu score is:  1.3710659511068644

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  4 12 12 12 12 12 12 12 12]] [['7', '9', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  4  8  6 12 12 12 12 12]] [['7', '8', '9', '3', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10  8 12 12  5  5  5  5  5]] [['7', '8', '3', '7', '7', '5', '5', '5', '5', '5']] 

Reward:  [ 0.0003369   0.302282   -0.04754553 -0.07181768 -0.01782986  0.00447861
 -0.02218243 -0.0235031  -0.01697575  0.10724315]
1428  r_total and score:  1575.483249400006 1.2534853953066492
Current Bleu score is:  1.2534853953066492

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8  4  4 12 12 12 12 12 12 12]] [['3', '9', '9', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 7  6  4  8  9 12 12 12 12 12]] [['4', '6', '9', '3', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[8 6 8 6 9 5 5 5 5 5]] [['3', '6', '3', '6', '2', '5', '5', '5', '5', '5']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307  0.01442
 -0.01605517 -0.0218721  -0.01579772  0.09980099]
1429  r_total and score:  2139.418697769355 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 4 4 4 4 4 4 4 4 4]] [['6', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12  6  4  6  6  6  6  6  6  6]] [['7', '6', '9', '6', '6', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[6 6 6 9 9 6 5 5 5 5]] [['6', '6', '6', '2', '2', '6', '5', '5', '5', '5']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
  0.08149774  0.         -0.01427485  0.09018038]
1430  r_total and score:  910.4244699858796 0.0
Current Bleu score is:  0.0
EPOCH %d 44
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  4  4  4  4  4  4  4  4  4]] [['7', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  4 10  9 12  4  4  4  4]] [['7', '8', '9', '8', '2', '7', '9', '9', '9', '9']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -1.42950658e-01  9.67233440e-01
  7.08574716e+00 -2.01953311e+00 -8.34192974e-01 -8.83858291e-01
 -6.38390661e-01  4.03298912e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  6 12  6  9  6  5  5  5  5]] [['7', '6', '7', '6', '2', '6', '5', '5', '5', '5']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
  0.08149774  0.         -0.01427485  0.09018038]
1431  r_total and score:  2387.990077393295 1.5948936550754378
Current Bleu score is:  1.5948936550754378

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  4  4  4  4  4  4  4  4  4]] [['8', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10  4 10  9 12  9  9  9  9]] [['6', '8', '9', '8', '2', '7', '2', '2', '2', '2']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -1.42950658e-01  9.67233440e-01
  7.08574716e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  9  9 12 12 12 12 12]] [['8', '8', '8', '2', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1432  r_total and score:  773.0744822616394 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  4  9 12 12 12 12 12 12 12]] [['8', '9', '2', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 10  9 12 12 12 12 12]] [['1', '8', '9', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -1.42950658e-01  9.67233440e-01
  7.08574716e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  9  9 12 12 12 12 12]] [['8', '8', '8', '2', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1433  r_total and score:  1119.823159065372 1.3997687564887173
Current Bleu score is:  1.3997687564887173

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  4 12 12 12 12 12 12 12 12]] [['8', '9', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  4 10  9 10 10 10 10 10]] [['8', '8', '9', '8', '2', '8', '8', '8', '8', '8']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344  7.08574716 -2.01953311
 -1.2196995  -0.82252282 -0.59408945  3.75311927]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  9  8 12  5  5  5  5]] [['8', '8', '8', '2', '3', '7', '5', '5', '5', '5']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -2.21824254e-02 -1.63765044e-02
 -1.79496725e-02  1.13395822e-01]
1434  r_total and score:  1124.0005223834 1.17959403934127
Current Bleu score is:  1.17959403934127

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  4 12 12 12 12 12 12 12 12]] [['8', '9', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 10  9 10 10 10 10 10]] [['1', '8', '9', '8', '2', '8', '8', '8', '8', '8']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -1.42950658e-01  9.67233440e-01
  7.08574716e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  6  8 12 10 12 12 12]] [['8', '8', '8', '6', '3', '7', '8', '7', '7', '7']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1435  r_total and score:  845.8117811029489 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  4 12 12 12 12 12 12 12 12]] [['8', '9', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 10  9 10 10 10 10 10]] [['1', '8', '9', '8', '2', '8', '8', '8', '8', '8']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -1.42950658e-01  9.67233440e-01
  7.08574716e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  6  8 12 10 10 10 10]] [['8', '8', '8', '6', '3', '7', '8', '8', '8', '8']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1436  r_total and score:  1033.2966222765124 0.8668832804218969
Current Bleu score is:  0.8668832804218969

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  4 12 12 12 12 12 12 12 12]] [['8', '9', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 10  9 10 10 10 10 10]] [['1', '8', '9', '8', '2', '8', '8', '8', '8', '8']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -1.42950658e-01  9.67233440e-01
  7.08574716e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  6 11 12 10 10 10 10]] [['8', '8', '8', '6', '0', '7', '8', '8', '8', '8']] 

Reward:  [ 0.33689735  0.09107039 -0.17289438 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1437  r_total and score:  1338.638472726234 1.444117408512011
Current Bleu score is:  1.444117408512011

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6  9 12 12 12 12 12 12 12 12]] [['6', '2', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[6 6 4 6 9 6 6 6 6 6]] [['6', '6', '9', '6', '2', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  6  6  6  6 10 10 10 10 10]] [['6', '6', '6', '6', '6', '8', '8', '8', '8', '8']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619  0.10436252
 -0.00488055 -0.01976367 -0.01427485  0.09018038]
1438  r_total and score:  1035.0863105505446 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 4 5 5 5 5 5 5 5 5]] [['6', '9', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 0.05        0.02071068  0.47961053 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  4  6  9 10 10 10 10 10]] [['1', '6', '9', '6', '2', '8', '8', '8', '8', '8']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.03214713
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  6  6  6  6 10 10 10 10 10]] [['6', '6', '6', '6', '6', '8', '8', '8', '8', '8']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619  0.10436252
 -0.00488055 -0.01976367 -0.01427485  0.09018038]
1439  r_total and score:  1300.1146555991224 1.070347571464036
Current Bleu score is:  1.070347571464036

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6  9 12 12 12 12 12 12 12 12]] [['6', '2', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[6 6 4 6 9 6 5 6 5 6]] [['6', '6', '9', '6', '2', '6', '5', '6', '5', '6']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.01605517 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  6  6  6  9 12 11 12 12 12]] [['6', '6', '6', '6', '2', '7', '0', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1440  r_total and score:  778.6947396214834 0.9363409593665833
Current Bleu score is:  0.9363409593665833

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  4 12 12 12 12 12 12 12 12]] [['8', '9', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 13  9 10 10 12 12 12]] [['1', '8', '9', '1', '2', '8', '8', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13  6  9 12 12 12 12 12]] [['1', '8', '1', '6', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1441  r_total and score:  1172.582649401711 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  4 12 12 12 12 12 12 12 12]] [['8', '9', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 12  4 13  9 12 12 12 12 12]] [['1', '7', '9', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 12 13 11  9 12 12 12 12 12]] [['1', '7', '1', '0', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1442  r_total and score:  892.393440667853 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  4 12 12 12 12 12 12 12 12]] [['8', '9', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 13  9 12 12 12 12 12]] [['1', '8', '9', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13  6  9 12 12 12 12 12]] [['1', '8', '1', '6', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1443  r_total and score:  1226.7613872738561 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[6 4 4 4 4 4 4 4 4 4]] [['6', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 13  4 13 12 12 12 12 12 12]] [['1', '1', '9', '1', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 13 13  6  9 12 12 12 12 12]] [['1', '1', '1', '6', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1444  r_total and score:  1061.734756344298 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6  4 12 12 12 12 12 12 12 12]] [['6', '9', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6  4  6  9  6 12 12 12 12]] [['6', '6', '9', '6', '2', '6', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[6 6 6 6 9 5 5 5 5 5]] [['6', '6', '6', '6', '2', '5', '5', '5', '5', '5']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619  0.10436252
 -0.00488055 -0.01976367 -0.01427485  0.09018038]
1445  r_total and score:  1056.8736455231383 0.8539125638299666
Current Bleu score is:  0.8539125638299666

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6  4 12 12 12 12 12 12 12 12]] [['6', '9', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6  4  6  9  6 12 12 12 12]] [['6', '6', '9', '6', '2', '6', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  6  6  6  9  5  6 12 12 12]] [['6', '6', '6', '6', '2', '5', '6', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619  0.10436252
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1446  r_total and score:  977.7114408429279 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6  4 12 12 12 12 12 12 12 12]] [['6', '9', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6  4  6  9  6 12 12 12 12]] [['6', '6', '9', '6', '2', '6', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  6  6  6  9 12  6 12 12 12]] [['6', '6', '6', '6', '2', '7', '6', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1447  r_total and score:  877.4211313456912 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  4 12 12 12 12 12 12 12 12]] [['8', '9', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 13  4 10  4 12 12 12 12 12]] [['1', '1', '9', '8', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01  1.04067266e+00
 -6.57835587e-02 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 13 10  6  6 12 10 10 10 10]] [['8', '1', '8', '6', '6', '7', '8', '8', '8', '8']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1448  r_total and score:  1144.7446696764644 0.9989940187346215
Current Bleu score is:  0.9989940187346215

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6  9 12 12 12 12 12 12 12 12]] [['6', '2', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 13  4  6  4  6 12 12 12 12]] [['6', '1', '9', '6', '9', '6', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  6  6  6  6 12  6  6  6  6]] [['6', '6', '6', '6', '6', '7', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1449  r_total and score:  1206.780732847226 1.0494628388463878
Current Bleu score is:  1.0494628388463878

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 10 10 10 10 10 10 10 10 10]] [['8', '8', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  6  4 10  4 10 10 10 10 10]] [['8', '6', '9', '8', '9', '8', '8', '8', '8', '8']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344 -0.06578356 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  6 10  6  8 10 10 10 10 10]] [['8', '6', '8', '6', '3', '8', '8', '8', '8', '8']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04  7.72369030e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
1450  r_total and score:  983.6277413590543 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 10 10 10 10 10 10 10 10 10]] [['8', '8', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  5 10  4 10 10 10 10 10]] [['8', '8', '5', '8', '9', '8', '8', '8', '8', '8']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.01169815  0.73183599
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  6 10  6  6 10 10 10 10 10]] [['8', '6', '8', '6', '6', '8', '8', '8', '8', '8']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1451  r_total and score:  1046.036233651784 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 10 10 10 10 10 10 10 10 10]] [['8', '8', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  6  4 10  4 10 10 10 10 10]] [['8', '6', '9', '8', '9', '8', '8', '8', '8', '8']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344 -0.06578356 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  7 10  6  8 10 10 10 10 10]] [['8', '4', '8', '6', '3', '8', '8', '8', '8', '8']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.08918036 -0.00608019  0.82996454
 -0.19598825 -0.13216764 -0.09546167  0.60307254]
1452  r_total and score:  1122.3433087173785 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 11 12 12 12 12 12 12 12 12]] [['1', '0', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6 11 13  4 11 11 11 11 11]] [['1', '6', '0', '1', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6  6 11 11 11 11 11]] [['1', '6', '1', '6', '6', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1453  r_total and score:  1815.6933294270195 1.6699367916305765
Current Bleu score is:  1.6699367916305765

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6 11 12 12 12 12 12 12 12 12]] [['6', '0', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  4  6  4  6  6  6  6  6]] [['1', '6', '9', '6', '9', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  6  6  6  8 12  6  6  6  6]] [['6', '6', '6', '6', '3', '7', '6', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1454  r_total and score:  1190.688767440171 0.8357395580721756
Current Bleu score is:  0.8357395580721756

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  4 11 11 11 11 11 11 11 11]] [['1', '9', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  4 13  4 13 11 11 11 11]] [['1', '6', '9', '1', '9', '1', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6  8 12 12 12 12 12]] [['1', '6', '1', '6', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1455  r_total and score:  2376.100728066984 1.6840446155621196
Current Bleu score is:  1.6840446155621196

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  4 11 11 11 11 11 11 11 11]] [['1', '9', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  4 13  4  5 11 11 11 11]] [['1', '6', '9', '1', '9', '5', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.03214713
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6  8 12 11 11 11 11]] [['1', '6', '1', '6', '3', '7', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1456  r_total and score:  1715.3738452879727 1.509685871962346
Current Bleu score is:  1.509685871962346

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  4 13  9 12 11 11 11 11]] [['1', '6', '9', '1', '2', '7', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6  9 12 11 11 11 11]] [['1', '6', '1', '6', '2', '7', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1457  r_total and score:  2001.5897574827743 1.0344367915916561
Current Bleu score is:  1.0344367915916561

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6 11 13  9 11 11 11 11 11]] [['1', '6', '0', '1', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6  5 12 11 11 11 11]] [['1', '6', '1', '6', '5', '7', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1458  r_total and score:  3284.31652390218 1.9005382972200198
Current Bleu score is:  1.9005382972200198

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  9 12  9  6 11 11 11 11]] [['1', '6', '2', '7', '2', '6', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  6 12 12  6 12 11 11 11 11]] [['7', '6', '7', '7', '6', '7', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1459  r_total and score:  2226.1053243625847 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 12 12 12 12 12 12 12 12]] [['7', '0', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6 11 13  6 12 12 12 12 12]] [['1', '6', '0', '1', '6', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6  8 12 12 11 11 11]] [['1', '6', '1', '6', '3', '7', '7', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1460  r_total and score:  2555.7076382175997 1.3785274950908217
Current Bleu score is:  1.3785274950908217

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 12 12 12 12 12 12 12 12]] [['7', '0', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6 11 13  9 12 12 12 12 12]] [['1', '6', '0', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6  8 12 12 12 12 12]] [['1', '6', '1', '6', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1461  r_total and score:  2752.9006164790403 1.2145954515311694
Current Bleu score is:  1.2145954515311694

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 12 12 12 12 12 12 12 12]] [['7', '0', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  6 11 10  9 12 11 11 11 11]] [['8', '6', '0', '8', '2', '7', '0', '0', '0', '0']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.93835228 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  6 10  6  5 12 12 12 12 12]] [['8', '6', '8', '6', '5', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1462  r_total and score:  1422.1852168385485 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12  6 13 12  9 11 11 11 11 11]] [['7', '6', '1', '7', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  7 12  8 12 12 11 11 11 11]] [['7', '4', '7', '3', '7', '7', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1463  r_total and score:  1338.6202888176042 0.0
Current Bleu score is:  0.0
EPOCH %d 45
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  7 13 10  9 12 11 11 11 11]] [['8', '4', '1', '8', '2', '7', '0', '0', '0', '0']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.93835228 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  7 10 12  6 12 12 11 11 11]] [['8', '4', '8', '7', '6', '7', '7', '0', '0', '0']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.08918036 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
1464  r_total and score:  1178.4899137320613 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  7 13 12  9 11 11 11 11 11]] [['1', '4', '1', '7', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  7 12  8 12 12 11 11 11 11]] [['7', '4', '7', '3', '7', '7', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1465  r_total and score:  968.0878162519788 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 13 11 11 11 11 11 11 11 11]] [['7', '1', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  7 13 12  6 13 13 11 11 11]] [['1', '4', '1', '7', '6', '1', '1', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  7 13  6  6 12 13 13 13 13]] [['1', '4', '1', '6', '6', '7', '1', '1', '1', '1']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1466  r_total and score:  2059.099803798803 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  7 11 12  9 11 11 11 11 11]] [['1', '4', '0', '7', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  7 12 11  9 12 11 11 11 11]] [['7', '4', '7', '0', '2', '7', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1467  r_total and score:  1125.8863449613727 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  4 13  9 11 11 11 11 11]] [['1', '6', '9', '1', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  2 13  6  2 12 11 11 11 11]] [['1', '<s>', '1', '6', '<s>', '7', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.02706622 -0.00266619 -0.00177944 -0.00947238 -0.00161671
 -0.00126809 -0.00102185 -0.0008413   0.00873717]
1468  r_total and score:  2377.7509739866578 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  4 12  9 11 11 11 11 11]] [['1', '6', '9', '7', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  6 12  8 11 12 12 11 11 11]] [['7', '6', '7', '3', '0', '7', '7', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1469  r_total and score:  1422.1346026668605 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 13  5  5  5  5  5  5  5  5]] [['7', '1', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 0.05        0.02071068  0.47961053 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  4 13 13 12 12 12 12 12]] [['1', '6', '9', '1', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6  9 12 12 12 12 12]] [['1', '6', '1', '6', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1470  r_total and score:  2751.0694939236996 1.214242338210699
Current Bleu score is:  1.214242338210699

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 12  9  5 11 11 11 11]] [['1', '8', '9', '7', '2', '5', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815  0.8030833
 -0.19598825 -0.13216764 -0.09546167  0.60307254]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12 11 13 12 12  5  5 11]] [['7', '8', '7', '0', '1', '7', '7', '5', '5', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422  0.         -0.00465423  0.09980099]
1471  r_total and score:  1900.2861945073316 1.3494335479481654
Current Bleu score is:  1.3494335479481654

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  4 13  9 11 11 11 11 11]] [['1', '6', '9', '1', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  6 12 11  9 12 11 11 11 11]] [['7', '6', '7', '0', '2', '7', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1472  r_total and score:  3236.052824364405 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 13  9 11 11 11 11 11]] [['1', '8', '9', '1', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 13  8 12 12 12 11 11 11]] [['7', '8', '1', '3', '7', '7', '7', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.01919618 -0.01782986 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1473  r_total and score:  3091.3665770163525 1.4922236883192919
Current Bleu score is:  1.4922236883192919

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9 13  9 11 11 11 11 11]] [['1', '8', '2', '1', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13  6  9 12 11 11 11 11]] [['1', '8', '1', '6', '2', '7', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1474  r_total and score:  2500.9273487126598 1.608539956528561
Current Bleu score is:  1.608539956528561

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  9 11 11 11 11 11 11 11 11]] [['8', '2', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 12  4 10  9 11 11 11 11 11]] [['1', '7', '9', '8', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01  1.04067266e+00
  7.08574716e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 12 10  8 12 12 11 11 11 11]] [['8', '7', '8', '3', '7', '7', '0', '0', '0', '0']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.01973199 -0.01316934
 -0.03243361 -0.0218721  -0.01579772  0.09980099]
1475  r_total and score:  932.0154954798322 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  9 11 11 11 11 11 11 11 11]] [['8', '2', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  4 13  9 11 11 11 11 11]] [['1', '6', '9', '1', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6  9 10 11 11 11 11]] [['1', '6', '1', '6', '2', '8', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619  0.10436252
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1476  r_total and score:  1720.7675148202743 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  9 11 11 11 11 11 11 11 11]] [['8', '2', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  9 10  9 11 11 11 11 11]] [['1', '6', '2', '8', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.04723938  0.90091441 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  6 10  6  8 12 11 11 11 11]] [['8', '6', '8', '6', '3', '7', '0', '0', '0', '0']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1477  r_total and score:  1174.121223763005 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  9 11 11 11 11 11 11 11 11]] [['1', '2', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  9 13  9 11 11 11 11 11]] [['1', '6', '2', '1', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6  8 12 11 11 11 11]] [['1', '6', '1', '6', '3', '7', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1478  r_total and score:  2067.3881376032114 1.3424903357751337
Current Bleu score is:  1.3424903357751337

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  9 11 11 11 11 11 11 11 11]] [['8', '2', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9 13  9 11 11 11 11 11]] [['1', '8', '2', '1', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6  8 10 11 11 11  9]] [['1', '6', '1', '6', '3', '8', '0', '0', '0', '2']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  7.15793012e-03
  1.11702861e-01  7.24234044e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
1479  r_total and score:  2865.709572006989 2.5790994852093507
Current Bleu score is:  2.5790994852093507

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  9  5  5  5  5  5  5  5  5]] [['8', '2', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 0.05        0.02071068  0.47961053 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  6  9 10  9 11  5  5 11  5]] [['8', '6', '2', '8', '2', '0', '5', '5', '0', '5']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786   0.90091441 -0.27287935
 -0.09028485 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  6 10  6 11 10  5  9  9  9]] [['8', '6', '8', '6', '0', '8', '5', '2', '2', '2']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.01189984
  0.6195292  -0.12299585 -0.08883709  0.56122223]
1480  r_total and score:  1490.927709392414 0.8968453885570681
Current Bleu score is:  0.8968453885570681

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  9  5  5  5  5  5  5  5  5]] [['8', '2', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 0.05        0.02071068  0.47961053 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  9 10  9 11 11 11 11 11]] [['1', '6', '2', '8', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.04723938  0.90091441 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  6 10  6  8 10  9  9  9  9]] [['8', '6', '8', '6', '3', '8', '2', '2', '2', '2']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04  7.72369030e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
1481  r_total and score:  1215.2105505081831 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  7  5  5  5  5  5  5  5  5]] [['8', '4', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 0.05        0.02071068  0.47961053 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  9 10  9  5  5  5  5  5]] [['1', '6', '2', '8', '2', '5', '5', '5', '5', '5']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  2.66766644e-01 -4.72393767e-02
  9.00914414e-01  5.25321168e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  6 10 12  8  5  7  9  9  9]] [['8', '6', '8', '7', '3', '5', '4', '2', '2', '2']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -4.99576080e-04  6.95786076e-01 -1.39750266e-01
 -1.00938426e-01  6.37671569e-01]
1482  r_total and score:  1766.4054718635616 1.1100290192385829
Current Bleu score is:  1.1100290192385829

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  4  5  5  5  5  5  5  5  5]] [['8', '9', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 0.05        0.02071068  0.47961053 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  4 13 13  5  5  5  5  5]] [['1', '6', '9', '1', '1', '5', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.01637845
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  9  8  5  4  4  4  4]] [['1', '6', '1', '2', '3', '5', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286  0.01442
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1483  r_total and score:  1956.4630470329462 1.5686628238028713
Current Bleu score is:  1.5686628238028713

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  4  5  5  5  5  5  5  5  5]] [['8', '9', '5', '5', '5', '5', '5', '5', '5', '5']] 

Reward:  [ 0.05        0.02071068  0.47961053 -0.29625483 -0.08416195 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[6 6 4 6 9 5 5 5 5 5]] [['6', '6', '9', '6', '2', '5', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446  0.75339124
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  6  6 12  6  5  4  4  4  4]] [['6', '6', '6', '7', '6', '5', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619  0.10436252
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1484  r_total and score:  1142.5525748825778 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  4 11 11 11 11 11 11 11 11]] [['1', '9', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  4 13  4 10 10 10 10 10]] [['1', '6', '9', '1', '9', '8', '8', '8', '8', '8']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446  0.75339124
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6 11 10  4  4  4  4]] [['1', '6', '1', '6', '0', '8', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619  0.10436252
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1485  r_total and score:  2830.074248332007 1.9477256018812217
Current Bleu score is:  1.9477256018812217

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6  4 11 11 11 11 11 11 11 11]] [['6', '9', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6  4  6  4 10 10 10 10 10]] [['6', '6', '9', '6', '9', '8', '8', '8', '8', '8']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446  0.75339124
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6 12  6  6 11 10  4  4  4  4]] [['6', '7', '6', '6', '0', '8', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619  0.10436252
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1486  r_total and score:  1041.8153281705845 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  4 11 11 11 11 11 11 11 11]] [['1', '9', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  4 13  4 11 10  2  2  2]] [['1', '6', '9', '1', '9', '0', '8', '<s>', '<s>', '<s>']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.01605517 -0.04963478 -0.02317375  0.06466228]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6  6  2  4  4  4  4]] [['1', '6', '1', '6', '6', '<s>', '9', '9', '9', '9']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00911723
 -0.00213459 -0.00161671 -0.00126809  0.01060031]
1487  r_total and score:  2775.07785800161 1.5828301915644456
Current Bleu score is:  1.5828301915644456

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 2  4 11 11 11 11 11 11 11 11]] [['<s>', '9', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.02751606  0.01766404 -0.01496635 -0.00725627 -0.00438243 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  6  4 10  4 10 10 10 10 10]] [['8', '6', '9', '8', '9', '8', '8', '8', '8', '8']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066  0.96723344 -0.06578356 -0.30199064
 -0.18238762 -0.12299585 -0.08883709  0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  6 10  4 11  2  4  4  4  4]] [['8', '6', '8', '9', '0', '<s>', '9', '9', '9', '9']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.07181768 -0.01782986 -0.06097059
 -0.01427485 -0.01081157 -0.00848024  0.07088857]
1488  r_total and score:  1000.7956357055904 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6 11 11 11 11 11 11 11 11 11]] [['6', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  6 11  6 11 11 11 11 11 11]] [['0', '6', '0', '6', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  8  6  6  5 12 11 11 11 11]] [['6', '3', '6', '6', '5', '7', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1489  r_total and score:  693.4923216260763 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 11 11 11 11 11 11 11 11 11]] [['3', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10  9  8  9 10 10 10 10 10]] [['8', '8', '2', '3', '2', '8', '8', '8', '8', '8']] 

Reward:  [ 0.91578194 -0.41684774  3.06090127 -2.23661849 -0.18699762 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8  6  8  6  8 10 11 11 11 11]] [['3', '6', '3', '6', '3', '8', '0', '0', '0', '0']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307  0.72423404
 -0.16480582 -0.1111393  -0.08027338  0.50712153]
1490  r_total and score:  1420.7397431988168 1.113346111976696
Current Bleu score is:  1.113346111976696

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 8 11 11 11 11 11 11 11 11 11]] [['3', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  4  8  9 11 11 11 11 11]] [['0', '8', '9', '3', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8 10  8  8 10 12 11 11 11 11]] [['3', '8', '3', '3', '8', '7', '0', '0', '0', '0']] 

Reward:  [ 3.36897350e-01  1.31966310e+01 -1.09827947e+01 -1.52021115e+00
 -1.02300788e-03 -7.40566266e-02 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
1491  r_total and score:  1478.7785759498197 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 11 11 11 11 11 11 11 11 11]] [['8', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  4 10  9 11 11 11 11 11]] [['0', '8', '9', '8', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -1.42950658e-01  9.67233440e-01
  7.08574716e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  4  8 11 11 11 11 11]] [['8', '8', '8', '9', '3', '0', '0', '0', '0', '0']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1492  r_total and score:  1180.1349119472977 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11  4 11 11 11 11 11 11 11 11]] [['0', '9', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  7  4 11  9 11 11 11 11 11]] [['0', '4', '9', '0', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  7 11  4  7 11 11 11 11 11]] [['0', '4', '0', '9', '4', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1493  r_total and score:  1471.5039152062611 1.043555257631921
Current Bleu score is:  1.043555257631921

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  4 13 13 13 13 13 13 13 13]] [['8', '9', '1', '1', '1', '1', '1', '1', '1', '1']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9 10  9 13 13 13 13 13]] [['1', '8', '2', '8', '2', '1', '1', '1', '1', '1']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  4  7 12 10 11 11 11]] [['8', '8', '8', '9', '4', '7', '8', '0', '0', '0']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1494  r_total and score:  915.8537651695717 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11  9  9 10 10 10 10 10 10 10]] [['0', '2', '2', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  7  9 10  9 10 11 11 11 11]] [['8', '4', '2', '8', '2', '8', '0', '0', '0', '0']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786   0.90091441 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  4  7 12 11 11 11 11]] [['8', '8', '8', '9', '4', '7', '0', '0', '0', '0']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1495  r_total and score:  1151.1688965217497 1.2348259262736958
Current Bleu score is:  1.2348259262736958

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  9  9  9  9  9  9  9  9  9]] [['8', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  7  9 10 12 10 10 10 10 10]] [['8', '4', '2', '8', '7', '8', '8', '8', '8', '8']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10 10 10  4  8 12 10 10 10 10]] [['8', '8', '8', '9', '3', '7', '8', '8', '8', '8']] 

Reward:  [ 3.36897350e-01  9.10703929e-02 -1.72894385e-01 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1496  r_total and score:  1161.5813724808093 0.8458576712796905
Current Bleu score is:  0.8458576712796905

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  9  9  9  9  9  9  9  9  9]] [['8', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  7  9 10  9 10 12 12 12 12]] [['8', '4', '2', '8', '2', '8', '7', '7', '7', '7']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786   0.90091441 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  7 10  4  8 12 12 12 12 12]] [['8', '4', '8', '9', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.33689735  0.09107039 -0.13598164 -0.08918036 -0.00608019 -0.01415137
 -0.03485219 -0.0235031  -0.01697575  0.10724315]
1497  r_total and score:  927.8496341563764 0.0
Current Bleu score is:  0.0
EPOCH %d 46
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  9 12 12 12 12 12 12 12 12]] [['8', '2', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  9  9 10  9 12 12 12 12 12]] [['8', '2', '2', '8', '2', '7', '7', '7', '7', '7']] 

Reward:  [  0.91578194  21.39723407 -18.75318054  -2.23661849  -0.18699762
  -0.27287935  -0.16480582  -0.1111393   -0.08027338   0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  9 10  9  7 12 12 12 12 12]] [['8', '2', '8', '2', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1498  r_total and score:  1236.8307596020063 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[5 9 9 9 9 9 9 9 9 9]] [['5', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 5.00000000e+01 -4.77639320e+01 -1.68574677e+00 -2.96254834e-01
 -8.41619496e-02 -4.08049796e-02 -2.46442176e-02 -1.66192011e-02
 -1.20036695e-02  7.58323567e-02]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[4 9 9 5 4 5 5 5 5 5]] [['9', '2', '2', '5', '9', '5', '5', '5', '5', '5']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597  1.10839677  7.57163972 -2.17012956
 -1.31065241 -0.88385829 -0.63839066  4.03298912]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 5  9  5  8  7 12 12  5  5  5]] [['5', '2', '5', '3', '4', '7', '7', '5', '5', '5']] 

Reward:  [ 0.33689735 -0.03427846 -0.04754553 -0.05226761 -0.00608019 -0.01415137
 -0.03485219 -0.0235031  -0.01697575  0.10724315]
1499  r_total and score:  1894.934616923753 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  9  9  9  9  9  9  9  9  9]] [['1', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4  9  9 13  4 11 11 11 11 11]] [['9', '2', '2', '1', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.91578194 -0.21018242 -0.34961597 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  9 13  7  7 12 11 11 11 11]] [['1', '2', '1', '4', '4', '7', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1500  r_total and score:  2741.539571172447 1.8250282596766982
Current Bleu score is:  1.8250282596766982

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11  9  9  9  9  9  9  9  9  9]] [['0', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11  9  9 13  4 11 11 11 11 11]] [['0', '2', '2', '1', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  9 13  7  7 11 11 11 11 11]] [['1', '2', '1', '4', '4', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1501  r_total and score:  2611.183128026047 2.2067006731362406
Current Bleu score is:  2.2067006731362406

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11  9  9  9  9  9  9  9  9  9]] [['0', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10  9 13  4 11 11 11 11 11]] [['0', '8', '2', '1', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -6.57835587e-02 -3.01990637e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  9 13  7  7 11 11 11 11 11]] [['1', '2', '1', '4', '4', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1502  r_total and score:  2179.631473678181 2.1103229781155446
Current Bleu score is:  2.1103229781155446

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 11  9  9  9  9  9  9  9  9]] [['0', '0', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  9 13  4 11 11 11 11 11]] [['9', '8', '2', '1', '9', '0', '0', '0', '0', '0']] 

Reward:  [  0.91578194  21.39723407  29.02869589 -41.54881051  -0.75688136
  -2.17012956  -1.31065241  -0.88385829  -0.63839066   4.03298912]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  9 11  4  7 11 11 11 11 11]] [['0', '2', '0', '9', '4', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1503  r_total and score:  2426.4927920260143 2.1373703795624013
Current Bleu score is:  2.1373703795624013

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11 11 11 11 11 11 11 11 11 11]] [['0', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 4 10  4 11 11 11 11 11 11 11]] [['9', '8', '9', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [  0.91578194  21.39723407 -18.23802164  -2.61061406  -0.20694689
  -0.30199064  -0.18238762  -0.12299585  -0.08883709   0.56122223]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11  6 11  6  7 12 11 11 11 11]] [['0', '6', '0', '6', '4', '7', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1504  r_total and score:  2951.542346293324 2.2305642779703967
Current Bleu score is:  2.2305642779703967

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  4 13  4 11 11 11 11 11]] [['7', '8', '9', '1', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6  8 12 11 11 11 11]] [['1', '6', '1', '6', '3', '7', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1505  r_total and score:  3561.5119959885124 2.186315778267213
Current Bleu score is:  2.186315778267213

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12  6  4 13  9 11 11 11 11 11]] [['7', '6', '9', '1', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6  7 12 12 12 12 12]] [['1', '6', '1', '6', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1506  r_total and score:  3893.5993051692844 2.523862518109867
Current Bleu score is:  2.523862518109867

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[12 10  9 13  9 11 11 11 11 11]] [['7', '8', '2', '1', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  8  7 12 12 12 12 12]] [['1', '6', '1', '3', '4', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1507  r_total and score:  2362.9946193240526 1.3956747160945482
Current Bleu score is:  1.3956747160945482

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  4 13  9 11 11  4  4  4]] [['1', '6', '9', '1', '2', '0', '0', '9', '9', '9']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.00862019 -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6  8 12 12 12 12 12]] [['1', '6', '1', '6', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1508  r_total and score:  2814.574545798245 1.7213279878456873
Current Bleu score is:  1.7213279878456873

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  4 13  9 11 11 11 11 11]] [['1', '6', '9', '1', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6  8 12 12 11 11 11]] [['1', '6', '1', '6', '3', '7', '7', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1509  r_total and score:  2166.658345382397 1.4427979759710412
Current Bleu score is:  1.4427979759710412

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  4  4  4  4  4  4  4  4  4]] [['1', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 13  9 11  4  4  4  4]] [['1', '8', '9', '1', '2', '0', '9', '9', '9', '9']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.02218243 -0.0235031  -0.01697575  0.10724315]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6 10 10 13 11 11 11]] [['1', '6', '1', '6', '8', '8', '1', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286  0.01442
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1510  r_total and score:  1925.9202165965905 1.279443279990793
Current Bleu score is:  1.279443279990793

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  4  4  4  4  4  4  4  4  4]] [['8', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 10  9  8  4  4  4  4]] [['1', '8', '9', '8', '2', '3', '9', '9', '9', '9']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -1.42950658e-01  9.67233440e-01
  7.08574716e+00 -2.01953311e+00 -8.34192974e-01 -8.83858291e-01
 -6.38390661e-01  4.03298912e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  6 10  6  8 12 12 12 11 11]] [['8', '6', '8', '6', '3', '7', '7', '7', '0', '0']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1511  r_total and score:  1139.1356286603093 1.4841247499244334
Current Bleu score is:  1.4841247499244334

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  4  4  4  4  4  4  4  4  4]] [['8', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 10  9 11 11 11 11 11]] [['1', '8', '9', '8', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 9.15781944e-04  4.98018424e-01 -1.42950658e-01  9.67233440e-01
  7.08574716e+00 -2.01953311e+00 -1.21969950e+00 -8.22522820e-01
 -5.94089451e-01  3.75311927e+00]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  6 10  6  8 12 12 12 12 12]] [['8', '6', '8', '6', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1512  r_total and score:  884.4311443785801 1.2144293189255155
Current Bleu score is:  1.2144293189255155

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10  4  4 12 12  4  4  4  4  4]] [['8', '9', '9', '7', '7', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 13  9 12 12 12 12 12]] [['1', '8', '9', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6  2 12 12 12 12 12]] [['1', '6', '1', '6', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00882806 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]
1513  r_total and score:  1907.45310822009 1.4228157556041765
Current Bleu score is:  1.4228157556041765

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  4  4  4  4  4  4  4  4  4]] [['1', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  4 13  9 11 11 11 11 11]] [['1', '6', '9', '1', '2', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6  2 12 11 11 11 11]] [['1', '6', '1', '6', '<s>', '7', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00882806 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]
1514  r_total and score:  1981.334726561321 1.501233046663775
Current Bleu score is:  1.501233046663775

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  4  4  4  4  4  4  4  4  4]] [['1', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  4 13 13 12 12 12 12 12]] [['1', '6', '9', '1', '1', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6  2 12 12 12 12 12]] [['1', '6', '1', '6', '<s>', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00882806 -0.00295536
 -0.00213459 -0.00161671 -0.00126809  0.01060031]
1515  r_total and score:  2264.5630418050528 1.3545056841646972
Current Bleu score is:  1.3545056841646972

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  4 12 12 12 12 12 12 12 12]] [['1', '9', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  4 13  9 12 12 12 12 12]] [['1', '6', '9', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6 10 12 12 12 12 12]] [['1', '6', '1', '6', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1516  r_total and score:  2052.861977550274 1.0047190941744208
Current Bleu score is:  1.0047190941744208

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  4  4  4  4  4  4  4  4  4]] [['1', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  4 13  9 12 12 12 12 12]] [['1', '6', '9', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13  6  4 12 12 12 12 12]] [['1', '8', '1', '6', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1517  r_total and score:  2490.1797562340003 1.0363611464110372
Current Bleu score is:  1.0363611464110372

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  4 12 12 12 12 12 12 12 12]] [['1', '9', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 13 12 12 12 12 12 12]] [['1', '8', '9', '1', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13  6  4 12 12 12 12 12]] [['1', '8', '1', '6', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1518  r_total and score:  1168.5931479096428 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11  4  9  9  9  9  9  9  9  9]] [['0', '9', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 11  4 11  9 12 12 12 12 12]] [['1', '0', '9', '0', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 11 13  6  4 12 12  9  9  9]] [['1', '0', '1', '6', '9', '7', '7', '2', '2', '2']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1519  r_total and score:  570.964962754851 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11  4  4  4  4  4  4  4  4  4]] [['0', '9', '9', '9', '9', '9', '9', '9', '9', '9']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 11 13 11  4 12 12 12 12 12]] [['0', '0', '1', '0', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[11 11 11  6  4 12 12 12 12 12]] [['0', '0', '0', '6', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1520  r_total and score:  677.1830432493225 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[11  9  9  9  9  9  9  9  9  9]] [['0', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 11 13 11  4 12 12 12 12 12]] [['1', '0', '1', '0', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13  6  4 12 12 12 12 12]] [['1', '8', '1', '6', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1521  r_total and score:  793.5720861910359 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  9 12 12 12 12 12 12 12 12]] [['1', '2', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 11 13  4 11 11 11 11 11]] [['1', '8', '0', '1', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13  6  4 12 11 11 11 11]] [['1', '8', '1', '6', '9', '7', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1522  r_total and score:  1675.2047605808223 1.2359309170224468
Current Bleu score is:  1.2359309170224468

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  9  9  9  9  9  9  9  9  9]] [['1', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 13  9 11 12 12 12 12]] [['1', '8', '9', '1', '2', '0', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.01169815 -0.05370237
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6  9 12 12 12 12 12]] [['1', '6', '1', '6', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1523  r_total and score:  2615.0784359080467 1.716727581898779
Current Bleu score is:  1.716727581898779

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  4 12  4 12 12 12 12 12]] [['1', '6', '9', '7', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6  4 12 12 12 12 12]] [['1', '6', '1', '6', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1524  r_total and score:  1628.4406871306048 0.9767300534350721
Current Bleu score is:  0.9767300534350721

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 11  9  9  9  9  9  9  9  9]] [['1', '0', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6 11 13  4 11 11 11 12 12]] [['1', '6', '0', '1', '9', '0', '0', '0', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6  8 12 11 11 11 11]] [['1', '6', '1', '6', '3', '7', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1525  r_total and score:  1783.7324864595143 0.9017474137354291
Current Bleu score is:  0.9017474137354291

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12  9  9  9  9  9  9  9  9  9]] [['7', '2', '2', '2', '2', '2', '2', '2', '2', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  5  9 13  9 12 12 12 12 12]] [['1', '5', '2', '1', '2', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  5 13  6  8 12 12 12 12 12]] [['1', '5', '1', '6', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1526  r_total and score:  1423.7774846473706 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13  9  9  9  9  9 11  9 11  9]] [['1', '2', '2', '2', '2', '2', '0', '2', '0', '2']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6  9 13  4 12 12 12 12 12]] [['1', '6', '2', '1', '9', '7', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6 10 12 12 12 12 12]] [['1', '6', '1', '6', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1527  r_total and score:  2427.78436887176 1.5785726504395965
Current Bleu score is:  1.5785726504395965

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 11 11 11 11 11 11 11 11 11]] [['1', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  9 13  9 13 12 12 12 12]] [['1', '8', '2', '1', '2', '1', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  4.98018424e-01  3.06090127e+00 -2.23661849e+00
 -1.86997622e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6 10 12 12 12 12 12]] [['1', '6', '1', '6', '8', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1528  r_total and score:  2267.366304218129 1.5475577959606222
Current Bleu score is:  1.5475577959606222

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 11 11 11 11 11 11 11 11 11]] [['8', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  6 11 10  9 10 12 12 12 12]] [['1', '6', '0', '8', '2', '8', '7', '7', '7', '7']] 

Reward:  [ 9.15781944e-04  1.48619030e-02  1.24767480e-02  1.69612658e-01
  9.38352275e-01 -2.72879345e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  6 13  6  8 12 12 12 12 12]] [['1', '6', '1', '6', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1529  r_total and score:  977.8010665603339 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[10 11 11 11 11 11 11 11 11 11]] [['8', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6  9 10  9 10 12 12 12 12]] [['6', '6', '2', '8', '2', '8', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.04723938  0.90091441 -0.27287935
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[10  6 10  6  8 12 12 12 12 12]] [['8', '6', '8', '6', '3', '7', '7', '7', '7', '7']] 

Reward:  [ 3.36897350e-01 -3.42784569e-02 -4.75455349e-02 -7.18176768e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1530  r_total and score:  989.8334334449678 0.0
Current Bleu score is:  0.0
EPOCH %d 47
 beam_dqn, egreed, gamma:  2 0.5 0.6

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6 11 11 11 11 11 11 11 11 11]] [['6', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6 11  6  6  6  6  6  6  6]] [['6', '6', '0', '6', '6', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  6  6  6 10 12 12  6  6  6]] [['6', '6', '6', '6', '8', '7', '7', '6', '6', '6']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1531  r_total and score:  824.2200848926615 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6 11 11 11 11 11 11 11 11 11]] [['6', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6 11  6 11  6 12 12 12 12]] [['6', '6', '0', '6', '0', '6', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186 -0.00497254 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  6  6  6 12 12 11 11 11 11]] [['6', '6', '6', '6', '7', '7', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1532  r_total and score:  897.6927737212632 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[ 6 11 11 11 11 11 11 11 11 11]] [['6', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6  6  4  6 11  6 10 12 12 12]] [['6', '6', '9', '6', '0', '6', '8', '7', '7', '7']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724 -0.02796267 -0.04080498
 -0.00488055 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  6  6  6 12 12 11 11 11 11]] [['6', '6', '6', '6', '7', '7', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
 -0.00438243 -0.00295536 -0.00213459  0.01348511]
1533  r_total and score:  890.0046201429222 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 10 10 10 10 10 10 10 10 10]] [['7', '8', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10  6  4  6 11 10 10 10 10 10]] [['8', '6', '9', '6', '0', '8', '8', '8', '8', '8']] 

Reward:  [ 0.91578194 -0.41684774 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 6  6  6  6  2  6 10 10 10 10]] [['6', '6', '6', '6', '<s>', '6', '8', '8', '8', '8']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00882806 -0.00295536
  0.06021266  0.00353645 -0.00848024  0.07088857]
1534  r_total and score:  1157.791770598042 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 10 10 10 10 10 10 10 10 10]] [['7', '8', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10  8 10 10 10 10 10 10]] [['8', '8', '8', '3', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8  6  8  6  8 12 10 10 10 10]] [['3', '6', '3', '6', '3', '7', '8', '8', '8', '8']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.00488055 -0.00862019 -0.01579772  0.09980099]
1535  r_total and score:  1702.328157365555 1.120263379657263
Current Bleu score is:  1.120263379657263

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 11 12 11 11 11 11 11 11]] [['0', '8', '0', '7', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12 10 12  5  8 12 11 11 11 11]] [['7', '8', '7', '5', '3', '7', '0', '0', '0', '0']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -1.91961772e-02
 -1.81919385e-04 -1.31693374e-02 -3.24336143e-02 -2.18720987e-02
 -1.57977174e-02  9.98009940e-02]
1536  r_total and score:  1524.6480417710495 0.0
Current Bleu score is:  0.0

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 11  8 11 11 11 11 11 11]] [['0', '8', '0', '3', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[ 8  6  8  6  8 12 11 11 11 11]] [['3', '6', '3', '6', '3', '7', '0', '0', '0', '0']] 

Reward:  [ 0.33689735 -0.03427846 -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1537  r_total and score:  1534.3867924738656 1.2012340408906634
Current Bleu score is:  1.2012340408906634

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 11 12 11 10 10 10 10 10]] [['0', '8', '0', '7', '0', '8', '8', '8', '8', '8']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  6 12  5  8 12 11 11 11 11]] [['7', '6', '7', '5', '3', '7', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1538  r_total and score:  1953.471381863906 1.3376982457276738
Current Bleu score is:  1.3376982457276738

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 10 10 10 10 10 10 10 10]] [['7', '0', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 11 12  9 10 10 10 10 10]] [['0', '8', '0', '7', '2', '8', '8', '8', '8', '8']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  6 12  5  8 12 10 10 10 10]] [['7', '6', '7', '5', '3', '7', '8', '8', '8', '8']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.13385386  0.01132677 -0.01189984
 -0.01605517 -0.01325191 -0.01697575  0.10724315]
1539  r_total and score:  2417.748099440699 1.4542224463293958
Current Bleu score is:  1.4542224463293958

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[12 11 11 11 11 11 11 11 11 11]] [['7', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 11 12 11 10 10 10 10 10]] [['8', '8', '0', '7', '0', '8', '8', '8', '8', '8']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[12  6 12  6  9  6 10 11 11 11]] [['7', '6', '7', '6', '2', '6', '8', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793 -0.00266619 -0.00177944
  0.08149774 -0.0166192  -0.01200367  0.07583236]
1540  r_total and score:  2254.2509948461015 1.4270845851335214
Current Bleu score is:  1.4270845851335214

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 10 10 10 10 10 10 10 10 10]] [['1', '8', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 13 10 10 10 10 10 10]] [['8', '8', '8', '1', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13  6  9  6 10 10 10 10]] [['1', '8', '1', '6', '2', '6', '8', '8', '8', '8']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281 -0.01499307 -0.01000653
 -0.00488055 -0.01976367 -0.01427485  0.09018038]
1541  r_total and score:  2718.1778319804953 2.124120772551972
Current Bleu score is:  2.124120772551972

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 10 10 10 10 10 10 10 10 10]] [['1', '8', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 13  9 10 10 10 10 10]] [['8', '8', '8', '1', '2', '8', '8', '8', '8', '8']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13  6  8 12 10 10 10 10]] [['1', '8', '1', '6', '3', '7', '8', '8', '8', '8']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.01605517 -0.0218721  -0.01579772  0.09980099]
1542  r_total and score:  1905.6507468751224 1.4443026639293781
Current Bleu score is:  1.4443026639293781

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 11 11 11 11 11 11 11 11 11]] [['1', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 11 13  4 11 10 10 10 10]] [['0', '8', '0', '1', '9', '0', '8', '8', '8', '8']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13  6  8 12 11 11 11 11]] [['1', '8', '1', '6', '3', '7', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1543  r_total and score:  2239.040943190973 2.178073615623676
Current Bleu score is:  2.178073615623676

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 10 10 10 10 10 10 10 10 10]] [['1', '8', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[10 10 10 13 10 10 10 10 10 10]] [['8', '8', '8', '1', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.91578194 -0.41684774 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13  6  8 10 10 10 10 10]] [['1', '8', '1', '6', '3', '8', '8', '8', '8', '8']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -4.83528130e-02
  1.13267726e-02  7.90016974e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
1544  r_total and score:  2463.812676604252 1.9525478426659082
Current Bleu score is:  1.9525478426659082

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 10 10 10 10 10 10 10 10 10]] [['1', '8', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 10 13  4 10 10 10 10 10]] [['0', '8', '8', '1', '9', '8', '8', '8', '8', '8']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446  0.66128847
 -0.16480582 -0.1111393  -0.08027338  0.50712153]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13  6  8 10 10 10 10 10]] [['1', '8', '1', '6', '3', '8', '8', '8', '8', '8']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -4.83528130e-02
  1.13267726e-02  7.90016974e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
1545  r_total and score:  2976.7575383151384 2.4268300758147343
Current Bleu score is:  2.4268300758147343

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 10 10 10 10 10 10 10 10 10]] [['1', '8', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[11 10 10 13  4 11 11 11 11 11]] [['0', '8', '8', '1', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13  6  8 11 10 10 10 10]] [['1', '8', '1', '6', '3', '0', '8', '8', '8', '8']] 

Reward:  [ 0.0003369   0.302282   -0.10016703 -0.04835281  0.01132677 -0.01189984
 -0.01605517 -0.0218721  -0.01579772  0.09980099]
1546  r_total and score:  3121.5415966018027 2.5230908126174025
Current Bleu score is:  2.5230908126174025

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 10 10 10 10 10 10 10 10 10]] [['1', '8', '8', '8', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 10 13 10 10 10 10 10 10]] [['1', '8', '8', '1', '8', '8', '8', '8', '8', '8']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 10 13  6  8 10 10 10 10 10]] [['1', '8', '1', '6', '3', '8', '8', '8', '8', '8']] 

Reward:  [ 3.36897350e-04  3.02281996e-01 -1.00167035e-01 -4.83528130e-02
  1.13267726e-02  7.90016974e-01 -1.82387617e-01 -1.22995850e-01
 -8.88370936e-02  5.61222232e-01]
1547  r_total and score:  2877.745875014606 2.1447791585840146
Current Bleu score is:  2.1447791585840146

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 11 11 11 11 11 11 11 11 11]] [['1', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[ 6 10 11 13 10 11 11 11 11 11]] [['6', '8', '0', '1', '8', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724 -0.02796267 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  9 13  6  8 10 11 11 11 11]] [['1', '2', '1', '6', '3', '8', '0', '0', '0', '0']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  7.15793012e-03
  1.11702861e-01  7.24234044e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
1548  r_total and score:  2541.415827061957 1.8081172537095074
Current Bleu score is:  1.8081172537095074

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 11 11 11 11 11 11 11 11 11]] [['1', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 11 11 13  4 11 11 11 11 11]] [['1', '0', '0', '1', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 11 13  6  8 10 11 11 11 11]] [['1', '0', '1', '6', '3', '8', '0', '0', '0', '0']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  7.15793012e-03
  1.11702861e-01  7.24234044e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
1549  r_total and score:  2098.2472515440363 1.4421782438681294
Current Bleu score is:  1.4421782438681294

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 11 11 11 11 11 11 11 11 11]] [['1', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10 11 13  4 11 11 11 11 11]] [['1', '8', '0', '1', '9', '0', '0', '0', '0', '0']] 

Reward:  [ 0.00091578  0.49801842 -0.21638988 -0.08467724  0.00418446 -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 11 13  6  8 10 11 11 11 11]] [['1', '0', '1', '6', '3', '8', '0', '0', '0', '0']] 

Reward:  [ 3.36897350e-04  9.23275230e-03  1.06755362e-02  7.15793012e-03
  1.11702861e-01  7.24234044e-01 -1.64805816e-01 -1.11139296e-01
 -8.02733758e-02  5.07121534e-01]
1550  r_total and score:  2395.2353344466856 1.7915143283652961
Current Bleu score is:  1.7915143283652961

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 11 11 11 11 11 11 11 11 11]] [['1', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 11 11 13 10  6  6  6  6  6]] [['1', '0', '0', '1', '8', '6', '6', '6', '6', '6']] 

Reward:  [ 0.00091578  0.0148619   0.01247675  0.00693186  0.13471813 -0.04080498
 -0.02464422 -0.0166192  -0.01200367  0.07583236]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 11 13  6  8  6 11 11 11 11]] [['1', '0', '1', '6', '3', '6', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1551  r_total and score:  2211.8323886989647 1.496948372148964
Current Bleu score is:  1.496948372148964

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 11 11 11 11 11 11 11 11 11]] [['1', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 10  4 13 11  6 12 12 12 12]] [['1', '8', '9', '1', '0', '6', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 11 13  6  8 11 11 11 11 11]] [['1', '0', '1', '6', '3', '0', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1552  r_total and score:  1920.4069349113138 1.0619309693009065
Current Bleu score is:  1.0619309693009065

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 11 11 11 11 11 11 11 11 11]] [['1', '0', '0', '0', '0', '0', '0', '0', '0', '0']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13 11  4 13 10  5  5  5  5  5]] [['1', '0', '9', '1', '8', '5', '5', '5', '5', '5']] 

Reward:  [ 0.00091578  0.0148619   0.26676664 -0.08467724  0.00418446 -0.03214713
 -0.03243361 -0.0218721  -0.01579772  0.09980099]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13 11 13  6  8  5 11 11 11 11]] [['1', '0', '1', '6', '3', '5', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286  0.01442
 -0.02930708 -0.01976367 -0.01427485  0.09018038]
1553  r_total and score:  1922.455551658432 1.0838826368876788
Current Bleu score is:  1.0838826368876788

 Lets copy the Q-value Net in to Q-target net!. And test the performace on the dev data: 

 Sample  0 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[5, 3]]) [['5']]
Eval  :  [[13 11 12 12 12 12 12 12 12 12]] [['1', '0', '7', '7', '7', '7', '7', '7', '7', '7']] 

Reward:  [ 0.05        0.02071068 -0.01567856 -0.00985202 -0.01496635 -0.00725627
 -0.00438243 -0.00295536 -0.00213459  0.01348511]

 Sample  3 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 4, 10,  9,  5,  4,  3]]) [['9', '8', '2', '5', '9']]
Eval  :  [[13  9  4 13  9 13 12 12 12 12]] [['1', '2', '9', '1', '2', '1', '7', '7', '7', '7']] 

Reward:  [ 0.00091578  0.49801842 -0.14295066 -0.1206786  -0.0332534  -0.04852557
 -0.02930708 -0.01976367 -0.01427485  0.09018038]

 Sample  6 -------------Target vs Eval_net prediction:--Raw---and---Decoded-----
Target:  tensor([[ 5, 10,  5,  7,  8, 10,  3]]) [['5', '8', '5', '4', '3', '8']]
Eval  :  [[13  9 13  6  8 13 11 11 11 11]] [['1', '2', '1', '6', '3', '1', '0', '0', '0', '0']] 

Reward:  [ 0.0003369   0.00923275  0.01067554  0.00715793  0.11170286 -0.01000653
 -0.02464422 -0.0166192  -0.01200367  0.07583236]
1554  r_total and score:  1527.6408344833546 0.0
Current Bleu score is:  0.0
